<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.profit.dao.ProfitDirectMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.profit.pojo.ProfitDirect">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="AGENT_NAME" jdbcType="VARCHAR" property="agentName" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="FRIST_AGENT_PID" jdbcType="VARCHAR" property="fristAgentPid" />
    <result column="FRIST_AGENT_NAME" jdbcType="VARCHAR" property="fristAgentName" />
    <result column="PARENT_AGENT_ID" jdbcType="VARCHAR" property="parentAgentId" />
    <result column="PARENT_AGENT_NAME" jdbcType="VARCHAR" property="parentAgentName" />
    <result column="TRANS_AMT" jdbcType="DECIMAL" property="transAmt" />
    <result column="TRANS_FEE" jdbcType="DECIMAL" property="transFee" />
    <result column="PROFIT_AMT" jdbcType="DECIMAL" property="profitAmt" />
    <result column="SUPPLY_AMT" jdbcType="DECIMAL" property="supplyAmt" />
    <result column="BUCKLE_AMT" jdbcType="DECIMAL" property="buckleAmt" />
    <result column="SHOULD_PROFIT" jdbcType="DECIMAL" property="shouldProfit" />
    <result column="ACTUAL_PROFIT" jdbcType="DECIMAL" property="actualProfit" />
    <result column="TRANS_MONTH" jdbcType="VARCHAR" property="transMonth" />
    <result column="AGENT_EMAIL" jdbcType="VARCHAR" property="agentEmail" />
    <result column="ACCOUNT_CODE" jdbcType="VARCHAR" property="accountCode" />
    <result column="ACCOUNT_NAME" jdbcType="VARCHAR" property="accountName" />
    <result column="BANK_OPEN" jdbcType="VARCHAR" property="bankOpen" />
    <result column="BANK_CODE" jdbcType="VARCHAR" property="bankCode" />
    <result column="BOSS_CODE" jdbcType="VARCHAR" property="bossCode" />
    <result column="PARENT_BUCKLE" jdbcType="DECIMAL" property="parentBuckle" />
    <result column="FRIST_AGENT_ID" jdbcType="VARCHAR" property="fristAgentId" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="PAYCOMPANY_NAME" jdbcType="VARCHAR" property="paycompanyName" />
    <result column="PAYCOMPANY_NUM" jdbcType="VARCHAR" property="paycompanyNum" />
    <result column="DAILY_AMT" jdbcType="DECIMAL" property="dailyAmt" />
    <result column="PARENT_SUPPLY" jdbcType="DECIMAL" property="parentSupply" />
    <result column="MUST_BUCKLE_AMT" jdbcType="DECIMAL" property="mustBuckleAmt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, AGENT_NAME, AGENT_ID, FRIST_AGENT_PID, FRIST_AGENT_NAME, PARENT_AGENT_ID, PARENT_AGENT_NAME,
    TRANS_AMT, TRANS_FEE, PROFIT_AMT, SUPPLY_AMT, BUCKLE_AMT, SHOULD_PROFIT, ACTUAL_PROFIT,
    TRANS_MONTH, AGENT_EMAIL, ACCOUNT_CODE, ACCOUNT_NAME, BANK_OPEN, BANK_CODE, BOSS_CODE,
    PARENT_BUCKLE, FRIST_AGENT_ID, STATUS, PAYCOMPANY_NAME, PAYCOMPANY_NUM, DAILY_AMT,
    PARENT_SUPPLY, MUST_BUCKLE_AMT
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.profit.pojo.ProfitDirectExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from P_PROFIT_DIRECT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from P_PROFIT_DIRECT
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.profit.pojo.ProfitDirectExample">
    delete from P_PROFIT_DIRECT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.profit.pojo.ProfitDirect">
    insert into P_PROFIT_DIRECT (ID, AGENT_NAME, AGENT_ID,
                                 FRIST_AGENT_PID, FRIST_AGENT_NAME, PARENT_AGENT_ID,
                                 PARENT_AGENT_NAME, TRANS_AMT, TRANS_FEE,
                                 PROFIT_AMT, SUPPLY_AMT, BUCKLE_AMT,
                                 SHOULD_PROFIT, ACTUAL_PROFIT, TRANS_MONTH,
                                 AGENT_EMAIL, ACCOUNT_CODE, ACCOUNT_NAME,
                                 BANK_OPEN, BANK_CODE, BOSS_CODE,
                                 PARENT_BUCKLE, FRIST_AGENT_ID, STATUS,
                                 PAYCOMPANY_NAME, PAYCOMPANY_NUM, DAILY_AMT,
                                 PARENT_SUPPLY, MUST_BUCKLE_AMT)
    values (#{id,jdbcType=VARCHAR}, #{agentName,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR},
                                                                   #{fristAgentPid,jdbcType=VARCHAR}, #{fristAgentName,jdbcType=VARCHAR}, #{parentAgentId,jdbcType=VARCHAR},
                                                                   #{parentAgentName,jdbcType=VARCHAR}, #{transAmt,jdbcType=DECIMAL}, #{transFee,jdbcType=DECIMAL},
                                                                   #{profitAmt,jdbcType=DECIMAL}, #{supplyAmt,jdbcType=DECIMAL}, #{buckleAmt,jdbcType=DECIMAL},
      #{shouldProfit,jdbcType=DECIMAL}, #{actualProfit,jdbcType=DECIMAL}, #{transMonth,jdbcType=VARCHAR},
      #{agentEmail,jdbcType=VARCHAR}, #{accountCode,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR},
      #{bankOpen,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, #{bossCode,jdbcType=VARCHAR},
      #{parentBuckle,jdbcType=DECIMAL}, #{fristAgentId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
            #{paycompanyName,jdbcType=VARCHAR}, #{paycompanyNum,jdbcType=VARCHAR}, #{dailyAmt,jdbcType=DECIMAL},
            #{parentSupply,jdbcType=DECIMAL}, #{mustBuckleAmt,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.profit.pojo.ProfitDirect">
    insert into P_PROFIT_DIRECT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="agentName != null">
        AGENT_NAME,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="fristAgentPid != null">
        FRIST_AGENT_PID,
      </if>
      <if test="fristAgentName != null">
        FRIST_AGENT_NAME,
      </if>
      <if test="parentAgentId != null">
        PARENT_AGENT_ID,
      </if>
      <if test="parentAgentName != null">
        PARENT_AGENT_NAME,
      </if>
      <if test="transAmt != null">
        TRANS_AMT,
      </if>
      <if test="transFee != null">
        TRANS_FEE,
      </if>
      <if test="profitAmt != null">
        PROFIT_AMT,
      </if>
      <if test="supplyAmt != null">
        SUPPLY_AMT,
      </if>
      <if test="buckleAmt != null">
        BUCKLE_AMT,
      </if>
      <if test="shouldProfit != null">
        SHOULD_PROFIT,
      </if>
      <if test="actualProfit != null">
        ACTUAL_PROFIT,
      </if>
      <if test="transMonth != null">
        TRANS_MONTH,
      </if>
      <if test="agentEmail != null">
        AGENT_EMAIL,
      </if>
      <if test="accountCode != null">
        ACCOUNT_CODE,
      </if>
      <if test="accountName != null">
        ACCOUNT_NAME,
      </if>
      <if test="bankOpen != null">
        BANK_OPEN,
      </if>
      <if test="bankCode != null">
        BANK_CODE,
      </if>
      <if test="bossCode != null">
        BOSS_CODE,
      </if>
      <if test="parentBuckle != null">
        PARENT_BUCKLE,
      </if>
      <if test="fristAgentId != null">
        FRIST_AGENT_ID,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="paycompanyName != null">
        PAYCOMPANY_NAME,
      </if>
      <if test="paycompanyNum != null">
        PAYCOMPANY_NUM,
      </if>
      <if test="dailyAmt != null">
        DAILY_AMT,
      </if>
      <if test="parentSupply != null">
        PARENT_SUPPLY,
      </if>
      <if test="mustBuckleAmt != null">
        MUST_BUCKLE_AMT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="fristAgentPid != null">
        #{fristAgentPid,jdbcType=VARCHAR},
      </if>
      <if test="fristAgentName != null">
        #{fristAgentName,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentId != null">
        #{parentAgentId,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentName != null">
        #{parentAgentName,jdbcType=VARCHAR},
      </if>
      <if test="transAmt != null">
        #{transAmt,jdbcType=DECIMAL},
      </if>
      <if test="transFee != null">
        #{transFee,jdbcType=DECIMAL},
      </if>
      <if test="profitAmt != null">
        #{profitAmt,jdbcType=DECIMAL},
      </if>
      <if test="supplyAmt != null">
        #{supplyAmt,jdbcType=DECIMAL},
      </if>
      <if test="buckleAmt != null">
        #{buckleAmt,jdbcType=DECIMAL},
      </if>
      <if test="shouldProfit != null">
        #{shouldProfit,jdbcType=DECIMAL},
      </if>
      <if test="actualProfit != null">
        #{actualProfit,jdbcType=DECIMAL},
      </if>
      <if test="transMonth != null">
        #{transMonth,jdbcType=VARCHAR},
      </if>
      <if test="agentEmail != null">
        #{agentEmail,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="bankOpen != null">
        #{bankOpen,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bossCode != null">
        #{bossCode,jdbcType=VARCHAR},
      </if>
      <if test="parentBuckle != null">
        #{parentBuckle,jdbcType=DECIMAL},
      </if>
      <if test="fristAgentId != null">
        #{fristAgentId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="paycompanyName != null">
        #{paycompanyName,jdbcType=VARCHAR},
      </if>
      <if test="paycompanyNum != null">
        #{paycompanyNum,jdbcType=VARCHAR},
      </if>
      <if test="dailyAmt != null">
        #{dailyAmt,jdbcType=DECIMAL},
      </if>
      <if test="parentSupply != null">
        #{parentSupply,jdbcType=DECIMAL},
      </if>
      <if test="mustBuckleAmt != null">
        #{mustBuckleAmt,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.profit.pojo.ProfitDirectExample" resultType="java.lang.Long">
    select count(*) from P_PROFIT_DIRECT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update P_PROFIT_DIRECT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.agentName != null">
        AGENT_NAME = #{record.agentName,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null">
        AGENT_ID = #{record.agentId,jdbcType=VARCHAR},
      </if>
      <if test="record.fristAgentPid != null">
        FRIST_AGENT_PID = #{record.fristAgentPid,jdbcType=VARCHAR},
      </if>
      <if test="record.fristAgentName != null">
        FRIST_AGENT_NAME = #{record.fristAgentName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentAgentId != null">
        PARENT_AGENT_ID = #{record.parentAgentId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentAgentName != null">
        PARENT_AGENT_NAME = #{record.parentAgentName,jdbcType=VARCHAR},
      </if>
      <if test="record.transAmt != null">
        TRANS_AMT = #{record.transAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.transFee != null">
        TRANS_FEE = #{record.transFee,jdbcType=DECIMAL},
      </if>
      <if test="record.profitAmt != null">
        PROFIT_AMT = #{record.profitAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.supplyAmt != null">
        SUPPLY_AMT = #{record.supplyAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.buckleAmt != null">
        BUCKLE_AMT = #{record.buckleAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.shouldProfit != null">
        SHOULD_PROFIT = #{record.shouldProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.actualProfit != null">
        ACTUAL_PROFIT = #{record.actualProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.transMonth != null">
        TRANS_MONTH = #{record.transMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.agentEmail != null">
        AGENT_EMAIL = #{record.agentEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.accountCode != null">
        ACCOUNT_CODE = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        ACCOUNT_NAME = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankOpen != null">
        BANK_OPEN = #{record.bankOpen,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null">
        BANK_CODE = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bossCode != null">
        BOSS_CODE = #{record.bossCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentBuckle != null">
        PARENT_BUCKLE = #{record.parentBuckle,jdbcType=DECIMAL},
      </if>
      <if test="record.fristAgentId != null">
        FRIST_AGENT_ID = #{record.fristAgentId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.paycompanyName != null">
        PAYCOMPANY_NAME = #{record.paycompanyName,jdbcType=VARCHAR},
      </if>
      <if test="record.paycompanyNum != null">
        PAYCOMPANY_NUM = #{record.paycompanyNum,jdbcType=VARCHAR},
      </if>
      <if test="record.dailyAmt != null">
        DAILY_AMT = #{record.dailyAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.parentSupply != null">
        PARENT_SUPPLY = #{record.parentSupply,jdbcType=DECIMAL},
      </if>
      <if test="record.mustBuckleAmt != null">
        MUST_BUCKLE_AMT = #{record.mustBuckleAmt,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update P_PROFIT_DIRECT
    set ID = #{record.id,jdbcType=VARCHAR},
    AGENT_NAME = #{record.agentName,jdbcType=VARCHAR},
    AGENT_ID = #{record.agentId,jdbcType=VARCHAR},
    FRIST_AGENT_PID = #{record.fristAgentPid,jdbcType=VARCHAR},
    FRIST_AGENT_NAME = #{record.fristAgentName,jdbcType=VARCHAR},
    PARENT_AGENT_ID = #{record.parentAgentId,jdbcType=VARCHAR},
    PARENT_AGENT_NAME = #{record.parentAgentName,jdbcType=VARCHAR},
    TRANS_AMT = #{record.transAmt,jdbcType=DECIMAL},
    TRANS_FEE = #{record.transFee,jdbcType=DECIMAL},
    PROFIT_AMT = #{record.profitAmt,jdbcType=DECIMAL},
    SUPPLY_AMT = #{record.supplyAmt,jdbcType=DECIMAL},
    BUCKLE_AMT = #{record.buckleAmt,jdbcType=DECIMAL},
    SHOULD_PROFIT = #{record.shouldProfit,jdbcType=DECIMAL},
    ACTUAL_PROFIT = #{record.actualProfit,jdbcType=DECIMAL},
    TRANS_MONTH = #{record.transMonth,jdbcType=VARCHAR},
    AGENT_EMAIL = #{record.agentEmail,jdbcType=VARCHAR},
    ACCOUNT_CODE = #{record.accountCode,jdbcType=VARCHAR},
    ACCOUNT_NAME = #{record.accountName,jdbcType=VARCHAR},
    BANK_OPEN = #{record.bankOpen,jdbcType=VARCHAR},
    BANK_CODE = #{record.bankCode,jdbcType=VARCHAR},
    BOSS_CODE = #{record.bossCode,jdbcType=VARCHAR},
    PARENT_BUCKLE = #{record.parentBuckle,jdbcType=DECIMAL},
    FRIST_AGENT_ID = #{record.fristAgentId,jdbcType=VARCHAR},
    STATUS = #{record.status,jdbcType=VARCHAR},
    PAYCOMPANY_NAME = #{record.paycompanyName,jdbcType=VARCHAR},
    PAYCOMPANY_NUM = #{record.paycompanyNum,jdbcType=VARCHAR},
    DAILY_AMT = #{record.dailyAmt,jdbcType=DECIMAL},
    PARENT_SUPPLY = #{record.parentSupply,jdbcType=DECIMAL},
    MUST_BUCKLE_AMT = #{record.mustBuckleAmt,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.profit.pojo.ProfitDirect">
    update P_PROFIT_DIRECT
    <set>
      <if test="agentName != null">
        AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="fristAgentPid != null">
        FRIST_AGENT_PID = #{fristAgentPid,jdbcType=VARCHAR},
      </if>
      <if test="fristAgentName != null">
        FRIST_AGENT_NAME = #{fristAgentName,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentId != null">
        PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentName != null">
        PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR},
      </if>
      <if test="transAmt != null">
        TRANS_AMT = #{transAmt,jdbcType=DECIMAL},
      </if>
      <if test="transFee != null">
        TRANS_FEE = #{transFee,jdbcType=DECIMAL},
      </if>
      <if test="profitAmt != null">
        PROFIT_AMT = #{profitAmt,jdbcType=DECIMAL},
      </if>
      <if test="supplyAmt != null">
        SUPPLY_AMT = #{supplyAmt,jdbcType=DECIMAL},
      </if>
      <if test="buckleAmt != null">
        BUCKLE_AMT = #{buckleAmt,jdbcType=DECIMAL},
      </if>
      <if test="shouldProfit != null">
        SHOULD_PROFIT = #{shouldProfit,jdbcType=DECIMAL},
      </if>
      <if test="actualProfit != null">
        ACTUAL_PROFIT = #{actualProfit,jdbcType=DECIMAL},
      </if>
      <if test="transMonth != null">
        TRANS_MONTH = #{transMonth,jdbcType=VARCHAR},
      </if>
      <if test="agentEmail != null">
        AGENT_EMAIL = #{agentEmail,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="bankOpen != null">
        BANK_OPEN = #{bankOpen,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        BANK_CODE = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bossCode != null">
        BOSS_CODE = #{bossCode,jdbcType=VARCHAR},
      </if>
      <if test="parentBuckle != null">
        PARENT_BUCKLE = #{parentBuckle,jdbcType=DECIMAL},
      </if>
      <if test="fristAgentId != null">
        FRIST_AGENT_ID = #{fristAgentId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="paycompanyName != null">
        PAYCOMPANY_NAME = #{paycompanyName,jdbcType=VARCHAR},
      </if>
      <if test="paycompanyNum != null">
        PAYCOMPANY_NUM = #{paycompanyNum,jdbcType=VARCHAR},
      </if>
      <if test="dailyAmt != null">
        DAILY_AMT = #{dailyAmt,jdbcType=DECIMAL},
      </if>
      <if test="parentSupply != null">
        PARENT_SUPPLY = #{parentSupply,jdbcType=DECIMAL},
      </if>
      <if test="mustBuckleAmt != null">
        MUST_BUCKLE_AMT = #{mustBuckleAmt,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.profit.pojo.ProfitDirect">
    update P_PROFIT_DIRECT
    set AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      AGENT_ID = #{agentId,jdbcType=VARCHAR},
      FRIST_AGENT_PID = #{fristAgentPid,jdbcType=VARCHAR},
      FRIST_AGENT_NAME = #{fristAgentName,jdbcType=VARCHAR},
      PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR},
      PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR},
      TRANS_AMT = #{transAmt,jdbcType=DECIMAL},
      TRANS_FEE = #{transFee,jdbcType=DECIMAL},
      PROFIT_AMT = #{profitAmt,jdbcType=DECIMAL},
      SUPPLY_AMT = #{supplyAmt,jdbcType=DECIMAL},
      BUCKLE_AMT = #{buckleAmt,jdbcType=DECIMAL},
      SHOULD_PROFIT = #{shouldProfit,jdbcType=DECIMAL},
      ACTUAL_PROFIT = #{actualProfit,jdbcType=DECIMAL},
      TRANS_MONTH = #{transMonth,jdbcType=VARCHAR},
      AGENT_EMAIL = #{agentEmail,jdbcType=VARCHAR},
      ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR},
      ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
      BANK_OPEN = #{bankOpen,jdbcType=VARCHAR},
      BANK_CODE = #{bankCode,jdbcType=VARCHAR},
      BOSS_CODE = #{bossCode,jdbcType=VARCHAR},
      PARENT_BUCKLE = #{parentBuckle,jdbcType=DECIMAL},
      FRIST_AGENT_ID = #{fristAgentId,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      PAYCOMPANY_NAME = #{paycompanyName,jdbcType=VARCHAR},
      PAYCOMPANY_NUM = #{paycompanyNum,jdbcType=VARCHAR},
      DAILY_AMT = #{dailyAmt,jdbcType=DECIMAL},
      PARENT_SUPPLY = #{parentSupply,jdbcType=DECIMAL},
      MUST_BUCKLE_AMT = #{mustBuckleAmt,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

  <select id="selectByAgentAndMon" parameterType="com.ryx.credit.profit.pojo.ProfitDirect" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM P_PROFIT_DIRECT
    WHERE AGENT_ID = #{agentId,jdbcType=VARCHAR} AND TRANS_MONTH = #{transMonth,jdbcType=VARCHAR}
  </select>

  <select id="selectByMonth" parameterType="com.ryx.credit.profit.pojo.ProfitDirect" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM P_PROFIT_DIRECT
    WHERE TRANS_MONTH = #{transMonth,jdbcType=VARCHAR}
  </select>

  <select id="selectSumTaxAmt" parameterType="com.ryx.credit.profit.pojo.ProfitDirect" resultType="java.math.BigDecimal">
    SELECT
    nvl(SUM(ACTUAL_PROFIT),0.00)
    FROM P_PROFIT_DIRECT
    WHERE TRANS_MONTH = #{transMonth,jdbcType=VARCHAR}
          AND FRIST_AGENT_PID =  #{fristAgentPid,jdbcType=VARCHAR}
          and PAYCOMPANY_NUM = 'Q000029564'
  </select>

  <select id="selectSumTaxAmt2" parameterType="com.ryx.credit.profit.pojo.ProfitDirect" resultType="java.math.BigDecimal">
    SELECT
      nvl(SUM(ACTUAL_PROFIT),0.00)
    FROM P_PROFIT_DIRECT
    WHERE TRANS_MONTH = #{transMonth,jdbcType=VARCHAR}
          AND FRIST_AGENT_PID =  #{fristAgentPid,jdbcType=VARCHAR}
          and PAYCOMPANY_NUM &lt;&gt; 'Q000029564'
  </select>

  <select id="selectBySupply"  resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM P_PROFIT_DIRECT
    where
    trans_month = to_char(add_months(sysdate,-1),'YYYYMM')
    and AGENT_ID in
    (select agent_id from p_profit_supply where agent_id is not null and SUPPLY_DATE=to_char(add_months(sysdate,-1),'YYYYMM') and supply_amt > 0 and BUS_BIG_TYPE='02')
  </select>

  <!--查询存在退单扣款的直发代理商-->
  <select id="selectByBuckle"  resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM P_PROFIT_DIRECT
    where TRANS_MONTH=to_char(add_months(sysdate,-1),'YYYYMM')
    AND agent_id in(select agent_id from P_DEDUCTION where  DEDUCTION_TYPE = '01' and source_id='02' AND DEDUCTION_DATE = to_char(add_months(sysdate,-1),'YYYYMM'))
  </select>

  <select id="getProfitDirectList" parameterType="java.util.Map" resultType="java.util.Map">
    <include refid="PAGING_START" />
    select AGENT_ID, AGENT_NAME,TRANS_MONTH, FRIST_AGENT_PID,
    FRIST_AGENT_NAME, PARENT_AGENT_ID, PARENT_AGENT_NAME,
    PROFIT_AMT, SUPPLY_AMT, BUCKLE_AMT, BASIC_PROFIT_AMT as SHOULD_PROFIT,
    REAL_TAX_AMT ,(BASIC_PROFIT_AMT-REAL_TAX_AMT) as ACTUAL_PROFIT,PARENT_BUCKLE,PARENT_SUPPLY,STATUS
    FROM (select ppd.*,ptdd.BASIC_PROFIT_AMT,ptdd.REAL_TAX_AMT from
    P_PROFIT_DIRECT ppd left join P_TAX_DEDUCTION_DETAIL ptdd on ppd.AGENT_ID=ptdd.AGENT_ID and ppd.TRANS_MONTH=ptdd.PROFIT_MONTH)
    <include refid="BASE_WHERE_SQL" />
    <include refid="SORTING" />
    <include refid="PAGING_END" />
  </select>

  <select id="getProfitDirectCount" parameterType="java.util.Map" resultType="java.lang.Long">
    SELECT COUNT(1)
    FROM P_PROFIT_DIRECT
    <include refid="BASE_WHERE_SQL" />
  </select>

  <select id="getSubBuckleByMonth" parameterType="com.ryx.credit.profit.pojo.ProfitDirect" resultType="java.math.BigDecimal">
    SELECT SUM(PARENT_BUCKLE)
    FROM P_PROFIT_DIRECT
    WHERE PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR} AND TRANS_MONTH = #{transMonth,jdbcType=VARCHAR}
  </select>

  <sql id="BASE_WHERE_SQL">
    <where>
      <trim prefixOverrides="and">
        <if test="AGENT_NAME != null and AGENT_NAME !=''">AND AGENT_NAME = #{AGENT_NAME}</if>
        <if test="AGENT_ID != null and AGENT_ID != ''">AND AGENT_ID = #{AGENT_ID}</if>
        <if test="FIRST_AGENT_NAME != null and FIRST_AGENT_NAME !=''">AND FRIST_AGENT_NAME = #{FIRST_AGENT_NAME}</if>
        <if test="FIRST_AGENT_ID != null and FIRST_AGENT_ID != ''">AND FRIST_AGENT_PID = #{FIRST_AGENT_ID}</if>
        <choose>
          <when test="DATESTART != null and DATESTART !='' and DATEEND !=null and DATEEND !=''">AND TRANS_MONTH between #{DATESTART} and #{DATEEND}</when>
          <otherwise>
            <if test="DATESTART != null and DATESTART !=''">AND TRANS_MONTH = #{DATESTART}</if>
          </otherwise>
        </choose>
      </trim>
    </where>
  </sql>

  <sql id="SORTING">
    ORDER BY TRANS_MONTH DESC
  </sql>

  <sql id="PAGING_START">
    <if test="begin != null  and end != null and end &gt;0">
      SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (
    </if>
  </sql>

  <sql id="PAGING_END">
    <if test="begin != null  and end != null and end &gt;0">
      ) A WHERE ROWNUM &lt;= #{end} ) WHERE RN &gt; #{begin}
    </if>
  </sql>

  <update id="updateFristAgentStatus" parameterType="java.lang.String">
    UPDATE P_PROFIT_DIRECT P SET  P.STATUS ='1' WHERE P.FRIST_AGENT_ID =#{agentId}
  </update>

  <!--直发分润修改状态查询 -->
  <select id="selectByFristAgentPid" parameterType="com.ryx.credit.profit.pojo.ProfitDirect" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM P_PROFIT_DIRECT
    WHERE FRIST_AGENT_PID = #{fristAgentPid,jdbcType=VARCHAR}
  </select>

  <!--根据唯一码查询业务平台编码-->
  <select id="selectByAgUniqNum" parameterType="string" resultType="string">
    select
    b.BUS_NUM
    from a_agent a
    left join a_agent_businfo b on a.id = b.agent_id and b.bus_platform in('5000','6000')
    where a.ag_uniq_num = #{agUniqNum,jdbcType=VARCHAR}
  </select>

  <!--直发分润修改状态 -->
  <update id="updateByStatus" parameterType="com.ryx.credit.profit.pojo.ProfitDirect">
    update P_PROFIT_DIRECT
    <set>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where FRIST_AGENT_PID = #{fristAgentPid,jdbcType=VARCHAR}
  </update>

  <select id="selectByWhere" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from P_PROFIT_DIRECT
    where
      1=1
      <if test="AGENT_NAME != null and AGENT_NAME !=''">AND AGENT_NAME = #{AGENT_NAME}</if>
      <if test="AGENT_ID != null and AGENT_ID != ''">AND AGENT_ID = #{AGENT_ID}</if>
      <if test="FIRST_AGENT_NAME != null and FIRST_AGENT_NAME !=''">AND FRIST_AGENT_NAME = #{FIRST_AGENT_NAME}</if>
      <if test="FIRST_AGENT_ID != null and FIRST_AGENT_ID != ''">AND FRIST_AGENT_PID = #{FIRST_AGENT_ID}</if>
      <choose>
        <when test="DATESTART != null and DATESTART !='' and DATEEND !=null and DATEEND !=''">AND TRANS_MONTH between #{DATESTART} and #{DATEEND}</when>
        <otherwise>
          <if test="DATESTART != null and DATESTART !=''">AND TRANS_MONTH = #{DATESTART}</if>
        </otherwise>
      </choose>
  </select>

  <select id="selectAmtByDeal" parameterType="com.ryx.credit.profit.pojo.ProfitDirect" resultType="java.math.BigDecimal">
    select
    SUM(TRANS_AMT)
    from P_PROFIT_DIRECT
    where
    TRANS_MONTH = #{transMonth,jdbcType=VARCHAR}
  </select>

  <select id="profitCount" parameterType="java.util.Map" resultType="java.util.Map">
    select count(1) as totalNum,sum(BASIC_PROFIT_AMT-REAL_TAX_AMT) as totalMoney
    from (select ppd.*,ptdd.BASIC_PROFIT_AMT,ptdd.REAL_TAX_AMT from
    P_PROFIT_DIRECT ppd left join P_TAX_DEDUCTION_DETAIL ptdd on ppd.AGENT_ID=ptdd.AGENT_ID and ppd.TRANS_MONTH=ptdd.PROFIT_MONTH)
    <include refid="BASE_WHERE_SQL" />
  </select>

  <delete id="deleteByMonth" parameterType="java.lang.String">
    delete from P_PROFIT_DIRECT
    where TRANS_MONTH = '${transMonth}'
  </delete>


  <!--清理计算数据重跑 -->
  <update id="clearComputData" parameterType="java.lang.String">
    update P_PROFIT_DIRECT
    set SUPPLY_AMT=0,BUCKLE_AMT=0,PARENT_BUCKLE=0,PARENT_SUPPLY=0,MUST_BUCKLE_AMT=0
    where TRANS_MONTH = #{profitDate,jdbcType=VARCHAR}
  </update>

  <!--直发分润冻结-->
  <update id="updateDirectProfitFozzen" parameterType="java.lang.String">
  update P_PROFIT_DIRECT dd
        set STATUS = '1'
        where dd.TRANS_MONTH = #{profitDate}
        and dd.FRIST_AGENT_ID in (select distinct AGENT_ID from A_AGENT_QUIT where STATUS=1 and CLO_REVIEW_STATUS in (2,3,5))
  </update>

  <update id="updateDirectProfitUnFozzen" parameterType="java.lang.String">
  update P_PROFIT_DIRECT dd
        set STATUS = '2'
        where dd.TRANS_MONTH = #{profitDate}
        and dd.FRIST_AGENT_ID in (select distinct AGENT_ID from A_AGENT_QUIT where STATUS=1 and CLO_REVIEW_STATUS = 4)
  </update>

</mapper>