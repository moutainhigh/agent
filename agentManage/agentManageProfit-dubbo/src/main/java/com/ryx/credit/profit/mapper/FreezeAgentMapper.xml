<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.profit.dao.FreezeAgentMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.profit.pojo.FreezeAgent">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="AGENT_NAME" jdbcType="VARCHAR" property="agentName" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="PARENT_AGENT_NAME" jdbcType="VARCHAR" property="parentAgentName" />
    <result column="PARENT_AGENT_ID" jdbcType="VARCHAR" property="parentAgentId" />
    <result column="FREEZE_TYPE" jdbcType="CHAR" property="freezeType" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="OPERATION_BATCH" jdbcType="VARCHAR" property="operationBatch" />
    <result column="REV1" jdbcType="VARCHAR" property="rev1" />
    <result column="REV2" jdbcType="VARCHAR" property="rev2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, AGENT_NAME, AGENT_ID, PARENT_AGENT_NAME, PARENT_AGENT_ID, FREEZE_TYPE, STATUS,
    OPERATION_BATCH, REV1, REV2
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.profit.pojo.FreezeAgentExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from P_FREEZE_AGENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from P_FREEZE_AGENT
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.profit.pojo.FreezeAgentExample">
    delete from P_FREEZE_AGENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.profit.pojo.FreezeAgent">
    insert into P_FREEZE_AGENT (ID, AGENT_NAME, AGENT_ID,
      PARENT_AGENT_NAME, PARENT_AGENT_ID, FREEZE_TYPE,
      STATUS, OPERATION_BATCH, REV1,
      REV2)
    values (#{id,jdbcType=VARCHAR}, #{agentName,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR},
      #{parentAgentName,jdbcType=VARCHAR}, #{parentAgentId,jdbcType=VARCHAR}, #{freezeType,jdbcType=CHAR},
      #{status,jdbcType=CHAR}, #{operationBatch,jdbcType=VARCHAR}, #{rev1,jdbcType=VARCHAR},
      #{rev2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.profit.pojo.FreezeAgent">
    insert into P_FREEZE_AGENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="agentName != null">
        AGENT_NAME,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="parentAgentName != null">
        PARENT_AGENT_NAME,
      </if>
      <if test="parentAgentId != null">
        PARENT_AGENT_ID,
      </if>
      <if test="freezeType != null">
        FREEZE_TYPE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="operationBatch != null">
        OPERATION_BATCH,
      </if>
      <if test="rev1 != null">
        REV1,
      </if>
      <if test="rev2 != null">
        REV2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentName != null">
        #{parentAgentName,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentId != null">
        #{parentAgentId,jdbcType=VARCHAR},
      </if>
      <if test="freezeType != null">
        #{freezeType,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="operationBatch != null">
        #{operationBatch,jdbcType=VARCHAR},
      </if>
      <if test="rev1 != null">
        #{rev1,jdbcType=VARCHAR},
      </if>
      <if test="rev2 != null">
        #{rev2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.profit.pojo.FreezeAgentExample" resultType="java.lang.Long">
    select count(*) from P_FREEZE_AGENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.profit.pojo.FreezeAgent">
    update P_FREEZE_AGENT
    <set>
      <if test="agentName != null">
        AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentName != null">
        PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentId != null">
        PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR},
      </if>
      <if test="freezeType != null">
        FREEZE_TYPE = #{freezeType,jdbcType=CHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="operationBatch != null">
        OPERATION_BATCH = #{operationBatch,jdbcType=VARCHAR},
      </if>
      <if test="rev1 != null">
        REV1 = #{rev1,jdbcType=VARCHAR},
      </if>
      <if test="rev2 != null">
        REV2 = #{rev2,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.profit.pojo.FreezeAgent">
    update P_FREEZE_AGENT
    set AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      AGENT_ID = #{agentId,jdbcType=VARCHAR},
      PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR},
      PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR},
      FREEZE_TYPE = #{freezeType,jdbcType=CHAR},
      STATUS = #{status,jdbcType=CHAR},
      OPERATION_BATCH = #{operationBatch,jdbcType=VARCHAR},
      REV1 = #{rev1,jdbcType=VARCHAR},
      REV2 = #{rev2,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

  <!--====================================以上代码自动生产，请勿更改=================================-->

  <select id="selectAllNotFreeze" parameterType="java.util.Map" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select * from (select gg.*,hh.AG_NAME as PARENT_AGENT_NAME from (select ee.*,ff.AG_NAME as AGENT_NAME from (select * from (select * from
    (select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'00'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'01'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000')
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'02'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000'))
    order by AGENT_ID)
    minus
    select AGENT_ID,PARENT_AGENT_ID,FREEZE_TYPE from P_FREEZE_AGENT where STATUS='1') ee left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg
    left join A_AGENT hh on gg.PARENT_AGENT_ID=hh.ID)

where 1=1
    <if test="agentId != null and  agentId!=''">
      and AGENT_ID = #{agentId,jdbcType=VARCHAR}
    </if>
    <if test="agentName != null and  agentName!=''">
      and AGENT_NAME = #{agentName,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentId  != null and  parentAgentId!='' ">
      and PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentName != null and  parentAgentName !='' ">
      and PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="selectAllNotFreezeCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    Select count(*) from (select * from (select gg.*,hh.AG_NAME as PARENT_AGENT_NAME from (select ee.*,ff.AG_NAME as AGENT_NAME from (select * from (select * from
    (select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'00'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'01'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000')
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'02'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000'))
    order by AGENT_ID)
    minus
    select AGENT_ID,PARENT_AGENT_ID,FREEZE_TYPE from P_FREEZE_AGENT where STATUS='1') ee left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg
    left join A_AGENT hh on gg.PARENT_AGENT_ID=hh.ID)

    where 1=1
    <if test="agentId != null and  agentId!=''">
      and AGENT_ID = #{agentId,jdbcType=VARCHAR}
    </if>
    <if test="agentName != null and  agentName!=''">
      and AGENT_NAME = #{agentName,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentId  != null and  parentAgentId!='' ">
      and PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentName != null and  parentAgentName !='' ">
      and PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR}
    </if>
    )
  </select>

  <select id="selectAllNotFreezeLower" parameterType="java.util.Map" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
select * from (select gg.*,hh.AG_NAME as PARENT_AGENT_NAME from (select ee.*,ff.AG_NAME as AGENT_NAME from (select * from (select * from (select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'00'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
(select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id
UNION ALL
select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'01'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
(select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000')
UNION ALL
select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'02'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
(select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000'))
 order by AGENT_ID)
minus
select AGENT_ID,PARENT_AGENT_ID,FREEZE_TYPE from P_FREEZE_AGENT where STATUS='1') ee left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg
left join A_AGENT hh on gg.PARENT_AGENT_ID=hh.ID where gg.FREEZE_TYPE='00')
start with
    1=1
    <if test="agentId != null and  agentId!=''">
      and AGENT_ID = #{agentId,jdbcType=VARCHAR}
    </if>
    <if test="agentName != null and  agentName!=''">
      and AGENT_NAME = #{agentName,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentId  != null and  parentAgentId!='' ">
      and PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentName != null and  parentAgentName !='' ">
      and PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR}
    </if>
connect by prior AGENT_ID =  PARENT_AGENT_ID

UNION ALL

select * from (select gg.*,hh.AG_NAME as PARENT_AGENT_NAME from (select ee.*,ff.AG_NAME as AGENT_NAME from (select * from (select * from (select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'00'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id
UNION ALL
select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'01'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000')
UNION ALL
select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'02'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000'))
 order by AGENT_ID)
minus
select AGENT_ID,PARENT_AGENT_ID,FREEZE_TYPE from P_FREEZE_AGENT where STATUS='1') ee left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg
left join A_AGENT hh on gg.PARENT_AGENT_ID=hh.ID where gg.FREEZE_TYPE='01')
start with

    1=1
    <if test="agentId != null and  agentId!=''">
      and AGENT_ID = #{agentId,jdbcType=VARCHAR}
    </if>
    <if test="agentName != null and  agentName!=''">
      and AGENT_NAME = #{agentName,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentId  != null and  parentAgentId!='' ">
      and PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentName != null and  parentAgentName !='' ">
      and PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR}
    </if>
connect by prior AGENT_ID =  PARENT_AGENT_ID

UNION ALL

select * from (select gg.*,hh.AG_NAME as PARENT_AGENT_NAME from (select ee.*,ff.AG_NAME as AGENT_NAME from (select * from (select * from (select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'00'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id
UNION ALL
select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'01'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000')
UNION ALL
select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'02'FREEZE_TYPE from A_AGENT_BUSINFO aa  left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or aa.BUS_PLATFORM = '5000'))
 order by AGENT_ID)
minus
    select AGENT_ID,PARENT_AGENT_ID,FREEZE_TYPE from P_FREEZE_AGENT where STATUS='1') ee left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg
left join A_AGENT hh on gg.PARENT_AGENT_ID=hh.ID where gg.FREEZE_TYPE='02')
start with
    1=1
    <if test="agentId != null and  agentId!=''">
      and AGENT_ID = #{agentId,jdbcType=VARCHAR}
    </if>
    <if test="agentName != null and  agentName!=''">
      and AGENT_NAME = #{agentName,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentId  != null and  parentAgentId!='' ">
      and PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentName != null and  parentAgentName !='' ">
      and PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR}
    </if>
  connect by prior AGENT_ID =  PARENT_AGENT_ID
    <include refid="OracleDialectSuffix" />
  </select>


  <select id="selectAllNotFreezeLowerCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from (select * from (select gg.*,hh.AG_NAME as PARENT_AGENT_NAME from (select ee.*,ff.AG_NAME as AGENT_NAME  from (select * from (select
    * from (select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'00'FREEZE_TYPE from A_AGENT_BUSINFO aa left
    join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'01'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or
    aa.BUS_PLATFORM = '5000')
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'02'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or
    aa.BUS_PLATFORM = '5000'))
    order by AGENT_ID)
    minus
    select AGENT_ID,PARENT_AGENT_ID,FREEZE_TYPE from P_FREEZE_AGENT where STATUS='1') ee left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg
    left join A_AGENT hh on gg.PARENT_AGENT_ID=hh.ID where gg.FREEZE_TYPE='00')
    start with
    1=1
    <if test="agentId != null and  agentId!=''">
      and AGENT_ID = #{agentId,jdbcType=VARCHAR}
    </if>
    <if test="agentName != null and  agentName!=''">
      and AGENT_NAME = #{agentName,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentId  != null and  parentAgentId!='' ">
      and PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentName != null and  parentAgentName !='' ">
      and PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR}
    </if>
    connect by prior AGENT_ID = PARENT_AGENT_ID

    UNION ALL

    select * from (select gg.*,hh.AG_NAME as PARENT_AGENT_NAME from (select ee.*,ff.AG_NAME as AGENT_NAME  from (select * from (select
    * from (select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'00'FREEZE_TYPE from A_AGENT_BUSINFO aa left
    join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'01'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or
    aa.BUS_PLATFORM = '5000')
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'02'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or
    aa.BUS_PLATFORM = '5000'))
    order by AGENT_ID)
    minus
    select AGENT_ID,PARENT_AGENT_ID,FREEZE_TYPE from P_FREEZE_AGENT where STATUS='1') ee left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg
    left join A_AGENT hh on gg.PARENT_AGENT_ID=hh.ID where gg.FREEZE_TYPE='01')
    start with

    1=1
    <if test="agentId != null and  agentId!=''">
      and AGENT_ID = #{agentId,jdbcType=VARCHAR}
    </if>
    <if test="agentName != null and  agentName!=''">
      and AGENT_NAME = #{agentName,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentId  != null and  parentAgentId!='' ">
      and PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentName != null and  parentAgentName !='' ">
      and PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR}
    </if>
    connect by prior AGENT_ID = PARENT_AGENT_ID

    UNION ALL

    select * from (select gg.*,hh.AG_NAME as PARENT_AGENT_NAME from (select ee.*,ff.AG_NAME as AGENT_NAME  from (select * from (select
    * from (select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'00'FREEZE_TYPE from A_AGENT_BUSINFO aa left
    join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'01'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or
    aa.BUS_PLATFORM = '5000')
    UNION ALL
    select distinct aa.AGENT_ID ,bb.AGENT_ID as PARENT_AGENT_ID,'02'FREEZE_TYPE from A_AGENT_BUSINFO aa left join
    (select ID,AGENT_ID from A_AGENT_BUSINFO) bb on aa.BUS_PARENT = bb.id where (aa.BUS_PLATFORM = '6000'or
    aa.BUS_PLATFORM = '5000'))
    order by AGENT_ID)
    minus
    select AGENT_ID,PARENT_AGENT_ID,FREEZE_TYPE from P_FREEZE_AGENT where STATUS='1') ee left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg
    left join A_AGENT hh on gg.PARENT_AGENT_ID=hh.ID where gg.FREEZE_TYPE='02')
    start with
    1=1
    <if test="agentId != null and  agentId!=''">
      and AGENT_ID = #{agentId,jdbcType=VARCHAR}
    </if>
    <if test="agentName != null and  agentName!=''">
      and AGENT_NAME = #{agentName,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentId  != null and  parentAgentId!='' ">
      and PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="parentAgentName != null and  parentAgentName !='' ">
      and PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR}
    </if>
    connect by prior AGENT_ID = PARENT_AGENT_ID
    )
  </select>


  <select id="freezeDetail" resultType="java.util.Map" parameterType="java.util.Map">
    <include refid="OracleDialectPrefix" />
    select * from(
    <if test="STATUS == null or STATUS == '' or STATUS == 1">
      select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.
      OPERATION_BATCH,aa.STATUS,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME, bb.FREEZE_REASON,bb.THAW_TIME,
      cast('' as varchar2(32)) as RELIEVE_TIME,cast('' as varchar2(256)) as RELIEVE_REASON,cast(0.00 as number(16,2))
      as RELIEVE_AMT
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '1'
      <if test= "STATUS != 1">
        union all
    </if>

    </if>
    <if test="STATUS == null or STATUS == '' or STATUS == 2">

        select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
        aa.OPERATION_BATCH,aa.STATUS,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME, bb.FREEZE_REASON,bb.THAW_TIME,
        cast('' as varchar2(32)) as RELIEVE_TIME,cast('' as varchar2(256)) as RELIEVE_REASON,cast(0.00 as number(16,2))
        as RELIEVE_AMT
        from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
        where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
        nvl(bb.PARENT_AGENT_NAME,'-')
        and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '2'
      <if test= "STATUS != 2">
        union all
      </if>
    </if>
    <if test="STATUS == null or STATUS == '' or STATUS == 0">

      select xxx.ID ,xxx.AGENT_NAME,xxx.AGENT_ID,xxx.PARENT_AGENT_ID,xxx.PARENT_AGENT_NAME,xxx.FREEZE_TYPE,
        xxx.OPERATION_BATCH,xxx.STATUS,xxx.FREEZE_AMT,xxx.FREEZE_TIME,
        xxx.FREEZE_REASON,xxx.THAW_TIME,zzz.RELIEVE_TIME,zzz.RELIEVE_REASON,zzz.RELIEVE_AMT from
        (select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
        aa.OPERATION_BATCH,aa.STATUS,aa.REV1,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME,
        bb.FREEZE_REASON,bb.THAW_TIME
        from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
        where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
        nvl(bb.PARENT_AGENT_NAME,'-')
        and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '0') xxx,
        (select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
        aa.OPERATION_BATCH,aa.STATUS,aa.REV1,bb.FREEZE_AMT as RELIEVE_AMT,bb.OPERATION_TIME as RELIEVE_TIME,
        bb.FREEZE_REASON as RELIEVE_REASON,bb.THAW_TIME
        from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
        where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
        nvl(bb.PARENT_AGENT_NAME,'-')
        and aa.REV1=bb.FREEZE_BATCH and aa.STATUS = '0') zzz where xxx.AGENT_ID = zzz.AGENT_ID and
        nvl(xxx.PARENT_AGENT_NAME,'-') = nvl(zzz.PARENT_AGENT_NAME,'-') and xxx.FREEZE_TYPE = zzz.FREEZE_TYPE

    </if>
    )
      where 1=1
      <if test="AGENT_ID != null and AGENT_ID != ''">
        and AGENT_ID = #{AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="AGENT_NAME != null and AGENT_NAME != '' ">
        and AGENT_NAME = #{AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_ID  != null and PARENT_AGENT_ID != ''">
        and PARENT_AGENT_ID = #{PARENT_AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_NAME != null and PARENT_AGENT_NAME != ''">
        and PARENT_AGENT_NAME = #{PARENT_AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="FREEZE_TYPE != null and FREEZE_TYPE != ''">
        and FREEZE_TYPE = #{FREEZE_TYPE,jdbcType=VARCHAR}
      </if>
      order by AGENT_ID
    <include refid="OracleDialectSuffix" />
  </select>


  <select id="freezeDetailCount" resultType="java.lang.Integer" parameterType="java.util.Map">


      select count(*) from(
        select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
        aa.OPERATION_BATCH,aa.STATUS,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME, bb.FREEZE_REASON,bb.THAW_TIME,
        cast('' as varchar2(32)) as RELIEVE_TIME,cast('' as varchar2(256)) as RELIEVE_REASON,cast(0.00 as number(16,2))
        as RELIEVE_AMT
        from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
        where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
        nvl(bb.PARENT_AGENT_NAME,'-')
        and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '1'

        union all

        select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
        aa.OPERATION_BATCH,aa.STATUS,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME, bb.FREEZE_REASON,bb.THAW_TIME,
        cast('' as varchar2(32)) as RELIEVE_TIME,cast('' as varchar2(256)) as RELIEVE_REASON,cast(0.00 as number(16,2))
        as RELIEVE_AMT
        from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
        where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
        nvl(bb.PARENT_AGENT_NAME,'-')
        and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '2'

        union all

        select xxx.ID ,xxx.AGENT_NAME,xxx.AGENT_ID,xxx.PARENT_AGENT_ID,xxx.PARENT_AGENT_NAME,xxx.FREEZE_TYPE,
        xxx.OPERATION_BATCH,xxx.STATUS,xxx.FREEZE_AMT,xxx.FREEZE_TIME,
        xxx.FREEZE_REASON,xxx.THAW_TIME,zzz.RELIEVE_TIME,zzz.RELIEVE_REASON,zzz.RELIEVE_AMT from
        (select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
        aa.OPERATION_BATCH,aa.STATUS,aa.REV1,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME,
        bb.FREEZE_REASON,bb.THAW_TIME
        from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
        where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
        nvl(bb.PARENT_AGENT_NAME,'-')
        and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '0') xxx,
        (select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
        aa.OPERATION_BATCH,aa.STATUS,aa.REV1,bb.FREEZE_AMT as RELIEVE_AMT,bb.OPERATION_TIME as RELIEVE_TIME,
        bb.FREEZE_REASON as RELIEVE_REASON,bb.THAW_TIME
        from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
        where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
        nvl(bb.PARENT_AGENT_NAME,'-')
        and aa.REV1=bb.FREEZE_BATCH and aa.STATUS = '0') zzz where xxx.AGENT_ID = zzz.AGENT_ID and
        nvl(xxx.PARENT_AGENT_NAME,'-') = nvl(zzz.PARENT_AGENT_NAME,'-') and xxx.FREEZE_TYPE = zzz.FREEZE_TYPE)

      where 1=1
      <if test="AGENT_ID != null and AGENT_ID != ''">
        and AGENT_ID = #{AGENT_ID,jdbcType=VARCHAR}
      </if>
    <if test="AGENT_NAME != null and AGENT_NAME != '' ">
      and AGENT_NAME = #{AGENT_NAME,jdbcType=VARCHAR}
    </if>
    <if test="PARENT_AGENT_ID  != null and PARENT_AGENT_ID != ''">
      and PARENT_AGENT_ID = #{PARENT_AGENT_ID,jdbcType=VARCHAR}
    </if>
    <if test="PARENT_AGENT_NAME != null and PARENT_AGENT_NAME != ''">
      and PARENT_AGENT_NAME = #{PARENT_AGENT_NAME,jdbcType=VARCHAR}
    </if>
    <if test="FREEZE_TYPE != null and FREEZE_TYPE != ''">
      and FREEZE_TYPE = #{FREEZE_TYPE,jdbcType=VARCHAR}
    </if>
    <if test="STATUS != null and STATUS != ''">
      and STATUS = #{STATUS,jdbcType=VARCHAR}
    </if>
    order by AGENT_ID

  </select>


  <select id="freezeDetailLower" resultType="java.util.Map" parameterType="java.util.Map">


    <if test="STATUS == null or STATUS == '' or STATUS == 1">
      select * from(
      select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.OPERATION_BATCH,aa.STATUS,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME, bb.FREEZE_REASON,bb.THAW_TIME,
      cast('' as varchar2(32)) as RELIEVE_TIME,cast('' as varchar2(256)) as RELIEVE_REASON,cast(0.00 as number(16,2))
      as RELIEVE_AMT
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '1')
      start with
       1=1
      <if test="AGENT_ID != null and AGENT_ID != ''">
        and AGENT_ID = #{AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="AGENT_NAME != null and AGENT_NAME != '' ">
        and AGENT_NAME = #{AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_ID  != null and PARENT_AGENT_ID != ''">
        and PARENT_AGENT_ID = #{PARENT_AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_NAME != null and PARENT_AGENT_NAME != ''">
        and PARENT_AGENT_NAME = #{PARENT_AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="FREEZE_TYPE != null and FREEZE_TYPE != ''">
        and FREEZE_TYPE = #{FREEZE_TYPE,jdbcType=VARCHAR}
      </if>
      connect by prior AGENT_ID = PARENT_AGENT_ID and FREEZE_TYPE = FREEZE_TYPE and STATUS = STATUS

      <if test="STATUS != 1">
        union all
      </if>

    </if>
    <if test="STATUS == null or STATUS == '' or STATUS == 2">
      select * from(
      select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.OPERATION_BATCH,aa.STATUS,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME, bb.FREEZE_REASON,bb.THAW_TIME,
      cast('' as varchar2(32)) as RELIEVE_TIME,cast('' as varchar2(256)) as RELIEVE_REASON,cast(0.00 as number(16,2))
      as RELIEVE_AMT
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '2')
      start with
       1=1
      <if test="AGENT_ID != null and AGENT_ID != ''">
        and AGENT_ID = #{AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="AGENT_NAME != null and AGENT_NAME != '' ">
        and AGENT_NAME = #{AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_ID  != null and PARENT_AGENT_ID != ''">
        and PARENT_AGENT_ID = #{PARENT_AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_NAME != null and PARENT_AGENT_NAME != ''">
        and PARENT_AGENT_NAME = #{PARENT_AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="FREEZE_TYPE != null and FREEZE_TYPE != ''">
        and FREEZE_TYPE = #{FREEZE_TYPE,jdbcType=VARCHAR}
      </if>
      connect by prior AGENT_ID = PARENT_AGENT_ID and FREEZE_TYPE = FREEZE_TYPE and STATUS = STATUS


      <if test="STATUS != 2">
        union all
      </if>

    </if>
    <if test="STATUS == null or STATUS == '' or STATUS == 0">
      select * from
      (select xxx.ID ,xxx.AGENT_NAME,xxx.AGENT_ID,xxx.PARENT_AGENT_ID,xxx.PARENT_AGENT_NAME,xxx.FREEZE_TYPE,
      xxx.OPERATION_BATCH,xxx.STATUS,xxx.FREEZE_AMT,xxx.FREEZE_TIME,
      xxx.FREEZE_REASON,xxx.THAW_TIME,zzz.RELIEVE_TIME,zzz.RELIEVE_REASON,zzz.RELIEVE_AMT from
      (select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.OPERATION_BATCH,aa.STATUS,aa.REV1,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME,
      bb.FREEZE_REASON,bb.THAW_TIME
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '0') xxx,
      (select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.OPERATION_BATCH,aa.STATUS,aa.REV1,bb.FREEZE_AMT as RELIEVE_AMT,bb.OPERATION_TIME as RELIEVE_TIME,
      bb.FREEZE_REASON as RELIEVE_REASON,bb.THAW_TIME
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.REV1=bb.FREEZE_BATCH and aa.STATUS = '0') zzz where xxx.AGENT_ID = zzz.AGENT_ID and
      nvl(xxx.PARENT_AGENT_NAME,'-') = nvl(zzz.PARENT_AGENT_NAME,'-') and xxx.FREEZE_TYPE = zzz.FREEZE_TYPE)
      start with
        1=1
      <if test="AGENT_ID != null and AGENT_ID != ''">
        and AGENT_ID = #{AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="AGENT_NAME != null and AGENT_NAME != '' ">
        and AGENT_NAME = #{AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_ID  != null and PARENT_AGENT_ID != ''">
        and PARENT_AGENT_ID = #{PARENT_AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_NAME != null and PARENT_AGENT_NAME != ''">
        and PARENT_AGENT_NAME = #{PARENT_AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="FREEZE_TYPE != null and FREEZE_TYPE != ''">
        and FREEZE_TYPE = #{FREEZE_TYPE,jdbcType=VARCHAR}
      </if>
      connect by prior AGENT_ID = PARENT_AGENT_ID and FREEZE_TYPE = FREEZE_TYPE and STATUS = STATUS
    </if>
  </select>

  <select id="freezeDetailLowerCount" resultType="java.lang.Integer" parameterType="java.util.Map">
select count(*) from(

    <if test="STATUS == null or STATUS == '' or STATUS == 1">
      select * from(
      select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.OPERATION_BATCH,aa.STATUS,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME, bb.FREEZE_REASON,bb.THAW_TIME,
      cast('' as varchar2(32)) as RELIEVE_TIME,cast('' as varchar2(256)) as RELIEVE_REASON,cast(0.00 as number(16,2))
      as RELIEVE_AMT
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '1')
      start with
      1=1
      <if test="AGENT_ID != null and AGENT_ID != ''">
        and AGENT_ID = #{AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="AGENT_NAME != null and AGENT_NAME != '' ">
        and AGENT_NAME = #{AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_ID  != null and PARENT_AGENT_ID != ''">
        and PARENT_AGENT_ID = #{PARENT_AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_NAME != null and PARENT_AGENT_NAME != ''">
        and PARENT_AGENT_NAME = #{PARENT_AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="FREEZE_TYPE != null and FREEZE_TYPE != ''">
        and FREEZE_TYPE = #{FREEZE_TYPE,jdbcType=VARCHAR}
      </if>
      connect by prior AGENT_ID = PARENT_AGENT_ID and FREEZE_TYPE = FREEZE_TYPE and STATUS = STATUS

      <if test="STATUS != 1">
        union all
      </if>

    </if>
    <if test="STATUS == null or STATUS == '' or STATUS == 2">
      select * from(
      select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.OPERATION_BATCH,aa.STATUS,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME, bb.FREEZE_REASON,bb.THAW_TIME,
      cast('' as varchar2(32)) as RELIEVE_TIME,cast('' as varchar2(256)) as RELIEVE_REASON,cast(0.00 as number(16,2))
      as RELIEVE_AMT
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '2')
      start with
      1=1
      <if test="AGENT_ID != null and AGENT_ID != ''">
        and AGENT_ID = #{AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="AGENT_NAME != null and AGENT_NAME != '' ">
        and AGENT_NAME = #{AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_ID  != null and PARENT_AGENT_ID != ''">
        and PARENT_AGENT_ID = #{PARENT_AGENT_ID,jdbcType=VARCHAR}
      </if>
      <if test="PARENT_AGENT_NAME != null and PARENT_AGENT_NAME != ''">
        and PARENT_AGENT_NAME = #{PARENT_AGENT_NAME,jdbcType=VARCHAR}
      </if>
      <if test="FREEZE_TYPE != null and FREEZE_TYPE != ''">
        and FREEZE_TYPE = #{FREEZE_TYPE,jdbcType=VARCHAR}
      </if>
      connect by prior AGENT_ID = PARENT_AGENT_ID and FREEZE_TYPE = FREEZE_TYPE and STATUS = STATUS


      <if test="STATUS != 2">
        union all
      </if>

    </if>
    <if test="STATUS == null or STATUS == '' or STATUS == 0">
      select * from
      (select xxx.ID ,xxx.AGENT_NAME,xxx.AGENT_ID,xxx.PARENT_AGENT_ID,xxx.PARENT_AGENT_NAME,xxx.FREEZE_TYPE,
      xxx.OPERATION_BATCH,xxx.STATUS,xxx.FREEZE_AMT,xxx.FREEZE_TIME,
      xxx.FREEZE_REASON,xxx.THAW_TIME,zzz.RELIEVE_TIME,zzz.RELIEVE_REASON,zzz.RELIEVE_AMT from
      (select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.OPERATION_BATCH,aa.STATUS,aa.REV1,bb.FREEZE_AMT,bb.OPERATION_TIME as FREEZE_TIME,
      bb.FREEZE_REASON,bb.THAW_TIME
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.OPERATION_BATCH=bb.FREEZE_BATCH and aa.STATUS = '0') xxx,
      (select aa.ID ,aa.AGENT_NAME,aa.AGENT_ID,aa.PARENT_AGENT_ID,aa.PARENT_AGENT_NAME,aa.FREEZE_TYPE,
      aa.OPERATION_BATCH,aa.STATUS,aa.REV1,bb.FREEZE_AMT as RELIEVE_AMT,bb.OPERATION_TIME as RELIEVE_TIME,
      bb.FREEZE_REASON as RELIEVE_REASON,bb.THAW_TIME
      from P_FREEZE_AGENT aa,P_FREEZE_OPERATION_RECORD bb
      where aa.FREEZE_TYPE = bb.FREEZE_TYPE and aa.AGENT_ID = bb.AGENT_ID and nvl(aa.PARENT_AGENT_NAME,'-') =
      nvl(bb.PARENT_AGENT_NAME,'-')
      and aa.REV1=bb.FREEZE_BATCH and aa.STATUS = '0') zzz where xxx.AGENT_ID = zzz.AGENT_ID and
      nvl(xxx.PARENT_AGENT_NAME,'-') = nvl(zzz.PARENT_AGENT_NAME,'-') and xxx.FREEZE_TYPE = zzz.FREEZE_TYPE)

      start with
      1=1
      <if test="AGENT_ID != null and AGENT_ID != ''">and AGENT_ID = #{AGENT_ID,jdbcType=VARCHAR}
      </if>
    <if
            test="AGENT_NAME != null and AGENT_NAME != '' ">
      and AGENT_NAME = #{AGENT_NAME,jdbcType=VARCHAR}
    </if>
    <if test="PARENT_AGENT_ID  != null and PARENT_AGENT_ID != ''">
      and PARENT_AGENT_ID = #{PARENT_AGENT_ID,jdbcType=VARCHAR}
    </if>
    <if test="PARENT_AGENT_NAME != null and PARENT_AGENT_NAME != ''">
      and PARENT_AGENT_NAME = #{PARENT_AGENT_NAME,jdbcType=VARCHAR}
    </if>
    <if test="FREEZE_TYPE != null and FREEZE_TYPE != ''">
      and FREEZE_TYPE = #{FREEZE_TYPE,jdbcType=VARCHAR}
    </if>
      connect by prior AGENT_ID = PARENT_AGENT_ID and FREEZE_TYPE = FREEZE_TYPE and STATUS = STATUS
    </if>
    )
  </select>




  <select id="selectAllFreezeWithSubordinate" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    <if test="orgId!=null and orgId!=''">
        select aa.*,pfor.FREEZE_AMT from (
    </if>
    select
    <include refid="Base_Column_List"/>  from P_FREEZE_AGENT start with STATUS='1'
    <if test="freezeAgent.agentId!=null and freezeAgent.agentId!=''">
     and AGENT_ID=#{freezeAgent.agentId,jdbcType=VARCHAR}
    </if>
    <if test="freezeAgent.agentName!=null and freezeAgent.agentName!=''">
      and AGENT_NAME=#{freezeAgent.agentName,jdbcType=VARCHAR}
    </if>
    <if test="freezeAgent.parentAgentId!=null and freezeAgent.parentAgentId!=''">
      and PARENT_AGENT_ID=#{freezeAgent.parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="freezeAgent.parentAgentName!=null and freezeAgent.parentAgentName!=''">
      and PARENT_AGENT_NAME=#{freezeAgent.parentAgentName,jdbcType=VARCHAR}
    </if>
    CONNECT BY  PRIOR AGENT_ID=PARENT_AGENT_ID and STATUS='1'
      <if test="orgId!=null and orgId!=''">
         ) aa left join A_AGENT on aa.AGENT_ID = A_AGENT.ID
        left join P_FREEZE_OPERATION_RECORD pfor on aa.AGENT_ID=pfor.AGENT_ID and aa.PARENT_AGENT_ID=pfor.PARENT_AGENT_ID and aa.FREEZE_TYPE=pfor.FREEZE_TYPE and aa.OPERATION_BATCH=pfor.THAW_OPERATOR
          where A_AGENT.AG_DOC_PRO= #{orgId}
      </if>

    <include refid="OracleDialectSuffix" />
  </select>

  <select id="countAllFreezeWithSubordinate" resultType="java.lang.Long">
    select count(1) from (
    <if test="orgId!=null and orgId!=''">
        select aa.* from (
    </if>
      select
      <include refid="Base_Column_List" />
      from P_FREEZE_AGENT start with STATUS='1'
      <if test="freezeAgent.agentId!=null and freezeAgent.agentId!=''">
        and AGENT_ID=#{freezeAgent.agentId,jdbcType=VARCHAR}
      </if>
      <if test="freezeAgent.agentName!=null and freezeAgent.agentName!=''">
        and AGENT_NAME=#{freezeAgent.agentName,jdbcType=VARCHAR}
      </if>
      <if test="freezeAgent.parentAgentId!=null and freezeAgent.parentAgentId!=''">
        and PARENT_AGENT_ID=#{freezeAgent.parentAgentId,jdbcType=VARCHAR}
      </if>
      <if test="freezeAgent.parentAgentName!=null and freezeAgent.parentAgentName!=''">
        and PARENT_AGENT_NAME=#{freezeAgent.parentAgentName,jdbcType=VARCHAR}
      </if>
      CONNECT BY  PRIOR AGENT_ID=PARENT_AGENT_ID and STATUS='1'
      <if test="orgId!=null and orgId!=''">
         ) aa left join A_AGENT on aa.AGENT_ID = A_AGENT.ID where A_AGENT.AG_DOC_PRO= #{orgId}
      </if>
    )
  </select>

  <select id="selectByExampleWithCity" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select pfa.*,pfor.FREEZE_AMT from P_FREEZE_AGENT pfa left join A_AGENT a on pfa.AGENT_ID=a.ID
    left join P_FREEZE_OPERATION_RECORD pfor on pfa.AGENT_ID=pfor.AGENT_ID and pfa.PARENT_AGENT_ID=pfor.PARENT_AGENT_ID and pfa.FREEZE_TYPE=pfor.FREEZE_TYPE and pfa.OPERATION_BATCH=pfor.THAW_OPERATOR
    where pfa.STATUS='1'
    <if test="orgId!=null and orgId!=''">
      and a.AG_DOC_PRO= #{orgId}
    </if>
    <if test="freezeAgent.agentId!=null and freezeAgent.agentId!=''">
        and pfa.AGENT_ID=#{freezeAgent.agentId,jdbcType=VARCHAR}
    </if>
    <if test="freezeAgent.agentName!=null and freezeAgent.agentName!=''">
      and pfa.AGENT_NAME=#{freezeAgent.agentName,jdbcType=VARCHAR}
    </if>
    <if test="freezeAgent.parentAgentId!=null and freezeAgent.parentAgentId!=''">
      and pfa.PARENT_AGENT_ID=#{freezeAgent.parentAgentId,jdbcType=VARCHAR}
    </if>
    <if test="freezeAgent.parentAgentName!=null and freezeAgent.parentAgentName!=''">
      and pfa.PARENT_AGENT_NAME=#{freezeAgent.parentAgentName,jdbcType=VARCHAR}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="countByExampleWithCity" resultType="java.lang.Long">
    select count(1) from (
        select pfa.* from P_FREEZE_AGENT pfa left join A_AGENT a on pfa.AGENT_ID=a.ID where pfa.STATUS='1'
        <if test="orgId!=null and orgId!=''">
          and a.AG_DOC_PRO= #{orgId}
        </if>
         <if test="freezeAgent.agentId!=null and freezeAgent.agentId!=''">
         and pfa.AGENT_ID=#{freezeAgent.agentId,jdbcType=VARCHAR}
        </if>
        <if test="freezeAgent.agentName!=null and freezeAgent.agentName!=''">
          and pfa.AGENT_NAME=#{freezeAgent.agentName,jdbcType=VARCHAR}
        </if>
        <if test="freezeAgent.parentAgentId!=null and freezeAgent.parentAgentId!=''">
          and pfa.PARENT_AGENT_ID=#{freezeAgent.parentAgentId,jdbcType=VARCHAR}
        </if>
        <if test="freezeAgent.parentAgentName!=null and freezeAgent.parentAgentName!=''">
          and pfa.PARENT_AGENT_NAME=#{freezeAgent.parentAgentName,jdbcType=VARCHAR}
        </if>
    )
  </select>
</mapper>