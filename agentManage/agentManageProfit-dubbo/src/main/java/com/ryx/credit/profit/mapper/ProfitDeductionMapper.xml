<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.profit.dao.ProfitDeductionMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.profit.pojo.ProfitDeduction">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PARENT_AGENT_PID" jdbcType="CHAR" property="parentAgentPid" />
    <result column="PARENT_AGENT_ID" jdbcType="CHAR" property="parentAgentId" />
    <result column="PARENT_AGENT_NAME" jdbcType="CHAR" property="parentAgentName" />
    <result column="AGENT_PID" jdbcType="VARCHAR" property="agentPid" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="AGENT_NAME" jdbcType="VARCHAR" property="agentName" />
    <result column="DEDUCTION_DATE" jdbcType="VARCHAR" property="deductionDate" />
    <result column="DEDUCTION_TYPE" jdbcType="CHAR" property="deductionType" />
    <result column="DEDUCTION_DESC" jdbcType="VARCHAR" property="deductionDesc" />
    <result column="SUM_DEDUCTION_AMT" jdbcType="DECIMAL" property="sumDeductionAmt" />
    <result column="ADD_DEDUCTION_AMT" jdbcType="DECIMAL" property="addDeductionAmt" />
    <result column="MUST_DEDUCTION_AMT" jdbcType="DECIMAL" property="mustDeductionAmt" />
    <result column="ACTUAL_DEDUCTION_AMT" jdbcType="DECIMAL" property="actualDeductionAmt" />
    <result column="NOT_DEDUCTION_AMT" jdbcType="DECIMAL" property="notDeductionAmt" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="SOURCE_ID" jdbcType="VARCHAR" property="sourceId" />
    <result column="UPPER_NOT_DEDUCTION_AMT" jdbcType="DECIMAL" property="upperNotDeductionAmt" />
    <result column="STAGING_STATUS" jdbcType="CHAR" property="stagingStatus" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="CREATE_DATE_TIME" jdbcType="TIMESTAMP" property="createDateTime" />
    <result column="DEDUCTION_STATUS" jdbcType="CHAR" property="deductionStatus" />
    <result column="NEXT_ID" jdbcType="VARCHAR" property="nextId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <if test="criterion.condition.contains('like')">
                    and ${criterion.condition} '%' || #{criterion.value} || '%'
                  </if>
                  <if test="!criterion.condition.contains('like')">
                    and ${criterion.condition}  #{criterion.value}
                  </if>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PARENT_AGENT_PID, PARENT_AGENT_ID, PARENT_AGENT_NAME, AGENT_PID, AGENT_ID, AGENT_NAME,
    DEDUCTION_DATE, DEDUCTION_TYPE, DEDUCTION_DESC, SUM_DEDUCTION_AMT, ADD_DEDUCTION_AMT, 
    MUST_DEDUCTION_AMT, ACTUAL_DEDUCTION_AMT, NOT_DEDUCTION_AMT, REMARK, SOURCE_ID, UPPER_NOT_DEDUCTION_AMT, 
    STAGING_STATUS, USER_ID, CREATE_DATE_TIME,DEDUCTION_STATUS,NEXT_ID
  </sql>
  <sql id="Base_Column_List_query">
    N.ID, PARENT_AGENT_PID, PARENT_AGENT_ID, PARENT_AGENT_NAME, AGENT_PID, AGENT_ID, AGENT_NAME,
    DEDUCTION_DATE, DEDUCTION_TYPE, DEDUCTION_DESC, SUM_DEDUCTION_AMT, ADD_DEDUCTION_AMT,
    MUST_DEDUCTION_AMT, ACTUAL_DEDUCTION_AMT, NOT_DEDUCTION_AMT, REMARK, SOURCE_ID, UPPER_NOT_DEDUCTION_AMT,
    STAGING_STATUS, USER_ID, CREATE_DATE_TIME,DEDUCTION_STATUS,NEXT_ID
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.profit.pojo.ProfitDeductionExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_query" />
    from P_DEDUCTION N ${innerJoinDepartment}
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from P_DEDUCTION
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="getCurrentDeductionAmtSum"  resultMap="BaseResultMap">
   select
    sum(case when d.deduction_Status = '0' then d.MUST_DEDUCTION_AMT else d.NOT_DEDUCTION_AMT end) MUST_DEDUCTION_AMT
    from  p_deduction d
    where   d.deduction_type In ('01','03') and d.deduction_date =#{deductionDate}
    and d.agent_id=#{agentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.profit.pojo.ProfitDeductionExample">
    delete from P_DEDUCTION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.profit.pojo.ProfitDeduction">
    insert into P_DEDUCTION (ID, PARENT_AGENT_PID, PARENT_AGENT_ID, 
      PARENT_AGENT_NAME, AGENT_PID, AGENT_ID, 
      AGENT_NAME, DEDUCTION_DATE, DEDUCTION_TYPE, 
      DEDUCTION_DESC, SUM_DEDUCTION_AMT, ADD_DEDUCTION_AMT, 
      MUST_DEDUCTION_AMT, ACTUAL_DEDUCTION_AMT, NOT_DEDUCTION_AMT, 
      REMARK, SOURCE_ID, UPPER_NOT_DEDUCTION_AMT, 
      STAGING_STATUS, USER_ID, CREATE_DATE_TIME,DEDUCTION_STATUS,NEXT_ID
      )
    values (#{id,jdbcType=VARCHAR}, #{parentAgentPid,jdbcType=CHAR}, #{parentAgentId,jdbcType=CHAR}, 
      #{parentAgentName,jdbcType=CHAR}, #{agentPid,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, 
      #{agentName,jdbcType=VARCHAR}, #{deductionDate,jdbcType=VARCHAR}, #{deductionType,jdbcType=CHAR}, 
      #{deductionDesc,jdbcType=VARCHAR}, #{sumDeductionAmt,jdbcType=DECIMAL}, #{addDeductionAmt,jdbcType=DECIMAL}, 
      #{mustDeductionAmt,jdbcType=DECIMAL}, #{actualDeductionAmt,jdbcType=DECIMAL}, #{notDeductionAmt,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR}, #{sourceId,jdbcType=VARCHAR}, #{upperNotDeductionAmt,jdbcType=DECIMAL}, 
      #{stagingStatus,jdbcType=CHAR}, #{userId,jdbcType=VARCHAR}, #{createDateTime,jdbcType=TIMESTAMP},#{deductionStatus,jdbcType=CHAR}
      , #{nextId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.profit.pojo.ProfitDeduction">
    insert into P_DEDUCTION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="parentAgentPid != null">
        PARENT_AGENT_PID,
      </if>
      <if test="parentAgentId != null">
        PARENT_AGENT_ID,
      </if>
      <if test="parentAgentName != null">
        PARENT_AGENT_NAME,
      </if>
      <if test="agentPid != null">
        AGENT_PID,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="agentName != null">
        AGENT_NAME,
      </if>
      <if test="deductionDate != null">
        DEDUCTION_DATE,
      </if>
      <if test="deductionType != null">
        DEDUCTION_TYPE,
      </if>
      <if test="deductionDesc != null">
        DEDUCTION_DESC,
      </if>
      <if test="sumDeductionAmt != null">
        SUM_DEDUCTION_AMT,
      </if>
      <if test="addDeductionAmt != null">
        ADD_DEDUCTION_AMT,
      </if>
      <if test="mustDeductionAmt != null">
        MUST_DEDUCTION_AMT,
      </if>
      <if test="actualDeductionAmt != null">
        ACTUAL_DEDUCTION_AMT,
      </if>
      <if test="notDeductionAmt != null">
        NOT_DEDUCTION_AMT,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="sourceId != null">
        SOURCE_ID,
      </if>
      <if test="upperNotDeductionAmt != null">
        UPPER_NOT_DEDUCTION_AMT,
      </if>
      <if test="stagingStatus != null">
        STAGING_STATUS,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="createDateTime != null">
        CREATE_DATE_TIME,
      </if>
      <if test="deductionStatus != null">
        DEDUCTION_STATUS,
      </if>
      <if test="nextId != null">
        NEXT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentPid != null">
        #{parentAgentPid,jdbcType=CHAR},
      </if>
      <if test="parentAgentId != null">
        #{parentAgentId,jdbcType=CHAR},
      </if>
      <if test="parentAgentName != null">
        #{parentAgentName,jdbcType=CHAR},
      </if>
      <if test="agentPid != null">
        #{agentPid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="deductionDate != null">
        #{deductionDate,jdbcType=VARCHAR},
      </if>
      <if test="deductionType != null">
        #{deductionType,jdbcType=CHAR},
      </if>
      <if test="deductionDesc != null">
        #{deductionDesc,jdbcType=VARCHAR},
      </if>
      <if test="sumDeductionAmt != null">
        #{sumDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="addDeductionAmt != null">
        #{addDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="mustDeductionAmt != null">
        #{mustDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="actualDeductionAmt != null">
        #{actualDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="notDeductionAmt != null">
        #{notDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="upperNotDeductionAmt != null">
        #{upperNotDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="stagingStatus != null">
        #{stagingStatus,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createDateTime != null">
        #{createDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deductionStatus != null">
        #{deductionStatus,jdbcType=CHAR},
      </if>
      <if test="nextId != null">
        #{nextId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.profit.pojo.ProfitDeductionExample" resultType="java.lang.Integer">
    select count(*) from P_DEDUCTION ${innerJoinDepartment}
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.profit.pojo.ProfitDeduction">
    update P_DEDUCTION
    <set>
      <if test="parentAgentPid != null">
        PARENT_AGENT_PID = #{parentAgentPid,jdbcType=CHAR},
      </if>
      <if test="parentAgentId != null">
        PARENT_AGENT_ID = #{parentAgentId,jdbcType=CHAR},
      </if>
      <if test="parentAgentName != null">
        PARENT_AGENT_NAME = #{parentAgentName,jdbcType=CHAR},
      </if>
      <if test="agentPid != null">
        AGENT_PID = #{agentPid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null">
        AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="deductionDate != null">
        DEDUCTION_DATE = #{deductionDate,jdbcType=VARCHAR},
      </if>
      <if test="deductionType != null">
        DEDUCTION_TYPE = #{deductionType,jdbcType=CHAR},
      </if>
      <if test="deductionDesc != null">
        DEDUCTION_DESC = #{deductionDesc,jdbcType=VARCHAR},
      </if>
      <if test="sumDeductionAmt != null">
        SUM_DEDUCTION_AMT = #{sumDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="addDeductionAmt != null">
        ADD_DEDUCTION_AMT = #{addDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="mustDeductionAmt != null">
        MUST_DEDUCTION_AMT = #{mustDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="actualDeductionAmt != null">
        ACTUAL_DEDUCTION_AMT = #{actualDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="notDeductionAmt != null">
        NOT_DEDUCTION_AMT = #{notDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        SOURCE_ID = #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="upperNotDeductionAmt != null">
        UPPER_NOT_DEDUCTION_AMT = #{upperNotDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="stagingStatus != null">
        STAGING_STATUS = #{stagingStatus,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createDateTime != null">
        CREATE_DATE_TIME = #{createDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deductionStatus != null">
        DEDUCTION_STATUS = #{deductionStatus,jdbcType=CHAR},
      </if>
      <if test="nextId != null">
        NEXT_ID = #{nextId,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.profit.pojo.ProfitDeduction">
    update P_DEDUCTION
    set PARENT_AGENT_PID = #{parentAgentPid,jdbcType=CHAR},
      PARENT_AGENT_ID = #{parentAgentId,jdbcType=CHAR},
      PARENT_AGENT_NAME = #{parentAgentName,jdbcType=CHAR},
      AGENT_PID = #{agentPid,jdbcType=VARCHAR},
      AGENT_ID = #{agentId,jdbcType=VARCHAR},
      AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      DEDUCTION_DATE = #{deductionDate,jdbcType=VARCHAR},
      DEDUCTION_TYPE = #{deductionType,jdbcType=CHAR},
      DEDUCTION_DESC = #{deductionDesc,jdbcType=VARCHAR},
      SUM_DEDUCTION_AMT = #{sumDeductionAmt,jdbcType=DECIMAL},
      ADD_DEDUCTION_AMT = #{addDeductionAmt,jdbcType=DECIMAL},
      MUST_DEDUCTION_AMT = #{mustDeductionAmt,jdbcType=DECIMAL},
      ACTUAL_DEDUCTION_AMT = #{actualDeductionAmt,jdbcType=DECIMAL},
      NOT_DEDUCTION_AMT = #{notDeductionAmt,jdbcType=DECIMAL},
      REMARK = #{remark,jdbcType=VARCHAR},
      SOURCE_ID = #{sourceId,jdbcType=VARCHAR},
      UPPER_NOT_DEDUCTION_AMT = #{upperNotDeductionAmt,jdbcType=DECIMAL},
      STAGING_STATUS = #{stagingStatus,jdbcType=CHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      CREATE_DATE_TIME = #{createDateTime,jdbcType=TIMESTAMP},
       DEDUCTION_STATUS = #{deductionStatus,jdbcType=CHAR}
      NEXT_ID = #{nextId,jdbcType=VARCHAR},
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

  <select id="getDeductDetail" parameterType="java.lang.String" resultType="java.util.Map">
     SELECT S.STAG_ID,S.SOURCE_ID, S.DEDUCTION_DATE, S.MUST_AMT,
     D.NOT_DEDUCTION_AMT,D.AGENT_ID,D.AGENT_PID,D.AGENT_NAME,D.PARENT_AGENT_ID,D.DEDUCTION_DESC
    FROM P_STAGING_DETAIL S
    LEFT JOIN P_DEDUCTION D
      ON S.STAG_ID = D.ID
     AND S.SOURCE_ID = D.SOURCE_ID
     AND D.DEDUCTION_TYPE = '02'
     AND D.STAGING_STATUS IN ('3', '5')
   WHERE S.REMARK = '机具扣款分期调整下月还款计划'
     AND S.STATUS = '0'
     AND S.DEDUCTION_DATE = #{deductDate}
  </select>

  <select id="totalBuckleByMonth" parameterType="com.ryx.credit.profit.pojo.ProfitDeduction" resultType="java.math.BigDecimal">
    SELECT SUM(MUST_DEDUCTION_AMT)
    FROM P_DEDUCTION
    WHERE DEDUCTION_DATE = #{deductionDate} AND AGENT_ID = #{agentId} AND DEDUCTION_TYPE = #{deductionType}
  </select>

  <select id="getSettleErrDeductionAmt" parameterType="com.ryx.credit.profit.pojo.ProfitDeduction" resultType="java.math.BigDecimal">
    SELECT SUM(MUST_DEDUCTION_AMT)
    FROM P_DEDUCTION
    WHERE DEDUCTION_DATE = #{deductionDate} AND  AGENT_ID = #{agentId} AND DEDUCTION_TYPE = '01' AND source_id = #{sourceId}
    and DEDUCTION_STATUS IS NULL
  </select>
  <delete id="deleteById">
    delete  P_DEDUCTION where id = #{id}
  </delete>

  <select id="getNotDeductDetail" resultType="java.util.Map">
    SELECT *
    FROM P_DEDUCTION D
    WHERE D.DEDUCTION_TYPE = '02'
    AND D.DEDUCTION_DATE = #{beforeDeductDate}
    AND D.NOT_DEDUCTION_AMT  <![CDATA[ <> ]]>  0
    AND D.ID NOT IN (SELECT P.STAG_ID FROM P_STAGING_DETAIL P)
    <if test="type == 1">
      AND D.SOURCE_ID  IN
    </if>
    <if test="type == 2">
      AND D.SOURCE_ID NOT IN
    </if>
    (SELECT N.SOURCE_ID
    FROM P_DEDUCTION N
    WHERE N.DEDUCTION_DATE = #{deductDate}
    AND N.DEDUCTION_TYPE = '02')
  </select>

  <delete id="resetDataDeduction">
    delete from P_DEDUCTION
    where DEDUCTION_DATE = to_char(sysdate-30 ,'yyyy-MM')
  </delete>
</mapper>