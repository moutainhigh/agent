<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.profit.dao.ProfitSupplyDiffMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.profit.pojo.ProfitSupplyDiff">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PARENT_AGENTPID" jdbcType="VARCHAR" property="parentAgentpid" />
    <result column="PARENT_AGENTID" jdbcType="VARCHAR" property="parentAgentid" />
    <result column="PARENT_AGENTNAME" jdbcType="VARCHAR" property="parentAgentname" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="AGENT_PID" jdbcType="VARCHAR" property="agentPid" />
    <result column="AGENT_NAME" jdbcType="VARCHAR" property="agentName" />
    <result column="DIFF_AMT" jdbcType="DECIMAL" property="diffAmt" />
    <result column="DIFF_DATE" jdbcType="VARCHAR" property="diffDate" />
    <result column="DIFF_TYPE" jdbcType="VARCHAR" property="diffType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PARENT_AGENTPID, PARENT_AGENTID, PARENT_AGENTNAME, AGENT_ID, AGENT_PID, AGENT_NAME, 
    DIFF_AMT, DIFF_DATE, DIFF_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.profit.pojo.ProfitSupplyDiffExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from P_PROFIT_SUPPLY_DIFF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from P_PROFIT_SUPPLY_DIFF
    where ID = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectAmtByWhere" parameterType="com.ryx.credit.profit.pojo.ProfitSupplyDiff" resultType="java.math.BigDecimal">
    select
    SUM(DIFF_AMT)
    from P_PROFIT_SUPPLY_DIFF
    where
    DIFF_DATE = #{diffDate,jdbcType=VARCHAR}
    AND AGENT_ID = #{agentId,jdbcType=VARCHAR}
    <if test="parentAgentid != null">
      AND PARENT_AGENTID=#{parentAgentid,jdbcType=VARCHAR}
    </if>
  </select>

  <delete id="deleteByExample" parameterType="com.ryx.credit.profit.pojo.ProfitSupplyDiffExample">
    delete from P_PROFIT_SUPPLY_DIFF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.profit.pojo.ProfitSupplyDiff">
    insert into P_PROFIT_SUPPLY_DIFF (ID, PARENT_AGENTPID, PARENT_AGENTID, 
      PARENT_AGENTNAME, AGENT_ID, AGENT_PID, 
      AGENT_NAME, DIFF_AMT, DIFF_DATE, 
      DIFF_TYPE)
    values (#{id,jdbcType=VARCHAR}, #{parentAgentpid,jdbcType=VARCHAR}, #{parentAgentid,jdbcType=VARCHAR}, 
      #{parentAgentname,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{agentPid,jdbcType=VARCHAR}, 
      #{agentName,jdbcType=VARCHAR}, #{diffAmt,jdbcType=DECIMAL}, #{diffDate,jdbcType=VARCHAR}, 
      #{diffType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.profit.pojo.ProfitSupplyDiff">
    insert into P_PROFIT_SUPPLY_DIFF
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="parentAgentpid != null">
        PARENT_AGENTPID,
      </if>
      <if test="parentAgentid != null">
        PARENT_AGENTID,
      </if>
      <if test="parentAgentname != null">
        PARENT_AGENTNAME,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="agentPid != null">
        AGENT_PID,
      </if>
      <if test="agentName != null">
        AGENT_NAME,
      </if>
      <if test="diffAmt != null">
        DIFF_AMT,
      </if>
      <if test="diffDate != null">
        DIFF_DATE,
      </if>
      <if test="diffType != null">
        DIFF_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentpid != null">
        #{parentAgentpid,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentid != null">
        #{parentAgentid,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentname != null">
        #{parentAgentname,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentPid != null">
        #{agentPid,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="diffAmt != null">
        #{diffAmt,jdbcType=DECIMAL},
      </if>
      <if test="diffDate != null">
        #{diffDate,jdbcType=VARCHAR},
      </if>
      <if test="diffType != null">
        #{diffType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.profit.pojo.ProfitSupplyDiffExample" resultType="java.lang.Long">
    select count(*) from P_PROFIT_SUPPLY_DIFF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.profit.pojo.ProfitSupplyDiff">
    update P_PROFIT_SUPPLY_DIFF
    <set>
      <if test="parentAgentpid != null">
        PARENT_AGENTPID = #{parentAgentpid,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentid != null">
        PARENT_AGENTID = #{parentAgentid,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentname != null">
        PARENT_AGENTNAME = #{parentAgentname,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentPid != null">
        AGENT_PID = #{agentPid,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null">
        AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="diffAmt != null">
        DIFF_AMT = #{diffAmt,jdbcType=DECIMAL},
      </if>
      <if test="diffDate != null">
        DIFF_DATE = #{diffDate,jdbcType=VARCHAR},
      </if>
      <if test="diffType != null">
        DIFF_TYPE = #{diffType,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.profit.pojo.ProfitSupplyDiff">
    update P_PROFIT_SUPPLY_DIFF
    set PARENT_AGENTPID = #{parentAgentpid,jdbcType=VARCHAR},
      PARENT_AGENTID = #{parentAgentid,jdbcType=VARCHAR},
      PARENT_AGENTNAME = #{parentAgentname,jdbcType=VARCHAR},
      AGENT_ID = #{agentId,jdbcType=VARCHAR},
      AGENT_PID = #{agentPid,jdbcType=VARCHAR},
      AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      DIFF_AMT = #{diffAmt,jdbcType=DECIMAL},
      DIFF_DATE = #{diffDate,jdbcType=VARCHAR},
      DIFF_TYPE = #{diffType,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

  <delete id="deleteByMonth" parameterType="java.lang.String">
    delete from P_PROFIT_SUPPLY_DIFF
    where DIFF_DATE = '${month}'
  </delete>

</mapper>