<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.profit.dao.ServerAmtDetailMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.profit.pojo.ServerAmtDetail">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PSA_ID" jdbcType="VARCHAR" property="psaId" />
    <result column="SERVER_DATE" jdbcType="VARCHAR" property="serverDate" />
    <result column="SUM_AMT" jdbcType="DECIMAL" property="sumAmt" />
    <result column="SERVER_AMT" jdbcType="DECIMAL" property="serverAmt" />
    <result column="REV1" jdbcType="VARCHAR" property="rev1" />
    <result column="REV2" jdbcType="VARCHAR" property="rev2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PSA_ID, SERVER_DATE, SUM_AMT, SERVER_AMT, REV1, REV2
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.profit.pojo.ServerAmtDetailExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from P_SERVER_AMT_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from P_SERVER_AMT_DETAIL
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.profit.pojo.ServerAmtDetailExample">
    delete from P_SERVER_AMT_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.profit.pojo.ServerAmtDetail">
    insert into P_SERVER_AMT_DETAIL (ID, PSA_ID, SERVER_DATE, 
      SUM_AMT, SERVER_AMT, REV1, 
      REV2)
    values (#{id,jdbcType=VARCHAR}, #{psaId,jdbcType=VARCHAR}, #{serverDate,jdbcType=VARCHAR}, 
      #{sumAmt,jdbcType=DECIMAL}, #{serverAmt,jdbcType=DECIMAL}, #{rev1,jdbcType=VARCHAR}, 
      #{rev2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.profit.pojo.ServerAmtDetail">
    insert into P_SERVER_AMT_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="psaId != null">
        PSA_ID,
      </if>
      <if test="serverDate != null">
        SERVER_DATE,
      </if>
      <if test="sumAmt != null">
        SUM_AMT,
      </if>
      <if test="serverAmt != null">
        SERVER_AMT,
      </if>
      <if test="rev1 != null">
        REV1,
      </if>
      <if test="rev2 != null">
        REV2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="psaId != null">
        #{psaId,jdbcType=VARCHAR},
      </if>
      <if test="serverDate != null">
        #{serverDate,jdbcType=VARCHAR},
      </if>
      <if test="sumAmt != null">
        #{sumAmt,jdbcType=DECIMAL},
      </if>
      <if test="serverAmt != null">
        #{serverAmt,jdbcType=DECIMAL},
      </if>
      <if test="rev1 != null">
        #{rev1,jdbcType=VARCHAR},
      </if>
      <if test="rev2 != null">
        #{rev2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.profit.pojo.ServerAmtDetailExample" resultType="java.lang.Long">
    select count(*) from P_SERVER_AMT_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.profit.pojo.ServerAmtDetail">
    update P_SERVER_AMT_DETAIL
    <set>
      <if test="psaId != null">
        PSA_ID = #{psaId,jdbcType=VARCHAR},
      </if>
      <if test="serverDate != null">
        SERVER_DATE = #{serverDate,jdbcType=VARCHAR},
      </if>
      <if test="sumAmt != null">
        SUM_AMT = #{sumAmt,jdbcType=DECIMAL},
      </if>
      <if test="serverAmt != null">
        SERVER_AMT = #{serverAmt,jdbcType=DECIMAL},
      </if>
      <if test="rev1 != null">
        REV1 = #{rev1,jdbcType=VARCHAR},
      </if>
      <if test="rev2 != null">
        REV2 = #{rev2,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.profit.pojo.ServerAmtDetail">
    update P_SERVER_AMT_DETAIL
    set PSA_ID = #{psaId,jdbcType=VARCHAR},
      SERVER_DATE = #{serverDate,jdbcType=VARCHAR},
      SUM_AMT = #{sumAmt,jdbcType=DECIMAL},
      SERVER_AMT = #{serverAmt,jdbcType=DECIMAL},
      REV1 = #{rev1,jdbcType=VARCHAR},
      REV2 = #{rev2,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>