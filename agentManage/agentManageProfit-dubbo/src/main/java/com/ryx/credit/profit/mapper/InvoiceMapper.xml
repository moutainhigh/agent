<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.profit.dao.InvoiceMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.profit.pojo.Invoice">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="AGENT_PID" jdbcType="VARCHAR" property="agentPid" />
    <result column="AGENT_NAME" jdbcType="VARCHAR" property="agentName" />
    <result column="PARENT_AGENT_ID" jdbcType="VARCHAR" property="parentAgentId" />
    <result column="PARENT_AGENT_NAME" jdbcType="VARCHAR" property="parentAgentName" />
    <result column="FACTOR_MONTH" jdbcType="VARCHAR" property="factorMonth" />
    <result column="INVOICE_AMT" jdbcType="DECIMAL" property="invoiceAmt" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="OPT_DATE" jdbcType="VARCHAR" property="optDate" />
    <result column="OPT_USER" jdbcType="VARCHAR" property="optUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, AGENT_ID, AGENT_PID, AGENT_NAME, PARENT_AGENT_ID, PARENT_AGENT_NAME, FACTOR_MONTH, 
    INVOICE_AMT, STATUS, REMARK, OPT_DATE, OPT_USER
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.profit.pojo.InvoiceExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from P_INVOICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from P_INVOICE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.profit.pojo.InvoiceExample">
    delete from P_INVOICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.profit.pojo.Invoice">
    insert into P_INVOICE (ID, AGENT_ID, AGENT_PID, 
      AGENT_NAME, PARENT_AGENT_ID, PARENT_AGENT_NAME, 
      FACTOR_MONTH, INVOICE_AMT, STATUS, 
      REMARK, OPT_DATE, OPT_USER
      )
    values (#{id,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{agentPid,jdbcType=VARCHAR}, 
      #{agentName,jdbcType=VARCHAR}, #{parentAgentId,jdbcType=VARCHAR}, #{parentAgentName,jdbcType=VARCHAR}, 
      #{factorMonth,jdbcType=VARCHAR}, #{invoiceAmt,jdbcType=DECIMAL}, #{status,jdbcType=CHAR}, 
      #{remark,jdbcType=VARCHAR}, #{optDate,jdbcType=VARCHAR}, #{optUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.profit.pojo.Invoice">
    insert into P_INVOICE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="agentPid != null">
        AGENT_PID,
      </if>
      <if test="agentName != null">
        AGENT_NAME,
      </if>
      <if test="parentAgentId != null">
        PARENT_AGENT_ID,
      </if>
      <if test="parentAgentName != null">
        PARENT_AGENT_NAME,
      </if>
      <if test="factorMonth != null">
        FACTOR_MONTH,
      </if>
      <if test="invoiceAmt != null">
        INVOICE_AMT,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="optDate != null">
        OPT_DATE,
      </if>
      <if test="optUser != null">
        OPT_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentPid != null">
        #{agentPid,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentId != null">
        #{parentAgentId,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentName != null">
        #{parentAgentName,jdbcType=VARCHAR},
      </if>
      <if test="factorMonth != null">
        #{factorMonth,jdbcType=VARCHAR},
      </if>
      <if test="invoiceAmt != null">
        #{invoiceAmt,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="optDate != null">
        #{optDate,jdbcType=VARCHAR},
      </if>
      <if test="optUser != null">
        #{optUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.profit.pojo.InvoiceExample" resultType="java.lang.Long">
    select count(*) from P_INVOICE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.profit.pojo.Invoice">
    update P_INVOICE
    <set>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentPid != null">
        AGENT_PID = #{agentPid,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null">
        AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentId != null">
        PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentName != null">
        PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR},
      </if>
      <if test="factorMonth != null">
        FACTOR_MONTH = #{factorMonth,jdbcType=VARCHAR},
      </if>
      <if test="invoiceAmt != null">
        INVOICE_AMT = #{invoiceAmt,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="optDate != null">
        OPT_DATE = #{optDate,jdbcType=VARCHAR},
      </if>
      <if test="optUser != null">
        OPT_USER = #{optUser,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.profit.pojo.Invoice">
    update P_INVOICE
    set AGENT_ID = #{agentId,jdbcType=VARCHAR},
      AGENT_PID = #{agentPid,jdbcType=VARCHAR},
      AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      PARENT_AGENT_ID = #{parentAgentId,jdbcType=VARCHAR},
      PARENT_AGENT_NAME = #{parentAgentName,jdbcType=VARCHAR},
      FACTOR_MONTH = #{factorMonth,jdbcType=VARCHAR},
      INVOICE_AMT = #{invoiceAmt,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=CHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      OPT_DATE = #{optDate,jdbcType=VARCHAR},
      OPT_USER = #{optUser,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>