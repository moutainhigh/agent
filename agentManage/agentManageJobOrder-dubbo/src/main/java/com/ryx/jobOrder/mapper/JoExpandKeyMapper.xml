<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.jobOrder.dao.JoExpandKeyMapper">
  <resultMap id="BaseResultMap" type="com.ryx.jobOrder.pojo.JoExpandKey">
    <id column="JID" jdbcType="VARCHAR" property="jid" />
    <result column="JO_KEY_ID" jdbcType="VARCHAR" property="joKeyId" />
    <result column="JO_KEY" jdbcType="VARCHAR" property="joKey" />
    <result column="JO_KEY_VALUE_TYPE" jdbcType="VARCHAR" property="joKeyValueType" />
    <result column="JO_KEY_NAME" jdbcType="VARCHAR" property="joKeyName" />
    <result column="JO_KEY_VALUE" jdbcType="VARCHAR" property="joKeyValue" />
    <result column="JO_EXPAND_SORT" jdbcType="DECIMAL" property="joExpandSort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    JID, JO_KEY_ID, JO_KEY, JO_KEY_VALUE_TYPE, JO_KEY_NAME, JO_KEY_VALUE, JO_EXPAND_SORT
  </sql>
  <select id="selectByExample" parameterType="com.ryx.jobOrder.pojo.JoExpandKeyExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from JO_EXPAND_KEY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from JO_EXPAND_KEY
    where JID = #{jid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.jobOrder.pojo.JoExpandKeyExample">
    delete from JO_EXPAND_KEY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.jobOrder.pojo.JoExpandKey">
    insert into JO_EXPAND_KEY (JID, JO_KEY_ID, JO_KEY, 
      JO_KEY_VALUE_TYPE, JO_KEY_NAME, JO_KEY_VALUE, 
      JO_EXPAND_SORT)
    values (#{jid,jdbcType=VARCHAR}, #{joKeyId,jdbcType=VARCHAR}, #{joKey,jdbcType=VARCHAR}, 
      #{joKeyValueType,jdbcType=VARCHAR}, #{joKeyName,jdbcType=VARCHAR}, #{joKeyValue,jdbcType=VARCHAR}, 
      #{joExpandSort,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.jobOrder.pojo.JoExpandKey">
    insert into JO_EXPAND_KEY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jid != null">
        JID,
      </if>
      <if test="joKeyId != null">
        JO_KEY_ID,
      </if>
      <if test="joKey != null">
        JO_KEY,
      </if>
      <if test="joKeyValueType != null">
        JO_KEY_VALUE_TYPE,
      </if>
      <if test="joKeyName != null">
        JO_KEY_NAME,
      </if>
      <if test="joKeyValue != null">
        JO_KEY_VALUE,
      </if>
      <if test="joExpandSort != null">
        JO_EXPAND_SORT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jid != null">
        #{jid,jdbcType=VARCHAR},
      </if>
      <if test="joKeyId != null">
        #{joKeyId,jdbcType=VARCHAR},
      </if>
      <if test="joKey != null">
        #{joKey,jdbcType=VARCHAR},
      </if>
      <if test="joKeyValueType != null">
        #{joKeyValueType,jdbcType=VARCHAR},
      </if>
      <if test="joKeyName != null">
        #{joKeyName,jdbcType=VARCHAR},
      </if>
      <if test="joKeyValue != null">
        #{joKeyValue,jdbcType=VARCHAR},
      </if>
      <if test="joExpandSort != null">
        #{joExpandSort,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.jobOrder.pojo.JoExpandKeyExample" resultType="java.lang.Long">
    select count(*) from JO_EXPAND_KEY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.jobOrder.pojo.JoExpandKey">
    update JO_EXPAND_KEY
    <set>
      <if test="joKeyId != null">
        JO_KEY_ID = #{joKeyId,jdbcType=VARCHAR},
      </if>
      <if test="joKey != null">
        JO_KEY = #{joKey,jdbcType=VARCHAR},
      </if>
      <if test="joKeyValueType != null">
        JO_KEY_VALUE_TYPE = #{joKeyValueType,jdbcType=VARCHAR},
      </if>
      <if test="joKeyName != null">
        JO_KEY_NAME = #{joKeyName,jdbcType=VARCHAR},
      </if>
      <if test="joKeyValue != null">
        JO_KEY_VALUE = #{joKeyValue,jdbcType=VARCHAR},
      </if>
      <if test="joExpandSort != null">
        JO_EXPAND_SORT = #{joExpandSort,jdbcType=DECIMAL},
      </if>
    </set>
    where JID = #{jid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.jobOrder.pojo.JoExpandKey">
    update JO_EXPAND_KEY
    set JO_KEY_ID = #{joKeyId,jdbcType=VARCHAR},
      JO_KEY = #{joKey,jdbcType=VARCHAR},
      JO_KEY_VALUE_TYPE = #{joKeyValueType,jdbcType=VARCHAR},
      JO_KEY_NAME = #{joKeyName,jdbcType=VARCHAR},
      JO_KEY_VALUE = #{joKeyValue,jdbcType=VARCHAR},
      JO_EXPAND_SORT = #{joExpandSort,jdbcType=DECIMAL}
    where JID = #{jid,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

  <sql id="Base_Column_List2">
    jk.JID, jk.JO_KEY_ID, jk.JO_KEY, jk.JO_KEY_VALUE_TYPE,jk.JO_KEY_NAME, jk.JO_KEY_VALUE, jk.JO_EXPAND_SORT
  </sql>
  <select id="selectByExampleLeftManage" parameterType="com.ryx.jobOrder.pojo.JoExpandKeyExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List2" />
    from JO_EXPAND_KEY jk
    left join jo_key_manage jm on jm.id = jk.JO_KEY_ID
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
</mapper>