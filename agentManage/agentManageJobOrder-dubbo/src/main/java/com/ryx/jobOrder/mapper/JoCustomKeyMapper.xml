<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.jobOrder.dao.JoCustomKeyMapper">
  <resultMap id="BaseResultMap" type="com.ryx.jobOrder.pojo.JoCustomKey">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="JO_FIRST_KEY_NUM" jdbcType="VARCHAR" property="joFirstKeyNum" />
    <result column="JO_SECOND_KEY_NUM" jdbcType="VARCHAR" property="joSecondKeyNum" />
    <result column="JO_KEY_ID" jdbcType="VARCHAR" property="joKeyId" />
    <result column="JO_KEY" jdbcType="VARCHAR" property="joKey" />
    <result column="JO_KEY_VALUE_TYPE" jdbcType="VARCHAR" property="joKeyValueType" />
    <result column="JO_KEY_NULL" jdbcType="VARCHAR" property="joKeyNull" />
    <result column="JO_KEY_SORT" jdbcType="DECIMAL" property="joKeySort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, JO_FIRST_KEY_NUM, JO_SECOND_KEY_NUM, JO_KEY_ID, JO_KEY, JO_KEY_VALUE_TYPE, JO_KEY_NULL, 
    JO_KEY_SORT
  </sql>
  <select id="selectByExample" parameterType="com.ryx.jobOrder.pojo.JoCustomKeyExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from JO_CUSTOM_KEY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from JO_CUSTOM_KEY
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.jobOrder.pojo.JoCustomKeyExample">
    delete from JO_CUSTOM_KEY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.jobOrder.pojo.JoCustomKey">
    insert into JO_CUSTOM_KEY (ID, JO_FIRST_KEY_NUM, JO_SECOND_KEY_NUM, 
      JO_KEY_ID, JO_KEY, JO_KEY_VALUE_TYPE, 
      JO_KEY_NULL, JO_KEY_SORT)
    values (#{id,jdbcType=VARCHAR}, #{joFirstKeyNum,jdbcType=VARCHAR}, #{joSecondKeyNum,jdbcType=VARCHAR}, 
      #{joKeyId,jdbcType=VARCHAR}, #{joKey,jdbcType=VARCHAR}, #{joKeyValueType,jdbcType=VARCHAR}, 
      #{joKeyNull,jdbcType=VARCHAR}, #{joKeySort,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.jobOrder.pojo.JoCustomKey">
    insert into JO_CUSTOM_KEY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="joFirstKeyNum != null">
        JO_FIRST_KEY_NUM,
      </if>
      <if test="joSecondKeyNum != null">
        JO_SECOND_KEY_NUM,
      </if>
      <if test="joKeyId != null">
        JO_KEY_ID,
      </if>
      <if test="joKey != null">
        JO_KEY,
      </if>
      <if test="joKeyValueType != null">
        JO_KEY_VALUE_TYPE,
      </if>
      <if test="joKeyNull != null">
        JO_KEY_NULL,
      </if>
      <if test="joKeySort != null">
        JO_KEY_SORT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="joFirstKeyNum != null">
        #{joFirstKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="joSecondKeyNum != null">
        #{joSecondKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="joKeyId != null">
        #{joKeyId,jdbcType=VARCHAR},
      </if>
      <if test="joKey != null">
        #{joKey,jdbcType=VARCHAR},
      </if>
      <if test="joKeyValueType != null">
        #{joKeyValueType,jdbcType=VARCHAR},
      </if>
      <if test="joKeyNull != null">
        #{joKeyNull,jdbcType=VARCHAR},
      </if>
      <if test="joKeySort != null">
        #{joKeySort,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.jobOrder.pojo.JoCustomKeyExample" resultType="java.lang.Long">
    select count(*) from JO_CUSTOM_KEY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.jobOrder.pojo.JoCustomKey">
    update JO_CUSTOM_KEY
    <set>
      <if test="joFirstKeyNum != null">
        JO_FIRST_KEY_NUM = #{joFirstKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="joSecondKeyNum != null">
        JO_SECOND_KEY_NUM = #{joSecondKeyNum,jdbcType=VARCHAR},
      </if>
      <if test="joKeyId != null">
        JO_KEY_ID = #{joKeyId,jdbcType=VARCHAR},
      </if>
      <if test="joKey != null">
        JO_KEY = #{joKey,jdbcType=VARCHAR},
      </if>
      <if test="joKeyValueType != null">
        JO_KEY_VALUE_TYPE = #{joKeyValueType,jdbcType=VARCHAR},
      </if>
      <if test="joKeyNull != null">
        JO_KEY_NULL = #{joKeyNull,jdbcType=VARCHAR},
      </if>
      <if test="joKeySort != null">
        JO_KEY_SORT = #{joKeySort,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.jobOrder.pojo.JoCustomKey">
    update JO_CUSTOM_KEY
    set JO_FIRST_KEY_NUM = #{joFirstKeyNum,jdbcType=VARCHAR},
      JO_SECOND_KEY_NUM = #{joSecondKeyNum,jdbcType=VARCHAR},
      JO_KEY_ID = #{joKeyId,jdbcType=VARCHAR},
      JO_KEY = #{joKey,jdbcType=VARCHAR},
      JO_KEY_VALUE_TYPE = #{joKeyValueType,jdbcType=VARCHAR},
      JO_KEY_NULL = #{joKeyNull,jdbcType=VARCHAR},
      JO_KEY_SORT = #{joKeySort,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

  <select id="selectMapByExample" parameterType="com.ryx.jobOrder.pojo.JoCustomKeyExample" resultType="map">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    ck.ID,    ck.JO_FIRST_KEY_NUM,    ck.JO_SECOND_KEY_NUM,    ck.JO_KEY_ID,    ck.JO_KEY,
    ck.JO_KEY_VALUE_TYPE,    ck.JO_KEY_NULL,    ck.JO_KEY_SORT,    km.JO_KEY_NAME
    from JO_CUSTOM_KEY ck
    left join jo_key_manage km on km.ID = ck.JO_KEY_ID
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="joCustomKeyList" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix"/>
    select c.firstLevel,d.secondLevel,nvl(e.count,'0') as tally,e.keyword, d.top3 as SecId
    ,c.top2 as firstId
    from
    (select a.jo_status,(a.jo_key_name || '-' || b.jo_key_name) as firstLevel,b.id as top2 from jo_key_manage a left join jo_key_manage b on a.id = b.jo_key_back_num where b.jo_key_type = '1') c
    left join
    (select a.jo_status, b.jo_key_name as secondLevel,a.id as top2,b.id as top3 from jo_key_manage a left join jo_key_manage b on a.id = b.jo_key_back_num where b.jo_key_type = '2' ) d on c.top2 = d.top2
    left join
    (select  LISTAGG(a.jo_key_name,',') WITHIN GROUP (ORDER BY a.jo_key_name) as keyword,b.jo_second_key_num as top3,count(1) as count from jo_key_manage a left join jo_custom_key b on a.id=b.jo_key_id where a.jo_key_type = '3' group by b.jo_second_key_num) e
    on d.top3 = e.top3
    <include refid="joCustomKeyWhere"/>
    <include refid="OracleDialectSuffix"/>
  </select>

  <sql id="joCustomKeyWhere">
     WHERE  c.jo_status=1 and d.jo_status=1
    <if test="map.firstJoKeyName!=null and map.firstJoKeyName!=''">
      and c.firstLevel LIKE CONCAT(CONCAT('%',#{map.firstJoKeyName}),'%')
    </if>
    <if test="map.secondJoKeyName!=null and map.secondJoKeyName!=''"> and d.secondLevel LIKE CONCAT(CONCAT('%',#{map.secondJoKeyName}),'%')</if>
    <if test="map.keyWordName!=null and map.keyWordName!=''">
      and e.keyword LIKE CONCAT(CONCAT('%',#{map.keyWordName}),'%')
    </if>
  </sql>


  <select id="joCustomKeyCount" parameterType="map" resultType="int">
    select count(*) from
    (select a.jo_status, (a.jo_key_name || '-' || b.jo_key_name) as firstLevel,b.id as top2 from jo_key_manage a left join jo_key_manage b on a.id = b.jo_key_back_num where b.jo_key_type = '1') c
    left join
    (select a.jo_status, b.jo_key_name as secondLevel,a.id as top2,b.id as top3 from jo_key_manage a left join jo_key_manage b on a.id = b.jo_key_back_num where b.jo_key_type = '2' ) d on c.top2 = d.top2
    left join
    (select LISTAGG(a.jo_key_name,',') WITHIN GROUP (ORDER BY a.jo_key_name) as keyword,b.jo_second_key_num as top3,count(1) as count from jo_key_manage a left join jo_custom_key b on a.id=b.jo_key_id where a.jo_key_type = '3' group by b.jo_second_key_num) e
    on d.top3 = e.top3
    <include refid="joCustomKeyWhere"/>
  </select>

  <select id="selectKeyWord" parameterType="string" resultType="map">
    select * from  jo_custom_key a left join jo_key_manage b on b.id=a.JO_KEY_ID
    where a.JO_SECOND_KEY_NUM=#{joSecondKeyNum}
  </select>

  <delete id="deletejoCustomKeyById" parameterType="string">
    delete from
    jo_custom_key
    where
    id = #{id}
  </delete>


  <select id="selectCustomListMapBySedType" parameterType="com.ryx.jobOrder.pojo.JoCustomKey" resultType="map">
    select * from  jo_custom_key a left join jo_key_manage b on b.id=a.JO_KEY_ID
    where b.JO_STATUS=1
    <if test="joCustomKey.joKeyId != null and joCustomKey.joKeyId != '' " >
      and a.JO_KEY_ID = #{joCustomKey.joKeyId}
    </if>
    <if test="joCustomKey.joSecondKeyNum != null and joCustomKey.joSecondKeyNum != '' " >
      and a.JO_SECOND_KEY_NUM = #{joCustomKey.joSecondKeyNum}
    </if>
  </select>
</mapper>