<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.account.dao.AuthLoginTokenMapper">
  <resultMap id="BaseResultMap" type="com.ryx.account.pojo.AuthLoginToken">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="AUTH_CODE" jdbcType="VARCHAR" property="authCode" />
    <result column="LOG_NAME" jdbcType="VARCHAR" property="logName" />
    <result column="PASS_WORD" jdbcType="VARCHAR" property="passWord" />
    <result column="PLATFORM_TYPE" jdbcType="VARCHAR" property="platformType" />
    <result column="TOKEN" jdbcType="VARCHAR" property="token" />
    <result column="TOKEN_BEGIN_TIME" jdbcType="TIMESTAMP" property="tokenBeginTime" />
    <result column="TOKEN_END_TIME" jdbcType="TIMESTAMP" property="tokenEndTime" />
    <result column="REQUEST_ID" jdbcType="VARCHAR" property="requestId" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="BUS_INFO" jdbcType="VARCHAR" property="busInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, AUTH_CODE, LOG_NAME, PASS_WORD, PLATFORM_TYPE, TOKEN, TOKEN_BEGIN_TIME, TOKEN_END_TIME,
    REQUEST_ID, STATUS, BUS_INFO
  </sql>
  <select id="selectByExample" parameterType="com.ryx.account.pojo.AuthLoginTokenExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from AUTH_LOGIN_TOKEN
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from AUTH_LOGIN_TOKEN
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.account.pojo.AuthLoginTokenExample">
    delete from AUTH_LOGIN_TOKEN
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.account.pojo.AuthLoginToken">
    insert into AUTH_LOGIN_TOKEN (ID, AUTH_CODE, LOG_NAME,
    PASS_WORD, PLATFORM_TYPE, TOKEN,
    TOKEN_BEGIN_TIME, TOKEN_END_TIME, REQUEST_ID,
    STATUS, BUS_INFO)
    values (#{id,jdbcType=VARCHAR}, #{authCode,jdbcType=VARCHAR}, #{logName,jdbcType=VARCHAR},
    #{passWord,jdbcType=VARCHAR}, #{platformType,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR},
    #{tokenBeginTime,jdbcType=TIMESTAMP}, #{tokenEndTime,jdbcType=TIMESTAMP}, #{requestId,jdbcType=VARCHAR},
    #{status,jdbcType=CHAR}, #{busInfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.account.pojo.AuthLoginToken">
    insert into AUTH_LOGIN_TOKEN
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="authCode != null">
        AUTH_CODE,
      </if>
      <if test="logName != null">
        LOG_NAME,
      </if>
      <if test="passWord != null">
        PASS_WORD,
      </if>
      <if test="platformType != null">
        PLATFORM_TYPE,
      </if>
      <if test="token != null">
        TOKEN,
      </if>
      <if test="tokenBeginTime != null">
        TOKEN_BEGIN_TIME,
      </if>
      <if test="tokenEndTime != null">
        TOKEN_END_TIME,
      </if>
      <if test="requestId != null">
        REQUEST_ID,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="busInfo != null">
        BUS_INFO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null">
        #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="logName != null">
        #{logName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="platformType != null">
        #{platformType,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="tokenBeginTime != null">
        #{tokenBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenEndTime != null">
        #{tokenEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="busInfo != null">
        #{busInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.account.pojo.AuthLoginTokenExample" resultType="java.lang.Long">
    select count(*) from AUTH_LOGIN_TOKEN
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.account.pojo.AuthLoginToken">
    update AUTH_LOGIN_TOKEN
    <set>
      <if test="authCode != null">
        AUTH_CODE = #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="logName != null">
        LOG_NAME = #{logName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        PASS_WORD = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="platformType != null">
        PLATFORM_TYPE = #{platformType,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        TOKEN = #{token,jdbcType=VARCHAR},
      </if>
      <if test="tokenBeginTime != null">
        TOKEN_BEGIN_TIME = #{tokenBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenEndTime != null">
        TOKEN_END_TIME = #{tokenEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestId != null">
        REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="busInfo != null">
        BUS_INFO = #{busInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.account.pojo.AuthLoginToken">
    update AUTH_LOGIN_TOKEN
    set AUTH_CODE = #{authCode,jdbcType=VARCHAR},
    LOG_NAME = #{logName,jdbcType=VARCHAR},
    PASS_WORD = #{passWord,jdbcType=VARCHAR},
    PLATFORM_TYPE = #{platformType,jdbcType=VARCHAR},
    TOKEN = #{token,jdbcType=VARCHAR},
    TOKEN_BEGIN_TIME = #{tokenBeginTime,jdbcType=TIMESTAMP},
    TOKEN_END_TIME = #{tokenEndTime,jdbcType=TIMESTAMP},
    REQUEST_ID = #{requestId,jdbcType=VARCHAR},
    STATUS = #{status,jdbcType=CHAR},
    BUS_INFO = #{busInfo,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

</mapper>