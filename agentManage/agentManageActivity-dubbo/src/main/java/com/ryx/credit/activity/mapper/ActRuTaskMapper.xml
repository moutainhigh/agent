<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.activity.dao.ActRuTaskMapper" >
  <resultMap id="BaseResultMap" type="com.ryx.credit.activity.entity.ActRuTask" >
    <id column="ID_" property="id" jdbcType="OTHER" />
    <result column="REV_" property="rev" jdbcType="DECIMAL" />
    <result column="EXECUTION_ID_" property="executionId" jdbcType="OTHER" />
    <result column="PROC_INST_ID_" property="procInstId" jdbcType="OTHER" />
    <result column="PROC_DEF_ID_" property="procDefId" jdbcType="OTHER" />
    <result column="NAME_" property="name" jdbcType="OTHER" />
    <result column="PARENT_TASK_ID_" property="parentTaskId" jdbcType="OTHER" />
    <result column="DESCRIPTION_" property="description" jdbcType="OTHER" />
    <result column="TASK_DEF_KEY_" property="taskDefKey" jdbcType="OTHER" />
    <result column="OWNER_" property="owner" jdbcType="OTHER" />
    <result column="ASSIGNEE_" property="assignee" jdbcType="OTHER" />
    <result column="DELEGATION_" property="delegation" jdbcType="OTHER" />
    <result column="PRIORITY_" property="priority" jdbcType="DECIMAL" />
    <result column="CREATE_TIME_" property="createTime" jdbcType="TIMESTAMP" />
    <result column="DUE_DATE_" property="dueDate" jdbcType="TIMESTAMP" />
    <result column="CATEGORY_" property="category" jdbcType="OTHER" />
    <result column="SUSPENSION_STATE_" property="suspensionState" jdbcType="DECIMAL" />
    <result column="TENANT_ID_" property="tenantId" jdbcType="OTHER" />
    <result column="FORM_KEY_" property="formKey" jdbcType="OTHER" />
    <result column="CLAIM_TIME_" property="claimTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID_, REV_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, 
    TASK_DEF_KEY_, OWNER_, ASSIGNEE_, DELEGATION_, PRIORITY_, CREATE_TIME_, DUE_DATE_, 
    CATEGORY_, SUSPENSION_STATE_, TENANT_ID_, FORM_KEY_, CLAIM_TIME_
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ryx.credit.activity.entity.ActRuTaskExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ACT_RU_TASK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Object" >
    select 
    <include refid="Base_Column_List" />
    from ACT_RU_TASK
    where ID_ = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.activity.entity.ActRuTaskExample" >
    delete from ACT_RU_TASK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.activity.entity.ActRuTask" >
    insert into ACT_RU_TASK (ID_, REV_, EXECUTION_ID_, 
      PROC_INST_ID_, PROC_DEF_ID_, NAME_, 
      PARENT_TASK_ID_, DESCRIPTION_, TASK_DEF_KEY_, 
      OWNER_, ASSIGNEE_, DELEGATION_, 
      PRIORITY_, CREATE_TIME_, DUE_DATE_, 
      CATEGORY_, SUSPENSION_STATE_, TENANT_ID_, 
      FORM_KEY_, CLAIM_TIME_)
    values (#{id,jdbcType=OTHER}, #{rev,jdbcType=DECIMAL}, #{executionId,jdbcType=OTHER}, 
      #{procInstId,jdbcType=OTHER}, #{procDefId,jdbcType=OTHER}, #{name,jdbcType=OTHER}, 
      #{parentTaskId,jdbcType=OTHER}, #{description,jdbcType=OTHER}, #{taskDefKey,jdbcType=OTHER}, 
      #{owner,jdbcType=OTHER}, #{assignee,jdbcType=OTHER}, #{delegation,jdbcType=OTHER}, 
      #{priority,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{dueDate,jdbcType=TIMESTAMP}, 
      #{category,jdbcType=OTHER}, #{suspensionState,jdbcType=DECIMAL}, #{tenantId,jdbcType=OTHER}, 
      #{formKey,jdbcType=OTHER}, #{claimTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.activity.entity.ActRuTask" >
    insert into ACT_RU_TASK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID_,
      </if>
      <if test="rev != null" >
        REV_,
      </if>
      <if test="executionId != null" >
        EXECUTION_ID_,
      </if>
      <if test="procInstId != null" >
        PROC_INST_ID_,
      </if>
      <if test="procDefId != null" >
        PROC_DEF_ID_,
      </if>
      <if test="name != null" >
        NAME_,
      </if>
      <if test="parentTaskId != null" >
        PARENT_TASK_ID_,
      </if>
      <if test="description != null" >
        DESCRIPTION_,
      </if>
      <if test="taskDefKey != null" >
        TASK_DEF_KEY_,
      </if>
      <if test="owner != null" >
        OWNER_,
      </if>
      <if test="assignee != null" >
        ASSIGNEE_,
      </if>
      <if test="delegation != null" >
        DELEGATION_,
      </if>
      <if test="priority != null" >
        PRIORITY_,
      </if>
      <if test="createTime != null" >
        CREATE_TIME_,
      </if>
      <if test="dueDate != null" >
        DUE_DATE_,
      </if>
      <if test="category != null" >
        CATEGORY_,
      </if>
      <if test="suspensionState != null" >
        SUSPENSION_STATE_,
      </if>
      <if test="tenantId != null" >
        TENANT_ID_,
      </if>
      <if test="formKey != null" >
        FORM_KEY_,
      </if>
      <if test="claimTime != null" >
        CLAIM_TIME_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=OTHER},
      </if>
      <if test="rev != null" >
        #{rev,jdbcType=DECIMAL},
      </if>
      <if test="executionId != null" >
        #{executionId,jdbcType=OTHER},
      </if>
      <if test="procInstId != null" >
        #{procInstId,jdbcType=OTHER},
      </if>
      <if test="procDefId != null" >
        #{procDefId,jdbcType=OTHER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=OTHER},
      </if>
      <if test="parentTaskId != null" >
        #{parentTaskId,jdbcType=OTHER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=OTHER},
      </if>
      <if test="taskDefKey != null" >
        #{taskDefKey,jdbcType=OTHER},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=OTHER},
      </if>
      <if test="assignee != null" >
        #{assignee,jdbcType=OTHER},
      </if>
      <if test="delegation != null" >
        #{delegation,jdbcType=OTHER},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dueDate != null" >
        #{dueDate,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null" >
        #{category,jdbcType=OTHER},
      </if>
      <if test="suspensionState != null" >
        #{suspensionState,jdbcType=DECIMAL},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=OTHER},
      </if>
      <if test="formKey != null" >
        #{formKey,jdbcType=OTHER},
      </if>
      <if test="claimTime != null" >
        #{claimTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.activity.entity.ActRuTaskExample" resultType="java.lang.Integer" >
    select count(*) from ACT_RU_TASK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.activity.entity.ActRuTask" >
    update ACT_RU_TASK
    <set >
      <if test="rev != null" >
        REV_ = #{rev,jdbcType=DECIMAL},
      </if>
      <if test="executionId != null" >
        EXECUTION_ID_ = #{executionId,jdbcType=OTHER},
      </if>
      <if test="procInstId != null" >
        PROC_INST_ID_ = #{procInstId,jdbcType=OTHER},
      </if>
      <if test="procDefId != null" >
        PROC_DEF_ID_ = #{procDefId,jdbcType=OTHER},
      </if>
      <if test="name != null" >
        NAME_ = #{name,jdbcType=OTHER},
      </if>
      <if test="parentTaskId != null" >
        PARENT_TASK_ID_ = #{parentTaskId,jdbcType=OTHER},
      </if>
      <if test="description != null" >
        DESCRIPTION_ = #{description,jdbcType=OTHER},
      </if>
      <if test="taskDefKey != null" >
        TASK_DEF_KEY_ = #{taskDefKey,jdbcType=OTHER},
      </if>
      <if test="owner != null" >
        OWNER_ = #{owner,jdbcType=OTHER},
      </if>
      <if test="assignee != null" >
        ASSIGNEE_ = #{assignee,jdbcType=OTHER},
      </if>
      <if test="delegation != null" >
        DELEGATION_ = #{delegation,jdbcType=OTHER},
      </if>
      <if test="priority != null" >
        PRIORITY_ = #{priority,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        CREATE_TIME_ = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dueDate != null" >
        DUE_DATE_ = #{dueDate,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null" >
        CATEGORY_ = #{category,jdbcType=OTHER},
      </if>
      <if test="suspensionState != null" >
        SUSPENSION_STATE_ = #{suspensionState,jdbcType=DECIMAL},
      </if>
      <if test="tenantId != null" >
        TENANT_ID_ = #{tenantId,jdbcType=OTHER},
      </if>
      <if test="formKey != null" >
        FORM_KEY_ = #{formKey,jdbcType=OTHER},
      </if>
      <if test="claimTime != null" >
        CLAIM_TIME_ = #{claimTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID_ = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.activity.entity.ActRuTask" >
    update ACT_RU_TASK
    set REV_ = #{rev,jdbcType=DECIMAL},
      EXECUTION_ID_ = #{executionId,jdbcType=OTHER},
      PROC_INST_ID_ = #{procInstId,jdbcType=OTHER},
      PROC_DEF_ID_ = #{procDefId,jdbcType=OTHER},
      NAME_ = #{name,jdbcType=OTHER},
      PARENT_TASK_ID_ = #{parentTaskId,jdbcType=OTHER},
      DESCRIPTION_ = #{description,jdbcType=OTHER},
      TASK_DEF_KEY_ = #{taskDefKey,jdbcType=OTHER},
      OWNER_ = #{owner,jdbcType=OTHER},
      ASSIGNEE_ = #{assignee,jdbcType=OTHER},
      DELEGATION_ = #{delegation,jdbcType=OTHER},
      PRIORITY_ = #{priority,jdbcType=DECIMAL},
      CREATE_TIME_ = #{createTime,jdbcType=TIMESTAMP},
      DUE_DATE_ = #{dueDate,jdbcType=TIMESTAMP},
      CATEGORY_ = #{category,jdbcType=OTHER},
      SUSPENSION_STATE_ = #{suspensionState,jdbcType=DECIMAL},
      TENANT_ID_ = #{tenantId,jdbcType=OTHER},
      FORM_KEY_ = #{formKey,jdbcType=OTHER},
      CLAIM_TIME_ = #{claimTime,jdbcType=TIMESTAMP}
    where ID_ = #{id,jdbcType=OTHER}
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

  <select id="queryMyTask" parameterType="map" resultType="map">
    select
    rt.ID_,rt.NAME_,br.ACTIV_ID, br.BUS_ID, br.BUS_TYPE, br.C_TIME, br.C_USER, br.ACTIV_STATUS, br.STATUS,ri.group_id_
    from ACT_RU_TASK rt, A_bus_act_rel br,act_ru_identitylink ri,a_agent a
    <where>
      rt.PROC_INST_ID_ = br.activ_id
      and ri.task_id_  = rt.id_
      and br.agent_id = a.id
      <include refid="queryMyTaskWhere" />
    </where>
  </select>


  <select id="queryHuddleMyTask" parameterType="map" resultType="map">
    select distinct
    rt.ID_,rt.NAME_,br.ACTIV_ID, br.BUS_ID, br.BUS_TYPE, br.C_TIME, br.C_USER, br.ACTIV_STATUS, br.STATUS,ri.group_id_
    from ACT_RU_TASK rt, A_bus_act_rel br,act_ru_identitylink ri
      where
      rt.PROC_INST_ID_ = br.activ_id
      and ri.task_id_  = rt.id_
      and br.AGENT_NAME like  concat(concat('%',','), '%')
      <if test="params.group != null and params.group!='' " >
        and ri.group_id_ = #{params.group}
      </if>

  </select>


  <sql id="queryMyTaskField" >
    rt.ID_,
    rt.NAME_,
    br.ACTIV_ID,
    br.BUS_ID,
    br.BUS_TYPE,
    to_char(br.C_TIME, 'yyyy-mm-dd hh24:mi:ss') C_TIME,
    br.C_USER,
    br.ACTIV_STATUS,
    br.STATUS,ri.group_id_, ri.user_id_,rt.assignee_,
    br.agent_id,
    br.agent_name,
    br.net_in_bus_type,
    br.data_shiro,
    to_char(rt.create_time_, 'yyyy-mm-dd hh24:mi:ss') as create_time,
    br.ag_doc_pro,
    br.ag_doc_district,
    nvl(plat.PLATFORM_NAME,0) as PLATFORM_NAME,
    c.NAME AS C_NAME,
    br.EXPLAIN,
    act_ex.PROC_INST_ID_,
    act_ex.id_ as EXECUTION_ID_,
    act_prodef.name_ as ACT_PRODEF_NAME_,
    act_prodef.id_ as ACT_PRODEF_ID_
  </sql>
  <sql id="queryMyTaskSql">
      (select
        <include refid="queryMyTaskField"/>
        from ACT_RU_TASK rt
        left join act_ru_execution act_ex on act_ex.proc_inst_id_=rt.proc_inst_id_ and rt.execution_id_=act_ex.id_
        left join act_re_procdef act_prodef on act_prodef.id_=act_ex.proc_def_id_
        left join A_bus_act_rel br on  rt.PROC_INST_ID_ = br.activ_id
        left join act_ru_identitylink ri on ri.task_id_ = rt.id_
        left join a_agent a on br.agent_id = a.id
        left join C_ORGANIZATION oa on to_char(oa.id)=br.ag_doc_pro
        left join C_ORGANIZATION ob on to_char(ob.id)=br.ag_doc_district
        left join a_platform plat on  plat.PLATFORM_NUM =replace(br.NET_IN_BUS_TYPE,'ACTIVITY_','')
        left join c_user c on br.c_user=to_char(c.ID)
        <where>
          1=1

          <if test="params.group==null or params.group==''">
            /*没有分组禁止查询*/
            and 1=-1
          </if>
          <if test="params.group=='agent'">
            /*代理商sql*/
            <include refid="queryMyTaskWhereAgent"/>
          </if>

          <if test="params.group=='city'">
            /*省区*/
            <include refid="queryMyTaskWhereCity"/>
          </if>

          <if test="params.group=='region'">
            /*大区*/
            <include refid="queryMyTaskWhereRegion"/>
          </if>
          <if test="params.group!='region' and params.group!='city' and params.group!='agent'">
            /*内部*/
            <include refid="queryMyTaskWhereInno"/>
          </if>
          /*通用查询sql*/
          <include refid="queryMyTaskWhere"/>
        </where>
        ORDER by rt.create_time_ desc
      )
  </sql>

  <sql id="dontUseThisSql">
    (
      select
      <include refid="queryMyTaskField"/>
      from ACT_RU_TASK rt
      left join act_ru_execution act_ex on act_ex.proc_inst_id_=rt.proc_inst_id_ and rt.execution_id_=act_ex.id_
      left join act_re_procdef act_prodef on act_prodef.id_=act_ex.proc_def_id_
      left join A_bus_act_rel br on  rt.PROC_INST_ID_ = br.activ_id
      left join act_ru_identitylink ri on ri.task_id_ = rt.id_
      left join a_agent a on br.agent_id = a.id
      left join C_ORGANIZATION oa on to_char(oa.id)=br.ag_doc_pro
      left join C_ORGANIZATION ob on to_char(ob.id)=br.ag_doc_district
      left join a_platform plat on  plat.PLATFORM_NUM =replace(br.NET_IN_BUS_TYPE,'ACTIVITY_','')
      left join c_user c on br.c_user=to_char(c.ID)
      <where>
        1=1
        /*通用查询sql*/
        <include refid="queryMyTaskWhere"/>
      </where>
      ORDER by rt.create_time_ asc
    )
  </sql>
  <!--查询用户任务-->
  <select id="queryMyTaskPage" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    <include refid="queryMyTaskSql"/>
    <include refid="OracleDialectSuffix" />
  </select>
  <!--查询用户任务-->
  <select id="dontUserThisSqlPage" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    <include refid="dontUseThisSql"/>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="dontUserThisSqlCount" parameterType="map" resultType="int">
    select count(*) from(
    <include refid="dontUseThisSql"/>
    )
  </select>




  <sql id="queryMyTaskWhereAgent" >
    <if test="params.group!=null and params.group!=''">
      <!--代理商任务查询条件-->
      and
      br.agent_id = #{params.agentId,jdbcType=VARCHAR}
      and
      (
       ri.group_id_='agent'
       <if test="params.agentId!=null">
          or ri.user_id_=nvl(#{params.agentId,jdbcType=VARCHAR},'nouser')
       </if>
       <if test="params.agentId!=null">
          or rt.assignee_=nvl(#{params.agentId,jdbcType=VARCHAR},'nouser')
       </if>
      )
    </if>
    <if test="params.group==null and params.group==''"> and 1==-1</if>
  </sql>


  <sql id="queryMyTaskWhereCity" >
    <if test="params.group!=null and params.group!=''">
      <!--省区任务查询-->
      (
        (
          ri.group_id_='city'
          and (oa.CODE like concat(#{params.orgCode,jdbcType=VARCHAR},'%') or ob.CODE like concat(#{params.orgCode,jdbcType=VARCHAR},'%'))
        )
        <if test="params.orgCode!=null">
        or ri.group_id_ = nvl(#{params.orgCode,jdbcType=VARCHAR},'nogroup')
        </if>
        <if test="params.userId!=null">
        or ri.user_id_ = to_char(#{params.userId})
        </if>
        <if test="params.userId!=null">
        or rt.assignee_ = to_char(#{params.userId})
        </if>
      )
    </if>
    <if test="params.group==null and params.group==''"> and 1==-1</if>
  </sql>


  <sql id="queryMyTaskWhereRegion" >
    <if test="params.group!=null and params.group!=''">
      <!--大区任务查询条件-->
      (
        (
          ri.group_id_='region'
          and (oa.CODE like concat(#{params.orgCode,jdbcType=VARCHAR},'%') or ob.CODE like concat(#{params.orgCode,jdbcType=VARCHAR},'%'))
        )
        <if test="params.orgCode!=null">
          or ri.group_id_ = #{params.orgCode,jdbcType=VARCHAR}
        </if>
        <if test="params.userId!=null">
          or ri.user_id_ = to_char(#{params.userId})
        </if>
        <if test="params.userId!=null">
          or rt.assignee_ = to_char(#{params.userId})
        </if>
      )
    </if>
    <if test="params.group==null and params.group==''"> and 1==-1</if>
  </sql>


  <sql id="queryMyTaskWhereInno" >
    <!--内部人员查询任务条件-->
    <if test="params.group!=null and params.group!=''">
      /*分组节点 （支持部门，角色id,用户id）*/
      and (
            ri.group_id_=#{params.group,jdbcType=VARCHAR}
            <if test="params.userId!=null">
              or ri.user_id_ = to_char(#{params.userId})
            </if>
            <if test="params.userId!=null">
              or rt.assignee_ = to_char(#{params.userId})
            </if>
            <if test="params.roleIds != null and params.roleIds.size>0 " >
              <foreach collection="params.roleIds"  item="roleId" index="index" open=" or ri.group_id_ in (" close=")" separator=",">
                to_char(#{roleId})
              </foreach>
            </if>
          )
      and
        /*审批品牌权限*/
        (
          br.NET_IN_BUS_TYPE is null
          or
          (
            br.NET_IN_BUS_TYPE is not null
            <if test="params.netInUrls != null and params.netInUrls.size>0">
              <foreach collection="params.netInUrls" separator="," item="netInUrl" index="index" open=" and br.NET_IN_BUS_TYPE in (" close=")">
                #{netInUrl}
              </foreach>
            </if>
            <if test="params.netInUrls == null or params.netInUrls.size==0">
              AND 1 = -1
            </if>
          )
        )
        /*审批类型权限*/
        <if test="params.dbUrls != null and params.dbUrls.size>0" >
          <foreach collection="params.dbUrls" separator="," item="dbUrl" index="index" open=" and br.DATA_SHIRO in (" close=")">
            #{dbUrl}
          </foreach>
        </if>
        <if test="params.dbUrls == null and params.dbUrls.size==0" >
          and 1=-1
        </if>
    </if>
    <if test="params.group==null and params.group==''"> and 1==-1</if>
  </sql>

  <sql id="queryMyTaskWhere" >
    <!--通用任务查询条件-->
    <if test="params.busActRelBusType != null and params.busActRelBusType!='' " >
      and br.BUS_TYPE = #{params.busActRelBusType}
    </if>
    <if test="params.agentId != null and params.agentId!='' " >
      and br.agent_id = #{params.agentId}
    </if>
    <if test="params.agentName != null and params.agentName!='' " >
      and br.agent_name like concat(concat( '%', #{params.agentName}),'%')
    </if>
    <if test="params.subBegin != null and params.subBegin!='' " >
      and br.C_TIME <![CDATA[ >= ]]> to_date(#{params.subBegin}, 'yyyy-mm-dd hh24:mi:ss')
    </if>
    <if test="params.subEnd != null and params.subEnd!='' " >
      and br.C_TIME <![CDATA[ <= ]]> to_date(#{params.subEnd}, 'yyyy-mm-dd hh24:mi:ss')
    </if>
    <if test="params.busPlatform != null and params.busPlatform!='' " >
      and  plat.PLATFORM_NUM=#{params.busPlatform}
    </if>
    <if test="params.explain != null and params.explain!='' " >
      and  br.EXPLAIN=#{params.explain}
    </if>
  </sql>

  <select id="queryMyTaskCount" parameterType="map" resultType="int">
    select count(*) from(
      <include refid="queryMyTaskSql"/>
    )
  </select>





</mapper>