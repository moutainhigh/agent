<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.activity.dao.ProfitDeductionMapper" >
  <resultMap id="BaseResultMap" type="com.ryx.credit.activity.entity.ProfitDeduction" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PARENT_AGENT_PID" property="parentAgentPid" jdbcType="CHAR" />
    <result column="PARENT_AGENT_ID" property="parentAgentId" jdbcType="CHAR" />
    <result column="PARENT_AGENT_NAME" property="parentAgentName" jdbcType="CHAR" />
    <result column="AGENT_PID" property="agentPid" jdbcType="VARCHAR" />
    <result column="AGENT_ID" property="agentId" jdbcType="VARCHAR" />
    <result column="AGENT_NAME" property="agentName" jdbcType="VARCHAR" />
    <result column="DEDUCTION_DATE" property="deductionDate" jdbcType="VARCHAR" />
    <result column="DEDUCTION_TYPE" property="deductionType" jdbcType="CHAR" />
    <result column="DEDUCTION_DESC" property="deductionDesc" jdbcType="VARCHAR" />
    <result column="SUM_DEDUCTION_AMT" property="sumDeductionAmt" jdbcType="DECIMAL" />
    <result column="ADD_DEDUCTION_AMT" property="addDeductionAmt" jdbcType="DECIMAL" />
    <result column="MUST_DEDUCTION_AMT" property="mustDeductionAmt" jdbcType="DECIMAL" />
    <result column="ACTUAL_DEDUCTION_AMT" property="actualDeductionAmt" jdbcType="DECIMAL" />
    <result column="NOT_DEDUCTION_AMT" property="notDeductionAmt" jdbcType="DECIMAL" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="SOURCE_ID" property="sourceId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PARENT_AGENT_PID, PARENT_AGENT_ID, PARENT_AGENT_NAME, AGENT_PID, AGENT_ID, AGENT_NAME, 
    DEDUCTION_DATE, DEDUCTION_TYPE, DEDUCTION_DESC, SUM_DEDUCTION_AMT, ADD_DEDUCTION_AMT, 
    MUST_DEDUCTION_AMT, ACTUAL_DEDUCTION_AMT, NOT_DEDUCTION_AMT, REMARK, SOURCE_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ryx.credit.activity.entity.ProfitDeductionExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from P_DEDUCTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from P_DEDUCTION
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.activity.entity.ProfitDeductionExample" >
    delete from P_DEDUCTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.activity.entity.ProfitDeduction" >
    insert into P_DEDUCTION (ID, PARENT_AGENT_PID, PARENT_AGENT_ID, 
      PARENT_AGENT_NAME, AGENT_PID, AGENT_ID, 
      AGENT_NAME, DEDUCTION_DATE, DEDUCTION_TYPE, 
      DEDUCTION_DESC, SUM_DEDUCTION_AMT, ADD_DEDUCTION_AMT, 
      MUST_DEDUCTION_AMT, ACTUAL_DEDUCTION_AMT, NOT_DEDUCTION_AMT, 
      REMARK, SOURCE_ID)
    values (#{id,jdbcType=VARCHAR}, #{parentAgentPid,jdbcType=CHAR}, #{parentAgentId,jdbcType=CHAR}, 
      #{parentAgentName,jdbcType=CHAR}, #{agentPid,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, 
      #{agentName,jdbcType=VARCHAR}, #{deductionDate,jdbcType=VARCHAR}, #{deductionType,jdbcType=CHAR}, 
      #{deductionDesc,jdbcType=VARCHAR}, #{sumDeductionAmt,jdbcType=DECIMAL}, #{addDeductionAmt,jdbcType=DECIMAL}, 
      #{mustDeductionAmt,jdbcType=DECIMAL}, #{actualDeductionAmt,jdbcType=DECIMAL}, #{notDeductionAmt,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR}, #{sourceId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.activity.entity.ProfitDeduction" >
    insert into P_DEDUCTION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="parentAgentPid != null" >
        PARENT_AGENT_PID,
      </if>
      <if test="parentAgentId != null" >
        PARENT_AGENT_ID,
      </if>
      <if test="parentAgentName != null" >
        PARENT_AGENT_NAME,
      </if>
      <if test="agentPid != null" >
        AGENT_PID,
      </if>
      <if test="agentId != null" >
        AGENT_ID,
      </if>
      <if test="agentName != null" >
        AGENT_NAME,
      </if>
      <if test="deductionDate != null" >
        DEDUCTION_DATE,
      </if>
      <if test="deductionType != null" >
        DEDUCTION_TYPE,
      </if>
      <if test="deductionDesc != null" >
        DEDUCTION_DESC,
      </if>
      <if test="sumDeductionAmt != null" >
        SUM_DEDUCTION_AMT,
      </if>
      <if test="addDeductionAmt != null" >
        ADD_DEDUCTION_AMT,
      </if>
      <if test="mustDeductionAmt != null" >
        MUST_DEDUCTION_AMT,
      </if>
      <if test="actualDeductionAmt != null" >
        ACTUAL_DEDUCTION_AMT,
      </if>
      <if test="notDeductionAmt != null" >
        NOT_DEDUCTION_AMT,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="sourceId != null" >
        SOURCE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="parentAgentPid != null" >
        #{parentAgentPid,jdbcType=CHAR},
      </if>
      <if test="parentAgentId != null" >
        #{parentAgentId,jdbcType=CHAR},
      </if>
      <if test="parentAgentName != null" >
        #{parentAgentName,jdbcType=CHAR},
      </if>
      <if test="agentPid != null" >
        #{agentPid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null" >
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null" >
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="deductionDate != null" >
        #{deductionDate,jdbcType=VARCHAR},
      </if>
      <if test="deductionType != null" >
        #{deductionType,jdbcType=CHAR},
      </if>
      <if test="deductionDesc != null" >
        #{deductionDesc,jdbcType=VARCHAR},
      </if>
      <if test="sumDeductionAmt != null" >
        #{sumDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="addDeductionAmt != null" >
        #{addDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="mustDeductionAmt != null" >
        #{mustDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="actualDeductionAmt != null" >
        #{actualDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="notDeductionAmt != null" >
        #{notDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.activity.entity.ProfitDeductionExample" resultType="java.lang.Integer" >
    select count(*) from P_DEDUCTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.activity.entity.ProfitDeduction" >
    update P_DEDUCTION
    <set >
      <if test="parentAgentPid != null" >
        PARENT_AGENT_PID = #{parentAgentPid,jdbcType=CHAR},
      </if>
      <if test="parentAgentId != null" >
        PARENT_AGENT_ID = #{parentAgentId,jdbcType=CHAR},
      </if>
      <if test="parentAgentName != null" >
        PARENT_AGENT_NAME = #{parentAgentName,jdbcType=CHAR},
      </if>
      <if test="agentPid != null" >
        AGENT_PID = #{agentPid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null" >
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null" >
        AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="deductionDate != null" >
        DEDUCTION_DATE = #{deductionDate,jdbcType=VARCHAR},
      </if>
      <if test="deductionType != null" >
        DEDUCTION_TYPE = #{deductionType,jdbcType=CHAR},
      </if>
      <if test="deductionDesc != null" >
        DEDUCTION_DESC = #{deductionDesc,jdbcType=VARCHAR},
      </if>
      <if test="sumDeductionAmt != null" >
        SUM_DEDUCTION_AMT = #{sumDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="addDeductionAmt != null" >
        ADD_DEDUCTION_AMT = #{addDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="mustDeductionAmt != null" >
        MUST_DEDUCTION_AMT = #{mustDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="actualDeductionAmt != null" >
        ACTUAL_DEDUCTION_AMT = #{actualDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="notDeductionAmt != null" >
        NOT_DEDUCTION_AMT = #{notDeductionAmt,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null" >
        SOURCE_ID = #{sourceId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.activity.entity.ProfitDeduction" >
    update P_DEDUCTION
    set PARENT_AGENT_PID = #{parentAgentPid,jdbcType=CHAR},
      PARENT_AGENT_ID = #{parentAgentId,jdbcType=CHAR},
      PARENT_AGENT_NAME = #{parentAgentName,jdbcType=CHAR},
      AGENT_PID = #{agentPid,jdbcType=VARCHAR},
      AGENT_ID = #{agentId,jdbcType=VARCHAR},
      AGENT_NAME = #{agentName,jdbcType=VARCHAR},
      DEDUCTION_DATE = #{deductionDate,jdbcType=VARCHAR},
      DEDUCTION_TYPE = #{deductionType,jdbcType=CHAR},
      DEDUCTION_DESC = #{deductionDesc,jdbcType=VARCHAR},
      SUM_DEDUCTION_AMT = #{sumDeductionAmt,jdbcType=DECIMAL},
      ADD_DEDUCTION_AMT = #{addDeductionAmt,jdbcType=DECIMAL},
      MUST_DEDUCTION_AMT = #{mustDeductionAmt,jdbcType=DECIMAL},
      ACTUAL_DEDUCTION_AMT = #{actualDeductionAmt,jdbcType=DECIMAL},
      NOT_DEDUCTION_AMT = #{notDeductionAmt,jdbcType=DECIMAL},
      REMARK = #{remark,jdbcType=VARCHAR},
      SOURCE_ID = #{sourceId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>