<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.dao.order.OrderAdjDetailMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.order.OrderAdjDetail">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ADJ_ID" jdbcType="VARCHAR" property="adjId" />
    <result column="SUB_ORDER_ID" jdbcType="VARCHAR" property="subOrderId" />
    <result column="ADJ_NUM" jdbcType="DECIMAL" property="adjNum" />
    <result column="DIF_AMOUNT" jdbcType="DECIMAL" property="difAmount" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ADJ_ID, SUB_ORDER_ID, ADJ_NUM, DIF_AMOUNT, STATUS, VERSION
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.order.OrderAdjDetailExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from O_ORDER_ADJ_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from O_ORDER_ADJ_DETAIL
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.order.OrderAdjDetailExample">
    delete from O_ORDER_ADJ_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.order.OrderAdjDetail">
    insert into O_ORDER_ADJ_DETAIL (ID, ADJ_ID, SUB_ORDER_ID, 
      ADJ_NUM, DIF_AMOUNT, STATUS, 
      VERSION)
    values (#{id,jdbcType=VARCHAR}, #{adjId,jdbcType=VARCHAR}, #{subOrderId,jdbcType=VARCHAR}, 
      #{adjNum,jdbcType=DECIMAL}, #{difAmount,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, 
      #{version,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.order.OrderAdjDetail">
    insert into O_ORDER_ADJ_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="adjId != null">
        ADJ_ID,
      </if>
      <if test="subOrderId != null">
        SUB_ORDER_ID,
      </if>
      <if test="adjNum != null">
        ADJ_NUM,
      </if>
      <if test="difAmount != null">
        DIF_AMOUNT,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="adjId != null">
        #{adjId,jdbcType=VARCHAR},
      </if>
      <if test="subOrderId != null">
        #{subOrderId,jdbcType=VARCHAR},
      </if>
      <if test="adjNum != null">
        #{adjNum,jdbcType=DECIMAL},
      </if>
      <if test="difAmount != null">
        #{difAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.order.OrderAdjDetailExample" resultType="java.lang.Long">
    select count(*) from O_ORDER_ADJ_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.order.OrderAdjDetail">
    update O_ORDER_ADJ_DETAIL
    <set>
      <if test="adjId != null">
        ADJ_ID = #{adjId,jdbcType=VARCHAR},
      </if>
      <if test="subOrderId != null">
        SUB_ORDER_ID = #{subOrderId,jdbcType=VARCHAR},
      </if>
      <if test="adjNum != null">
        ADJ_NUM = #{adjNum,jdbcType=DECIMAL},
      </if>
      <if test="difAmount != null">
        DIF_AMOUNT = #{difAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.order.OrderAdjDetail">
    update O_ORDER_ADJ_DETAIL
    set ADJ_ID = #{adjId,jdbcType=VARCHAR},
      SUB_ORDER_ID = #{subOrderId,jdbcType=VARCHAR},
      ADJ_NUM = #{adjNum,jdbcType=DECIMAL},
      DIF_AMOUNT = #{difAmount,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=DECIMAL},
      VERSION = #{version,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>