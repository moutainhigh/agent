<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.dao.agent.DataHistoryRecordMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.agent.DataHistoryRecord">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="DATA_CLASS" jdbcType="VARCHAR" property="dataClass" />
    <result column="DATA_METHOD" jdbcType="VARCHAR" property="dataMethod" />
    <result column="DATA_VERSION" jdbcType="DECIMAL" property="dataVersion" />
    <result column="C_TIME" jdbcType="TIMESTAMP" property="cTime" />
    <result column="C_USER" jdbcType="VARCHAR" property="cUser" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ryx.credit.pojo.admin.agent.DataHistoryRecord">
    <result column="DATA_PARAMETER" jdbcType="CLOB" property="dataParameter" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, DATA_CLASS, DATA_METHOD, DATA_VERSION, C_TIME, C_USER, STATUS
  </sql>
  <sql id="Blob_Column_List">
    DATA_PARAMETER
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from DATA_HISTORY_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecordExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DATA_HISTORY_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from DATA_HISTORY_RECORD
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecordExample">
    delete from DATA_HISTORY_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecord">
    insert into DATA_HISTORY_RECORD (ID, DATA_CLASS, DATA_METHOD, 
      DATA_VERSION, C_TIME, C_USER, 
      STATUS, DATA_PARAMETER)
    values (#{id,jdbcType=VARCHAR}, #{dataClass,jdbcType=VARCHAR}, #{dataMethod,jdbcType=VARCHAR}, 
      #{dataVersion,jdbcType=DECIMAL}, #{cTime,jdbcType=TIMESTAMP}, #{cUser,jdbcType=VARCHAR}, 
      #{status,jdbcType=DECIMAL}, #{dataParameter,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecord">
    insert into DATA_HISTORY_RECORD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="dataClass != null">
        DATA_CLASS,
      </if>
      <if test="dataMethod != null">
        DATA_METHOD,
      </if>
      <if test="dataVersion != null">
        DATA_VERSION,
      </if>
      <if test="cTime != null">
        C_TIME,
      </if>
      <if test="cUser != null">
        C_USER,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="dataParameter != null">
        DATA_PARAMETER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="dataClass != null">
        #{dataClass,jdbcType=VARCHAR},
      </if>
      <if test="dataMethod != null">
        #{dataMethod,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        #{dataVersion,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="dataParameter != null">
        #{dataParameter,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecordExample" resultType="java.lang.Long">
    select count(*) from DATA_HISTORY_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecord">
    update DATA_HISTORY_RECORD
    <set>
      <if test="dataClass != null">
        DATA_CLASS = #{dataClass,jdbcType=VARCHAR},
      </if>
      <if test="dataMethod != null">
        DATA_METHOD = #{dataMethod,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        DATA_VERSION = #{dataVersion,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        C_USER = #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="dataParameter != null">
        DATA_PARAMETER = #{dataParameter,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecord">
    update DATA_HISTORY_RECORD
    set DATA_CLASS = #{dataClass,jdbcType=VARCHAR},
      DATA_METHOD = #{dataMethod,jdbcType=VARCHAR},
      DATA_VERSION = #{dataVersion,jdbcType=DECIMAL},
      C_TIME = #{cTime,jdbcType=TIMESTAMP},
      C_USER = #{cUser,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      DATA_PARAMETER = #{dataParameter,jdbcType=CLOB}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryRecord">
    update DATA_HISTORY_RECORD
    set DATA_CLASS = #{dataClass,jdbcType=VARCHAR},
      DATA_METHOD = #{dataMethod,jdbcType=VARCHAR},
      DATA_VERSION = #{dataVersion,jdbcType=DECIMAL},
      C_TIME = #{cTime,jdbcType=TIMESTAMP},
      C_USER = #{cUser,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>