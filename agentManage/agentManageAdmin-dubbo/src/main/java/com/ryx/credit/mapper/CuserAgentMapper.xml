<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.dao.CuserAgentMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.CuserAgent">
    <id column="USERID" jdbcType="VARCHAR" property="userid" />
    <id column="AGENTID" jdbcType="VARCHAR" property="agentid" />
    <id column="USER_TYPE" jdbcType="VARCHAR" property="userType" />
    <result column="C_TIME" jdbcType="TIMESTAMP" property="cTime" />
    <result column="C_USER" jdbcType="VARCHAR" property="cUser" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, AGENTID, USER_TYPE, C_TIME, C_USER, STATUS, VERSION
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.CuserAgentExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_USER_AGENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.CuserAgentKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from C_USER_AGENT
    where USERID = #{userid,jdbcType=VARCHAR}
      and AGENTID = #{agentid,jdbcType=VARCHAR}
      and USER_TYPE = #{userType,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.CuserAgentExample">
    delete from C_USER_AGENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.CuserAgent">
    insert into C_USER_AGENT (USERID, AGENTID, USER_TYPE, 
      C_TIME, C_USER, STATUS, 
      VERSION)
    values (#{userid,jdbcType=VARCHAR}, #{agentid,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, 
      #{cTime,jdbcType=TIMESTAMP}, #{cUser,jdbcType=VARCHAR}, #{status,jdbcType=DECIMAL}, 
      #{version,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.CuserAgent">
    insert into C_USER_AGENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="agentid != null">
        AGENTID,
      </if>
      <if test="userType != null">
        USER_TYPE,
      </if>
      <if test="cTime != null">
        C_TIME,
      </if>
      <if test="cUser != null">
        C_USER,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="agentid != null">
        #{agentid,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null">
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.CuserAgentExample" resultType="java.lang.Long">
    select count(*) from C_USER_AGENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.CuserAgent">
    update C_USER_AGENT
    <set>
      <if test="cTime != null">
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        C_USER = #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
    </set>
    where USERID = #{userid,jdbcType=VARCHAR}
      and AGENTID = #{agentid,jdbcType=VARCHAR}
      and USER_TYPE = #{userType,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.CuserAgent">
    update C_USER_AGENT
    set C_TIME = #{cTime,jdbcType=TIMESTAMP},
      C_USER = #{cUser,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      VERSION = #{version,jdbcType=DECIMAL}
    where USERID = #{userid,jdbcType=VARCHAR}
      and AGENTID = #{agentid,jdbcType=VARCHAR}
      and USER_TYPE = #{userType,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>