<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.dao.agent.AgentFreezeMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.agent.AgentFreeze">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="FREEZE_STATUS" jdbcType="VARCHAR" property="freezeStatus" />
    <result column="FREEZE_PERSON" jdbcType="VARCHAR" property="freezePerson" />
    <result column="FREEZE_DATE" jdbcType="TIMESTAMP" property="freezeDate" />
    <result column="FREEZE_CAUSE" jdbcType="VARCHAR" property="freezeCause" />
    <result column="UNFREEZE_PERSON" jdbcType="VARCHAR" property="unfreezePerson" />
    <result column="UNFREEZE_DATE" jdbcType="TIMESTAMP" property="unfreezeDate" />
    <result column="UNFREEZE_CAUSE" jdbcType="VARCHAR" property="unfreezeCause" />
    <result column="FREEZE_NUM" jdbcType="VARCHAR" property="freezeNum" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="FREEZE_TYPE" jdbcType="DECIMAL" property="freezeType" />
    <result column="BUS_PLATFORM" jdbcType="VARCHAR" property="busPlatform" />
    <result column="BUS_NUM" jdbcType="VARCHAR" property="busNum" />
    <result column="BUS_FREEZE" jdbcType="DECIMAL" property="busFreeze" />
    <result column="PROFIT_FREEZE" jdbcType="DECIMAL" property="profitFreeze" />
    <result column="REFLOW_FREEZE" jdbcType="DECIMAL" property="reflowFreeze" />
    <result column="MONTHLY_FREEZE" jdbcType="DECIMAL" property="monthlyFreeze" />
    <result column="DAILY_FREEZE" jdbcType="DECIMAL" property="dailyFreeze" />
    <result column="STOP_PROFIT_FREEZE" jdbcType="DECIMAL" property="stopProfitFreeze" />
    <result column="CASH_FREEZE" jdbcType="DECIMAL" property="cashFreeze" />
    <result column="STOP_COUNT" jdbcType="DECIMAL" property="stopCount" />
    <result column="BUS_ID" jdbcType="VARCHAR" property="busId" />
    <result column="NEW_BUS_FREEZE" jdbcType="DECIMAL" property="newBusFreeze" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, AGENT_ID, FREEZE_STATUS, FREEZE_PERSON, FREEZE_DATE, FREEZE_CAUSE, UNFREEZE_PERSON, 
    UNFREEZE_DATE, UNFREEZE_CAUSE, FREEZE_NUM, REMARK, STATUS, VERSION, FREEZE_TYPE, 
    BUS_PLATFORM, BUS_NUM, BUS_FREEZE, PROFIT_FREEZE, REFLOW_FREEZE, MONTHLY_FREEZE, 
    DAILY_FREEZE, STOP_PROFIT_FREEZE, CASH_FREEZE, STOP_COUNT, BUS_ID, NEW_BUS_FREEZE
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentFreezeExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from A_AGENT_FREEZE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from A_AGENT_FREEZE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentFreezeExample">
    delete from A_AGENT_FREEZE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.agent.AgentFreeze">
    insert into A_AGENT_FREEZE (ID, AGENT_ID, FREEZE_STATUS, 
      FREEZE_PERSON, FREEZE_DATE, FREEZE_CAUSE, 
      UNFREEZE_PERSON, UNFREEZE_DATE, UNFREEZE_CAUSE, 
      FREEZE_NUM, REMARK, STATUS, 
      VERSION, FREEZE_TYPE, BUS_PLATFORM, 
      BUS_NUM, BUS_FREEZE, PROFIT_FREEZE, 
      REFLOW_FREEZE, MONTHLY_FREEZE, DAILY_FREEZE, 
      STOP_PROFIT_FREEZE, CASH_FREEZE, STOP_COUNT, 
      BUS_ID, NEW_BUS_FREEZE)
    values (#{id,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{freezeStatus,jdbcType=VARCHAR}, 
      #{freezePerson,jdbcType=VARCHAR}, #{freezeDate,jdbcType=TIMESTAMP}, #{freezeCause,jdbcType=VARCHAR}, 
      #{unfreezePerson,jdbcType=VARCHAR}, #{unfreezeDate,jdbcType=TIMESTAMP}, #{unfreezeCause,jdbcType=VARCHAR}, 
      #{freezeNum,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=DECIMAL}, 
      #{version,jdbcType=DECIMAL}, #{freezeType,jdbcType=DECIMAL}, #{busPlatform,jdbcType=VARCHAR}, 
      #{busNum,jdbcType=VARCHAR}, #{busFreeze,jdbcType=DECIMAL}, #{profitFreeze,jdbcType=DECIMAL}, 
      #{reflowFreeze,jdbcType=DECIMAL}, #{monthlyFreeze,jdbcType=DECIMAL}, #{dailyFreeze,jdbcType=DECIMAL}, 
      #{stopProfitFreeze,jdbcType=DECIMAL}, #{cashFreeze,jdbcType=DECIMAL}, #{stopCount,jdbcType=DECIMAL}, 
      #{busId,jdbcType=VARCHAR}, #{newBusFreeze,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.agent.AgentFreeze">
    insert into A_AGENT_FREEZE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="freezeStatus != null">
        FREEZE_STATUS,
      </if>
      <if test="freezePerson != null">
        FREEZE_PERSON,
      </if>
      <if test="freezeDate != null">
        FREEZE_DATE,
      </if>
      <if test="freezeCause != null">
        FREEZE_CAUSE,
      </if>
      <if test="unfreezePerson != null">
        UNFREEZE_PERSON,
      </if>
      <if test="unfreezeDate != null">
        UNFREEZE_DATE,
      </if>
      <if test="unfreezeCause != null">
        UNFREEZE_CAUSE,
      </if>
      <if test="freezeNum != null">
        FREEZE_NUM,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="freezeType != null">
        FREEZE_TYPE,
      </if>
      <if test="busPlatform != null">
        BUS_PLATFORM,
      </if>
      <if test="busNum != null">
        BUS_NUM,
      </if>
      <if test="busFreeze != null">
        BUS_FREEZE,
      </if>
      <if test="profitFreeze != null">
        PROFIT_FREEZE,
      </if>
      <if test="reflowFreeze != null">
        REFLOW_FREEZE,
      </if>
      <if test="monthlyFreeze != null">
        MONTHLY_FREEZE,
      </if>
      <if test="dailyFreeze != null">
        DAILY_FREEZE,
      </if>
      <if test="stopProfitFreeze != null">
        STOP_PROFIT_FREEZE,
      </if>
      <if test="cashFreeze != null">
        CASH_FREEZE,
      </if>
      <if test="stopCount != null">
        STOP_COUNT,
      </if>
      <if test="busId != null">
        BUS_ID,
      </if>
      <if test="newBusFreeze != null">
        NEW_BUS_FREEZE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="freezeStatus != null">
        #{freezeStatus,jdbcType=VARCHAR},
      </if>
      <if test="freezePerson != null">
        #{freezePerson,jdbcType=VARCHAR},
      </if>
      <if test="freezeDate != null">
        #{freezeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="freezeCause != null">
        #{freezeCause,jdbcType=VARCHAR},
      </if>
      <if test="unfreezePerson != null">
        #{unfreezePerson,jdbcType=VARCHAR},
      </if>
      <if test="unfreezeDate != null">
        #{unfreezeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unfreezeCause != null">
        #{unfreezeCause,jdbcType=VARCHAR},
      </if>
      <if test="freezeNum != null">
        #{freezeNum,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="freezeType != null">
        #{freezeType,jdbcType=DECIMAL},
      </if>
      <if test="busPlatform != null">
        #{busPlatform,jdbcType=VARCHAR},
      </if>
      <if test="busNum != null">
        #{busNum,jdbcType=VARCHAR},
      </if>
      <if test="busFreeze != null">
        #{busFreeze,jdbcType=DECIMAL},
      </if>
      <if test="profitFreeze != null">
        #{profitFreeze,jdbcType=DECIMAL},
      </if>
      <if test="reflowFreeze != null">
        #{reflowFreeze,jdbcType=DECIMAL},
      </if>
      <if test="monthlyFreeze != null">
        #{monthlyFreeze,jdbcType=DECIMAL},
      </if>
      <if test="dailyFreeze != null">
        #{dailyFreeze,jdbcType=DECIMAL},
      </if>
      <if test="stopProfitFreeze != null">
        #{stopProfitFreeze,jdbcType=DECIMAL},
      </if>
      <if test="cashFreeze != null">
        #{cashFreeze,jdbcType=DECIMAL},
      </if>
      <if test="stopCount != null">
        #{stopCount,jdbcType=DECIMAL},
      </if>
      <if test="busId != null">
        #{busId,jdbcType=VARCHAR},
      </if>
      <if test="newBusFreeze != null">
        #{newBusFreeze,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentFreezeExample" resultType="java.lang.Long">
    select count(*) from A_AGENT_FREEZE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.agent.AgentFreeze">
    update A_AGENT_FREEZE
    <set>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="freezeStatus != null">
        FREEZE_STATUS = #{freezeStatus,jdbcType=VARCHAR},
      </if>
      <if test="freezePerson != null">
        FREEZE_PERSON = #{freezePerson,jdbcType=VARCHAR},
      </if>
      <if test="freezeDate != null">
        FREEZE_DATE = #{freezeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="freezeCause != null">
        FREEZE_CAUSE = #{freezeCause,jdbcType=VARCHAR},
      </if>
      <if test="unfreezePerson != null">
        UNFREEZE_PERSON = #{unfreezePerson,jdbcType=VARCHAR},
      </if>
      <if test="unfreezeDate != null">
        UNFREEZE_DATE = #{unfreezeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unfreezeCause != null">
        UNFREEZE_CAUSE = #{unfreezeCause,jdbcType=VARCHAR},
      </if>
      <if test="freezeNum != null">
        FREEZE_NUM = #{freezeNum,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="freezeType != null">
        FREEZE_TYPE = #{freezeType,jdbcType=DECIMAL},
      </if>
      <if test="busPlatform != null">
        BUS_PLATFORM = #{busPlatform,jdbcType=VARCHAR},
      </if>
      <if test="busNum != null">
        BUS_NUM = #{busNum,jdbcType=VARCHAR},
      </if>
      <if test="busFreeze != null">
        BUS_FREEZE = #{busFreeze,jdbcType=DECIMAL},
      </if>
      <if test="profitFreeze != null">
        PROFIT_FREEZE = #{profitFreeze,jdbcType=DECIMAL},
      </if>
      <if test="reflowFreeze != null">
        REFLOW_FREEZE = #{reflowFreeze,jdbcType=DECIMAL},
      </if>
      <if test="monthlyFreeze != null">
        MONTHLY_FREEZE = #{monthlyFreeze,jdbcType=DECIMAL},
      </if>
      <if test="dailyFreeze != null">
        DAILY_FREEZE = #{dailyFreeze,jdbcType=DECIMAL},
      </if>
      <if test="stopProfitFreeze != null">
        STOP_PROFIT_FREEZE = #{stopProfitFreeze,jdbcType=DECIMAL},
      </if>
      <if test="cashFreeze != null">
        CASH_FREEZE = #{cashFreeze,jdbcType=DECIMAL},
      </if>
      <if test="stopCount != null">
        STOP_COUNT = #{stopCount,jdbcType=DECIMAL},
      </if>
      <if test="busId != null">
        BUS_ID = #{busId,jdbcType=VARCHAR},
      </if>
      <if test="newBusFreeze != null">
        NEW_BUS_FREEZE = #{newBusFreeze,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.agent.AgentFreeze">
    update A_AGENT_FREEZE
    set AGENT_ID = #{agentId,jdbcType=VARCHAR},
      FREEZE_STATUS = #{freezeStatus,jdbcType=VARCHAR},
      FREEZE_PERSON = #{freezePerson,jdbcType=VARCHAR},
      FREEZE_DATE = #{freezeDate,jdbcType=TIMESTAMP},
      FREEZE_CAUSE = #{freezeCause,jdbcType=VARCHAR},
      UNFREEZE_PERSON = #{unfreezePerson,jdbcType=VARCHAR},
      UNFREEZE_DATE = #{unfreezeDate,jdbcType=TIMESTAMP},
      UNFREEZE_CAUSE = #{unfreezeCause,jdbcType=VARCHAR},
      FREEZE_NUM = #{freezeNum,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      VERSION = VERSION + 1,
      FREEZE_TYPE = #{freezeType,jdbcType=DECIMAL},
      BUS_PLATFORM = #{busPlatform,jdbcType=VARCHAR},
      BUS_NUM = #{busNum,jdbcType=VARCHAR},
      BUS_FREEZE = #{busFreeze,jdbcType=DECIMAL},
      PROFIT_FREEZE = #{profitFreeze,jdbcType=DECIMAL},
      REFLOW_FREEZE = #{reflowFreeze,jdbcType=DECIMAL},
      MONTHLY_FREEZE = #{monthlyFreeze,jdbcType=DECIMAL},
      DAILY_FREEZE = #{dailyFreeze,jdbcType=DECIMAL},
      STOP_PROFIT_FREEZE = #{stopProfitFreeze,jdbcType=DECIMAL},
      CASH_FREEZE = #{cashFreeze,jdbcType=DECIMAL},
      STOP_COUNT = #{stopCount,jdbcType=DECIMAL},
      BUS_ID = #{busId,jdbcType=VARCHAR},
      NEW_BUS_FREEZE = #{newBusFreeze,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>


  <select id="queryAgentFreezeList" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    <include refid="queryAgentFreezeSql" />
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="queryAgentFreezeCount" parameterType="map" resultType="int">
    select count(*) from (
    <include refid="queryAgentFreezeSql"/>
    )
  </select>
  <sql id="queryAgentFreezeSql">
      select t.ID,t.AGENT_ID,t.FREEZE_STATUS,t.FREEZE_PERSON,
             t.FREEZE_DATE,t.FREEZE_CAUSE,t.UNFREEZE_PERSON,
             t.UNFREEZE_DATE,t.UNFREEZE_CAUSE,t.FREEZE_NUM,
             t.REMARK,t.STATUS,t.VERSION,nvl(t.FREEZE_TYPE,'1') as FREEZE_TYPE,
             a.ag_name,a.c_incom_time,to_char(a.freestatus) as FREESTATUS,
             t.BUS_PLATFORM,t.BUS_NUM,t.BUS_FREEZE,t.PROFIT_FREEZE,
             t.REFLOW_FREEZE,t.MONTHLY_FREEZE,t.DAILY_FREEZE,
             t.STOP_PROFIT_FREEZE,t.CASH_FREEZE,t.STOP_COUNT,t.NEW_BUS_FREEZE
      from a_agent_freeze t
      left join a_agent a on a.id=t.agent_id
      <where>
        <if test="1==1"> and t.status = 1 and a.status = 1 </if>
        <if test="map.id!=null and map.agentId != ''">
           and t.id = #{map.id,jdbcType=VARCHAR}
        </if>
        <if test="map.agentId != null and map.agentId != '' ">
          and t.agent_Id in
        <foreach collection="map.agentId" item="listItem" open="(" close=")" separator="," >
            #{listItem}
        </foreach>
        </if>
        <if test="map.agentName != null and map.agentName != '' ">
          and a.ag_name LIKE CONCAT(CONCAT('%',#{map.agentName}),'%')
        </if>
        <if test="map.incomTimeBegin!=null and map.incomTimeBegin!=''">
          and a.c_incom_time >= to_date(#{map.incomTimeBegin}, 'yy-mm-dd hh24:mi:ss')
        </if>
        <if test="map.incomTimeEnd!=null and map.incomTimeEnd!=''">
          and a.c_incom_time &lt;= to_date(#{map.incomTimeEnd}, 'yy-mm-dd hh24:mi:ss')
        </if>
        <if test="map.freezeDateBegin!=null and map.freezeDateBegin!=''">
          and t.freeze_Date >= to_date(#{map.freezeDateBegin}, 'yy-mm-dd hh24:mi:ss')
        </if>
        <if test="map.freezeDateEnd!=null and map.freezeDateEnd!=''">
          and t.freeze_Date &lt;= to_date(#{map.freezeDateEnd}, 'yy-mm-dd hh24:mi:ss')
        </if>
        <if test="map.unFreezeDateBegin!=null and map.unFreezeDateBegin!=''">
          and t.unFreeze_Date >= to_date(#{map.unFreezeDateBegin}, 'yy-mm-dd hh24:mi:ss')
        </if>
        <if test="map.unFreezeDateEnd!=null and map.unFreezeDateEnd!=''">
          and t.unFreeze_Date &lt;= to_date(#{map.unFreezeDateEnd}, 'yy-mm-dd hh24:mi:ss')
        </if>
        <if test="map.freeStatus != null and map.freeStatus != '' ">
          and a.freestatus = #{map.freeStatus,jdbcType=VARCHAR}
        </if>
        <if test="map.freezeCause != null and map.freezeCause != '' ">
          and t.freeze_Cause = #{map.freezeCause,jdbcType=VARCHAR}
        </if>
        <if test="map.freezeStatus != null and map.freezeStatus != '' ">
          and t.freeze_Status = #{map.freezeStatus,jdbcType=VARCHAR}
        </if>
        <if test="map.userId != null and map.userId != '' ">
          and t.freeze_person = #{map.userId,jdbcType=VARCHAR}
        </if>
        <if test="map.platfromPerm!=null and map.platfromPerm.size>0">
          and EXISTS(
          select A_AGENT_BUSINFO.ID from A_AGENT_BUSINFO
          left join C_ORGANIZATION oa on oa.id=A_AGENT_BUSINFO.ag_doc_pro
          left join C_ORGANIZATION ob on ob.id=A_AGENT_BUSINFO.AG_DOC_DISTRICT
          where a.id=A_AGENT_BUSINFO.AGENT_ID and A_AGENT_BUSINFO.BUS_PLATFORM in
          <foreach collection="map.platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
            #{platfromPermItem.PLATFORM_NUM}
          </foreach>
          <if test="map.organizationCode!=null and map.organizationCode!=''">
            and (oa.CODE like concat(#{map.organizationCode},'%') or ob.CODE like concat(#{map.organizationCode},'%') )
          </if>
          )
        </if>
        <if test="map.platfromPerm==null or map.platfromPerm.size==0">
          and  1=-1
        </if>
      </where>
      order by t.agent_id,t.freeze_date desc
  </sql>

  <select id="queryAgentBasicLackData" parameterType="map" resultMap="AgentFreezeVo">
    <include refid="queryAgentBasicLackSql"/>
  </select>
  <sql id="queryAgentBasicLackSql">
    select * from (
      select
      aa.id as ag_id,
      aa.ag_name,
      aa.ag_nature,
      aa.ag_capital,
      aa.ag_bus_lic,
      aa.ag_bus_licb,
      aa.ag_bus_lice,
      aa.ag_legal,
      aa.ag_legal_certype,
      aa.ag_legal_cernum,
      aa.ag_legal_mobile,
      aa.ag_head,
      aa.ag_head_mobile,
      aa.ag_reg_area,
      aa.ag_reg_add,
      aa.ag_bus_scope,
      aa.bus_contact_email,
      aa.bus_risk_email,
      aa.ag_status,
      to_char(aa.c_time,'yyyy-MM-dd hh24:mi:ss') as c_time,
      to_char(aa.c_incom_time,'yyyy-MM-dd hh24:mi:ss') as c_incom_time,
      ac.id as ac_id,
      ac.clo_type,
      ac.clo_realname,
      ac.clo_bank_account,
      ac.clo_bank,
      ac.bank_region,
      ac.clo_bank_branch,
      ac.all_line_num,
      ac.branch_line_num,
      ac.clo_tax_point,
      ac.clo_invoice,
      ac.ag_legal_cernum as ac_ag_legal_cernum,
      ac.clo_review_status
      from a_agent aa
      left join a_agent_colinfo ac on ac.agent_id = aa.id and ac.status = '1' and ac.clo_review_status = '3'
      where aa.status = '1' and aa.ag_status = 'Approved'
      and exists (
        select ab.id from a_agent_businfo ab
        where ab.agent_id = aa.id and ab.status = '1' and ab.clo_review_status = '3' and ab.bus_status in (0,1,2,3)
      )
    )
    a order by c_time desc
  </sql>
  <resultMap id="AgentFreezeVo" type="com.ryx.credit.pojo.admin.vo.AgentFreezeVo">
    <id column="ag_id" property="agId" jdbcType="VARCHAR"/>
    <result column="ag_name" property="agName" jdbcType="VARCHAR"/>
    <result column="ag_nature" property="agNature" jdbcType="VARCHAR"/>
    <result column="ag_capital" property="agCapital" jdbcType="VARCHAR"/>
    <result column="ag_bus_lic" property="agBusLic" jdbcType="VARCHAR"/>
    <result column="ag_bus_licb" property="agBusLicb" jdbcType="VARCHAR"/>
    <result column="ag_bus_lice" property="agBusLice" jdbcType="VARCHAR"/>
    <result column="ag_legal" property="agLegal" jdbcType="VARCHAR"/>
    <result column="ag_legal_certype" property="agLegalCertype" jdbcType="VARCHAR"/>
    <result column="ag_legal_cernum" property="agLegalCernum" jdbcType="VARCHAR"/>
    <result column="ag_legal_mobile" property="agLegalMobile" jdbcType="VARCHAR"/>
    <result column="ag_head" property="agHead" jdbcType="VARCHAR"/>
    <result column="ag_head_mobile" property="agHeadMobile" jdbcType="VARCHAR"/>
    <result column="ag_reg_area" property="agRegArea" jdbcType="VARCHAR"/>
    <result column="ag_reg_add" property="agRegAdd" jdbcType="VARCHAR"/>
    <result column="ag_bus_scope" property="agBusScope" jdbcType="VARCHAR"/>
    <result column="bus_contact_email" property="busContactEmail" jdbcType="VARCHAR"/>
    <result column="bus_risk_email" property="busRiskEmail" jdbcType="DECIMAL"/>
    <result column="ag_status" property="agStatus" jdbcType="VARCHAR"/>
    <result column="c_time" property="cTime" jdbcType="VARCHAR"/>
    <result column="c_incom_time" property="cIncomTime" jdbcType="VARCHAR"/>
    <result column="ac_id" property="acId" jdbcType="VARCHAR"/>
    <result column="clo_type" property="cloType" jdbcType="VARCHAR"/>
    <result column="clo_realname" property="cloRealname" jdbcType="VARCHAR"/>
    <result column="clo_bank_account" property="cloBankAccount" jdbcType="VARCHAR"/>
    <result column="clo_bank" property="cloBank" jdbcType="VARCHAR"/>
    <result column="bank_region" property="bankRegion" jdbcType="VARCHAR"/>
    <result column="clo_bank_branch" property="cloBankBranch" jdbcType="VARCHAR" />
    <result column="all_line_num" property="allLineNum" jdbcType="VARCHAR"/>
    <result column="branch_line_num" property="branchLineNum" jdbcType="VARCHAR"/>
    <result column="clo_tax_point" property="cloTaxPoint" jdbcType="VARCHAR"/>
    <result column="clo_invoice" property="cloInvoice" jdbcType="VARCHAR"/>
    <result column="ac_ag_legal_cernum" property="acAgLegalCernum" jdbcType="VARCHAR"/>
    <result column="clo_review_status" property="cloReviewStatus" jdbcType="VARCHAR"/>
  </resultMap>


  <select id="queryFreeByAgentId" parameterType="string" resultMap="BaseResultMap">
    select
    b.AGENT_ID,b.FREEZE_TYPE,b.BUS_PLATFORM,b.BUS_NUM,b.bus_id,a.BUS_FREEZE,
    a.PROFIT_FREEZE,a.REFLOW_FREEZE,a.MONTHLY_FREEZE,a.DAILY_FREEZE,a.STOP_PROFIT_FREEZE,a.CASH_FREEZE
    ,a.STOP_COUNT
    from (select
    sum(BUS_FREEZE)as BUS_FREEZE,
    sum(PROFIT_FREEZE)as PROFIT_FREEZE,
    sum(REFLOW_FREEZE)as REFLOW_FREEZE,
    sum(MONTHLY_FREEZE)as MONTHLY_FREEZE,
    sum(DAILY_FREEZE)as DAILY_FREEZE,
    sum(STOP_PROFIT_FREEZE)as STOP_PROFIT_FREEZE,
    sum(CASH_FREEZE)as CASH_FREEZE,
    sum(STOP_COUNT)as STOP_COUNT,
    min(id) as id,agent_id,freeze_type,BUS_PLATFORM,BUS_NUM from A_agent_freeze
    where  freeze_status=0
    <if test="agentId!=null and agentId!=''">and agent_id = #{agentId}</if>
    group by agent_id,freeze_type,BUS_PLATFORM,BUS_NUM)a
    left join A_agent_freeze b on a.id=b.id where b.bus_num is not null
  </select>

  <sql id="queryAgentFreezeRegionSql">
    select * from (
    select t.ID,t.AGENT_ID,t.FREEZE_STATUS,t.FREEZE_PERSON,
    t.FREEZE_DATE,t.FREEZE_CAUSE,t.UNFREEZE_PERSON,
    t.UNFREEZE_DATE,t.UNFREEZE_CAUSE,t.FREEZE_NUM,
    t.REMARK,t.STATUS,t.VERSION,nvl(t.FREEZE_TYPE,'1') as FREEZE_TYPE,
    a.ag_name,a.c_incom_time,to_char(a.freestatus) as FREESTATUS,
    t.BUS_PLATFORM,t.BUS_NUM,t.BUS_FREEZE,t.PROFIT_FREEZE,
    t.REFLOW_FREEZE,t.MONTHLY_FREEZE,t.DAILY_FREEZE,
    t.STOP_PROFIT_FREEZE,t.CASH_FREEZE,t.STOP_COUNT,t.NEW_BUS_FREEZE
    from a_agent_freeze t
    left join a_agent a on a.id=t.agent_id
    <where>
      <if test="1==1"> and t.status = 1 and a.status = 1 </if>
      <if test="map.id!=null and map.agentId != ''">
        and t.id = #{map.id,jdbcType=VARCHAR}
      </if>
      <if test="map.agentId != null and map.agentId != '' ">
        and t.agent_Id in
        <foreach collection="map.agentId" item="listItem" open="(" close=")" separator="," >
          #{listItem}
        </foreach>
      </if>
      <if test="map.agentName != null and map.agentName != '' ">
        and a.ag_name LIKE CONCAT(CONCAT('%',#{map.agentName}),'%')
      </if>
      <if test="map.incomTimeBegin!=null and map.incomTimeBegin!=''">
        and a.c_incom_time >= to_date(#{map.incomTimeBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.incomTimeEnd!=null and map.incomTimeEnd!=''">
        and a.c_incom_time &lt;= to_date(#{map.incomTimeEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freezeDateBegin!=null and map.freezeDateBegin!=''">
        and t.freeze_Date >= to_date(#{map.freezeDateBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freezeDateEnd!=null and map.freezeDateEnd!=''">
        and t.freeze_Date &lt;= to_date(#{map.freezeDateEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.unFreezeDateBegin!=null and map.unFreezeDateBegin!=''">
        and t.unFreeze_Date >= to_date(#{map.unFreezeDateBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.unFreezeDateEnd!=null and map.unFreezeDateEnd!=''">
        and t.unFreeze_Date &lt;= to_date(#{map.unFreezeDateEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freeStatus != null and map.freeStatus != '' ">
        and a.freestatus = #{map.freeStatus,jdbcType=VARCHAR}
      </if>
      <if test="map.freezeCause != null and map.freezeCause != '' ">
        and t.freeze_Cause = #{map.freezeCause,jdbcType=VARCHAR}
      </if>
      <if test="map.freezeStatus != null and map.freezeStatus != '' ">
        and t.freeze_Status = #{map.freezeStatus,jdbcType=VARCHAR}
      </if>
      <if test="map.userId != null and map.userId != '' ">
        and t.freeze_person = #{map.userId,jdbcType=VARCHAR}
      </if>
    </where>
    union
    select t.ID,t.AGENT_ID,t.FREEZE_STATUS,t.FREEZE_PERSON,
    t.FREEZE_DATE,t.FREEZE_CAUSE,t.UNFREEZE_PERSON,
    t.UNFREEZE_DATE,t.UNFREEZE_CAUSE,t.FREEZE_NUM,
    t.REMARK,t.STATUS,t.VERSION,nvl(t.FREEZE_TYPE,'1') as FREEZE_TYPE,
    a.ag_name,a.c_incom_time,to_char(a.freestatus) as FREESTATUS,
    t.BUS_PLATFORM,t.BUS_NUM,t.BUS_FREEZE,t.PROFIT_FREEZE,
    t.REFLOW_FREEZE,t.MONTHLY_FREEZE,t.DAILY_FREEZE,
    t.STOP_PROFIT_FREEZE,t.CASH_FREEZE,t.STOP_COUNT,t.NEW_BUS_FREEZE
    from a_agent_freeze t
    left join a_agent a on a.id=t.agent_id
    <where>
      <if test="1==1"> and t.status = 1 and a.status = 1 </if>
      <if test="map.id!=null and map.agentId != ''">
        and t.id = #{map.id,jdbcType=VARCHAR}
      </if>
      <if test="map.agentId != null and map.agentId != '' ">
        and t.agent_Id in
        <foreach collection="map.agentId" item="listItem" open="(" close=")" separator="," >
          #{listItem}
        </foreach>
      </if>
      <if test="map.agentName != null and map.agentName != '' ">
        and a.ag_name LIKE CONCAT(CONCAT('%',#{map.agentName}),'%')
      </if>
      <if test="map.incomTimeBegin!=null and map.incomTimeBegin!=''">
        and a.c_incom_time >= to_date(#{map.incomTimeBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.incomTimeEnd!=null and map.incomTimeEnd!=''">
        and a.c_incom_time &lt;= to_date(#{map.incomTimeEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freezeDateBegin!=null and map.freezeDateBegin!=''">
        and t.freeze_Date >= to_date(#{map.freezeDateBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freezeDateEnd!=null and map.freezeDateEnd!=''">
        and t.freeze_Date &lt;= to_date(#{map.freezeDateEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.unFreezeDateBegin!=null and map.unFreezeDateBegin!=''">
        and t.unFreeze_Date >= to_date(#{map.unFreezeDateBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.unFreezeDateEnd!=null and map.unFreezeDateEnd!=''">
        and t.unFreeze_Date &lt;= to_date(#{map.unFreezeDateEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freeStatus != null and map.freeStatus != '' ">
        and a.freestatus = #{map.freeStatus,jdbcType=VARCHAR}
      </if>
      <if test="map.freezeCause != null and map.freezeCause != '' ">
        and t.freeze_Cause = #{map.freezeCause,jdbcType=VARCHAR}
      </if>
      <if test="map.freezeStatus != null and map.freezeStatus != '' ">
        and t.freeze_Status = #{map.freezeStatus,jdbcType=VARCHAR}
      </if>
      <if test="map.platfromPerm!=null and map.platfromPerm.size>0">
        and EXISTS(
        select A_AGENT_BUSINFO.ID from A_AGENT_BUSINFO
        left join C_ORGANIZATION oa on oa.id=A_AGENT_BUSINFO.ag_doc_pro
        left join C_ORGANIZATION ob on ob.id=A_AGENT_BUSINFO.AG_DOC_DISTRICT
        where a.id=A_AGENT_BUSINFO.AGENT_ID and A_AGENT_BUSINFO.BUS_PLATFORM in
        <foreach collection="map.platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
        <if test="map.organizationCode!=null and map.organizationCode!=''">
          and (oa.CODE like concat(#{map.organizationCode},'%') or ob.CODE like concat(#{map.organizationCode},'%') )
        </if>
        )
      </if>
      <if test="map.platfromPerm==null or map.platfromPerm.size==0">
        and  1=-1
      </if>
    </where>
    ) t
    order by t.agent_id,t.freeze_date desc
  </sql>

  <select id="queryAgentFreezeListRegion" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    <include refid="queryAgentFreezeRegionSql" />
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="queryAgentFreezeCountRegion" parameterType="map" resultType="int">
    select count(*) from (
    <include refid="queryAgentFreezeRegionSql"/>
    )
  </select>

  <sql id="queryAgentFreezeAllSql">
    select t.ID,t.AGENT_ID,t.FREEZE_STATUS,t.FREEZE_PERSON,
    t.FREEZE_DATE,t.FREEZE_CAUSE,t.UNFREEZE_PERSON,
    t.UNFREEZE_DATE,t.UNFREEZE_CAUSE,t.FREEZE_NUM,
    t.REMARK,t.STATUS,t.VERSION,nvl(t.FREEZE_TYPE,'1') as FREEZE_TYPE,
    a.ag_name,a.c_incom_time,to_char(a.freestatus) as FREESTATUS,
    t.BUS_PLATFORM,t.BUS_NUM,t.BUS_FREEZE,t.PROFIT_FREEZE,
    t.REFLOW_FREEZE,t.MONTHLY_FREEZE,t.DAILY_FREEZE,
    t.STOP_PROFIT_FREEZE,t.CASH_FREEZE,t.STOP_COUNT,t.NEW_BUS_FREEZE
    from a_agent_freeze t
    left join a_agent a on a.id=t.agent_id
    <where>
      <if test="1==1"> and t.status = 1 and a.status = 1 </if>
      <if test="map.id!=null and map.agentId != ''">
        and t.id = #{map.id,jdbcType=VARCHAR}
      </if>
      <if test="map.agentId != null and map.agentId != '' ">
        and t.agent_Id in
        <foreach collection="map.agentId" item="listItem" open="(" close=")" separator="," >
          #{listItem}
        </foreach>
      </if>
      <if test="map.agentName != null and map.agentName != '' ">
        and a.ag_name LIKE CONCAT(CONCAT('%',#{map.agentName}),'%')
      </if>
      <if test="map.incomTimeBegin!=null and map.incomTimeBegin!=''">
        and a.c_incom_time >= to_date(#{map.incomTimeBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.incomTimeEnd!=null and map.incomTimeEnd!=''">
        and a.c_incom_time &lt;= to_date(#{map.incomTimeEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freezeDateBegin!=null and map.freezeDateBegin!=''">
        and t.freeze_Date >= to_date(#{map.freezeDateBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freezeDateEnd!=null and map.freezeDateEnd!=''">
        and t.freeze_Date &lt;= to_date(#{map.freezeDateEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.unFreezeDateBegin!=null and map.unFreezeDateBegin!=''">
        and t.unFreeze_Date >= to_date(#{map.unFreezeDateBegin}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.unFreezeDateEnd!=null and map.unFreezeDateEnd!=''">
        and t.unFreeze_Date &lt;= to_date(#{map.unFreezeDateEnd}, 'yy-mm-dd hh24:mi:ss')
      </if>
      <if test="map.freeStatus != null and map.freeStatus != '' ">
        and a.freestatus = #{map.freeStatus,jdbcType=VARCHAR}
      </if>
      <if test="map.freezeCause != null and map.freezeCause != '' ">
        and t.freeze_Cause = #{map.freezeCause,jdbcType=VARCHAR}
      </if>
      <if test="map.freezeStatus != null and map.freezeStatus != '' ">
        and t.freeze_Status = #{map.freezeStatus,jdbcType=VARCHAR}
      </if>
      </where>
    order by t.agent_id,t.freeze_date desc
  </sql>

  <select id="queryAgentFreezeAll" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    <include refid="queryAgentFreezeAllSql" />
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="queryAgentFreezeCountAll" parameterType="map" resultType="int">
    select count(*) from (
    <include refid="queryAgentFreezeAllSql"/>
    )
  </select>
</mapper>