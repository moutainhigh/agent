<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.dao.order.OOrderMapper" >
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.order.OOrder">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="O_NUM" jdbcType="VARCHAR" property="oNum" />
    <result column="O_APYTIME" jdbcType="TIMESTAMP" property="oApytime" />
    <result column="O_INURETIME" jdbcType="TIMESTAMP" property="oInuretime" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="PAYMENT_METHOD" jdbcType="VARCHAR" property="paymentMethod" />
    <result column="O_AMO" jdbcType="DECIMAL" property="oAmo" />
    <result column="INCENTIVE_AMO" jdbcType="DECIMAL" property="incentiveAmo" />
    <result column="PAY_AMO" jdbcType="DECIMAL" property="payAmo" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="RULEID" jdbcType="VARCHAR" property="ruleid" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="ORDER_PLATFORM" jdbcType="VARCHAR" property="orderPlatform" />
    <result column="REVIEW_STATUS" jdbcType="DECIMAL" property="reviewStatus" />
    <result column="ORDER_STATUS" jdbcType="DECIMAL" property="orderStatus" />
    <result column="CLEAR_STATUS" jdbcType="DECIMAL" property="clearStatus" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="C_TIME" jdbcType="TIMESTAMP" property="cTime" />
    <result column="U_USER" jdbcType="VARCHAR" property="uUser" />
    <result column="U_TIME" jdbcType="TIMESTAMP" property="uTime" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="BUS_ID" jdbcType="VARCHAR" property="busId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, O_NUM, O_APYTIME, O_INURETIME, USER_ID, PAYMENT_METHOD, O_AMO, INCENTIVE_AMO,
    PAY_AMO, REMARK, RULEID, AGENT_ID, ORDER_PLATFORM, REVIEW_STATUS, ORDER_STATUS, CLEAR_STATUS,
    STATUS, C_TIME, U_USER, U_TIME, VERSION, BUS_ID
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.order.OOrderExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from O_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from O_ORDER
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.order.OOrderExample">
    delete from O_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.order.OOrder">
    insert into O_ORDER (ID, O_NUM, O_APYTIME,
    O_INURETIME, USER_ID, PAYMENT_METHOD,
    O_AMO, INCENTIVE_AMO, PAY_AMO,
    REMARK, RULEID, AGENT_ID,
    ORDER_PLATFORM, REVIEW_STATUS, ORDER_STATUS,
    CLEAR_STATUS, STATUS, C_TIME,
    U_USER, U_TIME, VERSION,
    BUS_ID)
    values (#{id,jdbcType=VARCHAR}, #{oNum,jdbcType=VARCHAR}, #{oApytime,jdbcType=TIMESTAMP},
    #{oInuretime,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}, #{paymentMethod,jdbcType=VARCHAR},
    #{oAmo,jdbcType=DECIMAL}, #{incentiveAmo,jdbcType=DECIMAL}, #{payAmo,jdbcType=DECIMAL},
    #{remark,jdbcType=VARCHAR}, #{ruleid,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR},
    #{orderPlatform,jdbcType=VARCHAR}, #{reviewStatus,jdbcType=DECIMAL}, #{orderStatus,jdbcType=DECIMAL},
    #{clearStatus,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, #{cTime,jdbcType=TIMESTAMP},
    #{uUser,jdbcType=VARCHAR}, #{uTime,jdbcType=TIMESTAMP}, #{version,jdbcType=DECIMAL},
    #{busId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.order.OOrder">
    insert into O_ORDER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="oNum != null">
        O_NUM,
      </if>
      <if test="oApytime != null">
        O_APYTIME,
      </if>
      <if test="oInuretime != null">
        O_INURETIME,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="paymentMethod != null">
        PAYMENT_METHOD,
      </if>
      <if test="oAmo != null">
        O_AMO,
      </if>
      <if test="incentiveAmo != null">
        INCENTIVE_AMO,
      </if>
      <if test="payAmo != null">
        PAY_AMO,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="ruleid != null">
        RULEID,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="orderPlatform != null">
        ORDER_PLATFORM,
      </if>
      <if test="reviewStatus != null">
        REVIEW_STATUS,
      </if>
      <if test="orderStatus != null">
        ORDER_STATUS,
      </if>
      <if test="clearStatus != null">
        CLEAR_STATUS,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="cTime != null">
        C_TIME,
      </if>
      <if test="uUser != null">
        U_USER,
      </if>
      <if test="uTime != null">
        U_TIME,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="busId != null">
        BUS_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="oNum != null">
        #{oNum,jdbcType=VARCHAR},
      </if>
      <if test="oApytime != null">
        #{oApytime,jdbcType=TIMESTAMP},
      </if>
      <if test="oInuretime != null">
        #{oInuretime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="oAmo != null">
        #{oAmo,jdbcType=DECIMAL},
      </if>
      <if test="incentiveAmo != null">
        #{incentiveAmo,jdbcType=DECIMAL},
      </if>
      <if test="payAmo != null">
        #{payAmo,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ruleid != null">
        #{ruleid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="orderPlatform != null">
        #{orderPlatform,jdbcType=VARCHAR},
      </if>
      <if test="reviewStatus != null">
        #{reviewStatus,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=DECIMAL},
      </if>
      <if test="clearStatus != null">
        #{clearStatus,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uUser != null">
        #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="uTime != null">
        #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="busId != null">
        #{busId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.order.OOrderExample" resultType="java.lang.Long">
    select count(*) from O_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.order.OOrder">
    update O_ORDER
    <set>
      <if test="oNum != null">
        O_NUM = #{oNum,jdbcType=VARCHAR},
      </if>
      <if test="oApytime != null">
        O_APYTIME = #{oApytime,jdbcType=TIMESTAMP},
      </if>
      <if test="oInuretime != null">
        O_INURETIME = #{oInuretime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="paymentMethod != null">
        PAYMENT_METHOD = #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="oAmo != null">
        O_AMO = #{oAmo,jdbcType=DECIMAL},
      </if>
      <if test="incentiveAmo != null">
        INCENTIVE_AMO = #{incentiveAmo,jdbcType=DECIMAL},
      </if>
      <if test="payAmo != null">
        PAY_AMO = #{payAmo,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ruleid != null">
        RULEID = #{ruleid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="orderPlatform != null">
        ORDER_PLATFORM = #{orderPlatform,jdbcType=VARCHAR},
      </if>
      <if test="reviewStatus != null">
        REVIEW_STATUS = #{reviewStatus,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        ORDER_STATUS = #{orderStatus,jdbcType=DECIMAL},
      </if>
      <if test="clearStatus != null">
        CLEAR_STATUS = #{clearStatus,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uUser != null">
        U_USER = #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="uTime != null">
        U_TIME = #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="busId != null">
        BUS_ID = #{busId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.order.OOrder">
    update O_ORDER
    set O_NUM = #{oNum,jdbcType=VARCHAR},
    O_APYTIME = #{oApytime,jdbcType=TIMESTAMP},
    O_INURETIME = #{oInuretime,jdbcType=TIMESTAMP},
    USER_ID = #{userId,jdbcType=VARCHAR},
    PAYMENT_METHOD = #{paymentMethod,jdbcType=VARCHAR},
    O_AMO = #{oAmo,jdbcType=DECIMAL},
    INCENTIVE_AMO = #{incentiveAmo,jdbcType=DECIMAL},
    PAY_AMO = #{payAmo,jdbcType=DECIMAL},
    REMARK = #{remark,jdbcType=VARCHAR},
    RULEID = #{ruleid,jdbcType=VARCHAR},
    AGENT_ID = #{agentId,jdbcType=VARCHAR},
    ORDER_PLATFORM = #{orderPlatform,jdbcType=VARCHAR},
    REVIEW_STATUS = #{reviewStatus,jdbcType=DECIMAL},
    ORDER_STATUS = #{orderStatus,jdbcType=DECIMAL},
    CLEAR_STATUS = #{clearStatus,jdbcType=DECIMAL},
    STATUS = #{status,jdbcType=DECIMAL},
    C_TIME = #{cTime,jdbcType=TIMESTAMP},
    U_USER = #{uUser,jdbcType=VARCHAR},
    U_TIME = #{uTime,jdbcType=TIMESTAMP},
    VERSION = #{version,jdbcType=DECIMAL},
    BUS_ID = #{busId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>


  <select id="getOrderList" parameterType="java.util.Map" resultType="java.util.Map">
    <include refid="PAGING_START" />
    SELECT O.O_APYTIME,O_NUM,O.O_AMO,A.AG_NAME,A.AG_UNIQ_NUM,
    R.EXPRESS_REMARK,R.ADDR_REALNAME,R.ADDR_MOBILE,R.ADDR_DETAIL,
    S.PRO_NAME,S.MODEL,S.PRO_NUM,S.PRO_PRICE
    FROM O_ORDER O
    LEFT JOIN O_RECEIPT_ORDER R ON O.ID = R.ORDER_ID
    LEFT JOIN A_AGENT A ON A.ID = O.AGENT_ID
    LEFT JOIN O_RECEIPT_PRO P ON R.ORDER_ID = P.ID
    LEFT JOIN O_SUB_ORDER S ON O.ID = S.ORDER_ID
    <include refid="SORTING"></include>
    <include refid="PAGING_END" />
  </select>

  <select id="getOrderCount" parameterType="java.util.Map" resultType="java.lang.Long">
    SELECT COUNT(1)
    FROM O_ORDER O
    LEFT JOIN O_RECEIPT_ORDER R ON O.ID = R.ORDER_ID
    LEFT JOIN A_AGENT A ON A.ID = O.AGENT_ID
    LEFT JOIN O_RECEIPT_PRO P ON R.ORDER_ID = P.ID
    LEFT JOIN O_SUB_ORDER S ON O.ID = S.ORDER_ID
  </select>

  <sql id='SORTING'>
    ORDER BY O.O_APYTIME DESC
  </sql>

  <sql id="PAGING_START">
    <if test="begin != null  and end != null and end >0">
      SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (
    </if>
  </sql>

  <sql id="PAGING_END">
    <if test="begin != null  and end != null and end >0">
      ) A WHERE ROWNUM &lt;= #{end} ) WHERE RN > #{begin}
    </if>
  </sql>

  <select id="queryOrderListView" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    (
    select
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    d.outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro ,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    f.name as ag_doc_district_name ,
    g.name as ag_doc_pro_name ,
    nvl((select sum(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id= o.id
    and o_payment_detail.payment_status in (1,3) ),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id= o.id
    and o_payment_detail.payment_status in (1,3,5) and to_char(plan_pay_time,'mm')=to_char(sysdate,'mm')),0) as byqk,
    (
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    c.platform_name
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo e on o.bus_id = e.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= b.ag_doc_district
    left join c_organization g on g.id= b.ag_doc_pro
    <where>
      o.user_id=#{userId}
      <if test="1==1"> and  o.status = 1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  #{agName} </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''"> and b.AG_DOC_DISTRICT like  #{agDocDistrict} </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'YYYY-MM-DD') between #{beginTime} and #{endTime}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''"> and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.VENDER=#{vender})</if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on  soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
    </where>
    UNION
    select
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    d.outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro ,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    f.name as ag_doc_district_name ,
    g.name as ag_doc_pro_name ,
    o.user_id as user_id,
    nvl((select sum(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id= o.id
    and o_payment_detail.payment_status in (1,3) ),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id= o.id
    and o_payment_detail.payment_status in (1,3,5) and to_char(plan_pay_time,'mm')=to_char(sysdate,'mm')),0) as byqk,
    (
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    c.platform_name
    from  o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo e on o.bus_id = e.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= b.ag_doc_district
    left join c_organization g on g.id= b.ag_doc_pro
    <where>
      <if test="doc==null"> and 1=2 </if>
      <if test="doc!=null"> and (b.ag_doc_pro = #{doc,jdbcType=VARCHAR} or b.ag_doc_district=#{doc,jdbcType=VARCHAR}) and o.review_status != 1</if>
      <if test="1==1"> and  o.status = 1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  #{agName} </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''"> and b.AG_DOC_DISTRICT like  #{agDocDistrict} </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'YYYY-MM-DD')  between #{beginTime} and #{endTime}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''"> and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.VENDER=#{vender})</if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
    </where>
    )
    order by c_time desc
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="queryOrderListViewCount" parameterType="map" resultType="int">
    select count(id) from(
    select
    o.id
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo e on o.bus_id = e.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= b.ag_doc_district
    left join c_organization g on g.id= b.ag_doc_pro
    <where>
      o.user_id=#{userId}
      <if test="1==1"> and  o.status = 1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  #{agName} </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''"> and b.AG_DOC_DISTRICT like  #{agDocDistrict} </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'YYYY-MM-DD') between #{beginTime} and #{endTime}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''"> and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.VENDER=#{vender})</if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on  soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
    </where>
    UNION
    select
    o.id
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo e on o.bus_id = e.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= b.ag_doc_district
    left join c_organization g on g.id= b.ag_doc_pro
    <where>
      <if test="doc==null"> and 1=2 </if>
      <if test="doc!=null"> and (b.ag_doc_pro = #{doc,jdbcType=VARCHAR} or b.ag_doc_district=#{doc,jdbcType=VARCHAR}) and o.review_status != 1 </if>
      <if test="1==1"> and  o.status = 1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  #{agName} </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''"> and b.AG_DOC_DISTRICT like  #{agDocDistrict} </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'YYYY-MM-DD')  between #{beginTime} and #{endTime}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''"> and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.VENDER=#{vender})</if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
    </where>
    )
  </select>


  <!--查询订单数据-->
  <select id="queryAllOrderListView" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    select
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    d.outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    o.user_id as user_id,
    f.name as ag_doc_district_name,
    g.name as ag_doc_pro_name,
    nvl((select sum(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (1,3)),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (1,3,5) and to_char(plan_pay_time,'mm')=to_char(sysdate,'mm')),0) as byqk,
    (nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    c.platform_name,
    (
    select LISTAGG(dict.d_itemname,',') WITHIN GROUP( ORDER BY o_sub_order.order_id)  from o_sub_order
    left join d_dict dict on dict.d_group='ORDER' and dict.d_artifact='MODEL_TYPE' and dict.d_status=1 and dict.D_ITEMVALUE=o_sub_order.pro_type
    where o_sub_order.order_id = o.id and o_sub_order.status=1
    ) as pro_type,
    (select LISTAGG(o_sub_order_activity.activity_name,',') WITHIN GROUP( ORDER BY o_sub_order.order_id) from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id and o_sub_order.status=1 and o_sub_order_activity.status=1
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as activity_name
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo e on o.bus_id = e.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id = b.ag_doc_district
    left join c_organization g on g.id = b.ag_doc_pro
 <where>
      <if test="1==1"> and  o.status = 1 and  b.STATUS=1 and e.STATUS=1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  #{agName} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'YYYY-MM-DD') between #{beginTime} and #{endTime}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1 and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1 and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''"> and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id and os.order_id=o.id where soa.VENDER=#{vender})</if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on  soa.SUB_ORDER_ID=os.id and os.order_id=o.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
    </where>
    order by c_time desc
    <include refid="OracleDialectSuffix" />
  </select>

  <!--查询订单数量-->
  <select id="queryAllOrderListViewCount" parameterType="map" resultType="int">
    select count(id) from(
    select
    o.id
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo e on o.bus_id = e.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= b.ag_doc_district
    left join c_organization g on g.id= b.ag_doc_pro
    <where>
      <if test="1==1"> and  o.status = 1 and  b.STATUS=1 and e.STATUS=1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  #{agName} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'YYYY-MM-DD') between #{beginTime} and #{endTime}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''"> and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.VENDER=#{vender})</if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on  soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
    </where>
    )
  </select>



  <!--待配货商品-->
  <select id="queryOrderSubOrderProduct" resultType="map" parameterType="string">
    select
        o_sub_order.id,
        o_sub_order.order_id,
        o_sub_order.pro_id,
        o_sub_order.pro_code,
        o_sub_order.pro_name,
        o_sub_order.pro_type,
        o_sub_order.pro_price,
        o_sub_order.pro_num,
        o_sub_order.pro_rel_price,
        o_sub_order.send_num,
        o_sub_order.agent_id,
        nvl(
          (
            select sum(o_receipt_pro.pro_num)
            from o_receipt_pro
            where o_receipt_pro.orderid = o_sub_order.order_id
            and o_sub_order.pro_id = o_receipt_pro.pro_id
            and o_receipt_pro.status=1
          ),
        0)as havePhCount
        from o_sub_order
      where o_sub_order.order_id = #{orderId} and o_sub_order.status=1 and o_sub_order.agent_id=#{agentId}
      order by  o_sub_order.c_time asc
  </select>


  <!--已配货商品-->
  <select id="queryHavePeiHuoProduct" resultType="map" parameterType="string">
    select
      O_Receipt_order.Id,
      O_Receipt_order.Order_Id,
      O_Receipt_order.Receipt_Num,
      O_Receipt_order.Address_Id,
      O_Receipt_order.Addr_Realname,
      O_Receipt_order.Addr_Mobile,
      O_Receipt_order.Addr_Province,
      O_Receipt_order.Addr_City,
      O_Receipt_order.Addr_District,
      dr_pro.r_name as Addr_Province_string,
      dr_cit.r_name as Addr_City_string,
      dr_di.r_name as Addr_District_string,
      O_Receipt_order.Addr_Detail,
      O_Receipt_order.Remark,
      O_Receipt_order.Zip_Code,
      O_Receipt_order.Pro_Num,
      O_Receipt_order.Express_Remark,
      O_Receipt_order.Express_Suc_Date,
      O_Receipt_order.Receipt_Status,
      o_receipt_pro.id as receipt_pro_id,
      o_receipt_pro.pro_code,
      o_receipt_pro.pro_name,
      o_receipt_pro.pro_num as pro_num_count,
      o_receipt_pro.receipt_pro_status
    from O_Receipt_order
    left join o_receipt_pro on O_Receipt_order.Id = o_receipt_pro.receipt_id and o_receipt_pro.status=1
    left join d_region dr_pro on dr_pro.r_code = O_Receipt_order.Addr_Province
    left join d_region dr_cit on dr_cit.r_code = O_Receipt_order.Addr_City
    left join d_region dr_di on dr_di.r_code = O_Receipt_order.Addr_District
    where O_Receipt_order.Status=1 and O_Receipt_order.Order_Id=#{orderId}  and O_Receipt_order.Agent_Id = #{agentId}
    order by O_Receipt_order.Address_Id asc, o_receipt_pro.c_time desc
  </select>

<!--   订单发货的导出-->
  <select id="excelOrder" parameterType="map" resultMap="OrderoutVo">
    (
    select
    d.REAL_AMOUNT,
    d.OUTSTANDING_AMOUNT,
    d.DEDUCTION_TYPE,
    d.DEDUCTION_AMOUNT,
    d.ACTUAL_RECEIPT,
    to_char(d.ACTUAL_RECEIPT_DATE,'YYYY-MM-DD') as actualTime,
    d.DOWN_PAYMENT_USER,
    comp.COM_NAME,
    d.PAY_METHOD,
    to_char(o.O_INURETIME,'YYYY-MM-DD') as oinuretime,
    o.id,
    o.o_num as num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    d.outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro ,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    nvl((select sum(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.status =1 and (o_payment_detail.pay_type='FRFQ'or o_payment_detail.pay_type='DKFQ') <if test="id!=null and id!=''"> and  o.id = #{id} </if>),0) as money,
    nvl((select COUNT(o_payment_detail.plan_num)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.status =1 and (o_payment_detail.pay_type='FRFQ'or o_payment_detail.pay_type='DKFQ') <if test="id!=null and id!=''"> and  o.id = #{id} </if>),0) as planNum,
    nvl((select sum(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (1,3)),0) as qk,
    (nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    c.platform_name,
    d.nuclear_user,
    d.nuclear_time,
    NVL2(d.nuclear_time,to_char(d.nuclear_time,'YYYY-MM-DD'),'')as nuclear_user_string,
    org.name as AGDOCPPRO,
    cr.amount as xxAmount,
    dict.d_itemname as pro_type,
    oso.activity_name,

    nvl(d.pay_amount,0) as dd_amt,
    nvl((
      case d.pay_method
        when 'SF1' then d.pay_amount-d.down_payment
        when 'FRFQ' then d.pay_amount
        else 0
      end
    ),0) as ykfr_amt,
    to_char(d.down_payment_date,'YYYY-MM') as down_payment_date,
    d.down_payment_count,
    d.down_payment,
    (case d.pay_method
      when 'SF1' then
        ROUND(
          nvl((
            case d.pay_method
              when 'SF1' then d.pay_amount-d.down_payment
              when 'FRFQ' then d.pay_amount
              else 0
            end
        ),0)/nvl(d.down_payment_count,1)
    ,2)
      when 'FRFQ' then
        ROUND(
          nvl((
            case d.pay_method
              when 'SF1' then d.pay_amount-d.down_payment
              when 'FRFQ' then d.pay_amount
            else 0
          end
      ),0)/nvl(d.down_payment_count,1)
    ,2)
    when 'SF2' then
      ROUND(
        nvl((
          case d.pay_method
            when 'SF2' then d.pay_amount-d.down_payment
            when 'FKFQ' then d.pay_amount
          else 0
        end
      ),0)/nvl(d.down_payment_count,1)
    ,2)
    when 'FKFQ' then
      ROUND(
        nvl((
          case d.pay_method
            when 'SF2' then d.pay_amount-d.down_payment
            when 'FKFQ' then d.pay_amount
          else 0
        end
      ),0)/nvl(d.down_payment_count,1)
    ,2)
    else 0 end) as mqyk_amt,
    nvl(
    (select sum(o_payment_detail.real_pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.status = 1 and o_payment_detail.pay_type='FRFQ'
    ),0) as skfr_amt,
    nvl((
      case d.pay_method
        when 'SF2' then d.pay_amount-d.down_payment
        when 'FKFQ' then d.pay_amount
        else 0
      end
    ),0) as fqdk_amt,
    d.down_payment_count as frdk_count,
    nvl((select sum(o_payment_detail.real_pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.status = 1 and (o_payment_detail.pay_type='DKFQ' or o_payment_detail.pay_type='SF')
    ),0) as sjdk_amt,
    nvl(d.outstanding_amount,0) as syqk_amt

    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join o_cash_receivables cr on d.id = cr.src_id and cr.cashpay_type='PAYMENT' and cr.status=1
    left join a_pay_comp comp on comp.id=cr.COLLECT_COMPANY
    left join c_organization org on org.id = b.ag_doc_pro
    left join o_sub_order os on os.order_id = o.id and os.status=1
    left join o_sub_order_activity oso on oso.sub_order_id = os.id and oso.status=1
    left join d_dict dict on dict.d_group='ORDER' and dict.d_artifact='MODEL_TYPE' and dict.d_status=1 and dict.d_itemname=os.pro_type
    <where>
      <if test="1==1"> and  o.status = 1 </if>
      <if test="nuclearUser!=null and nuclearUser!=''"> and  d.nuclear_user = #{nuclearUser} </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  #{agName} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'YYYY-MM-DD') between #{beginTime} and #{endTime}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.AG_UNIQ_NUM=#{agUniqNum} </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''"> and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.VENDER=#{vender})</if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on  soa.SUB_ORDER_ID=os.id
        and os.order_id=o.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
    </where>
    )
    order by c_time desc
  </select>
  <resultMap id="OrderoutVo" type="com.ryx.credit.pojo.admin.vo.OrderoutVo">
    <result column="AG_UNIQ_NUM" property="agUniqNum" jdbcType="VARCHAR"/>
    <result column="AG_NAME" property="agName" jdbcType="VARCHAR"/>
    <result column="O_NUM" property="num" jdbcType="VARCHAR"/>
    <result column="PAY_AMO" property="payAmo" jdbcType="DECIMAL"/>
    <result column="O_INURETIME" jdbcType="TIMESTAMP" property="inuretime" />
    <result column="PLATFORM_NAME" property="platformName" jdbcType="VARCHAR"/>
    <result column="PRO_NUM" property="proNum" jdbcType="DECIMAL"/>
    <result column="PAY_METHOD" property="payMethod" jdbcType="VARCHAR"/>
    <result column="DOWN_PAYMENT_USER" property="downPaymentUser" jdbcType="VARCHAR"/>
    <result column="COM_NAME" property="comName" jdbcType="VARCHAR"/>
    <result column="ACTUAL_RECEIPT" property="actualReceipt" jdbcType="DECIMAL"/>
    <result column="ACTUAL_RECEIPT_DATE" property="actualReceiptDate" jdbcType="TIMESTAMP"/>

    <result column="DEDUCTION_TYPE" property="deductionType" jdbcType="VARCHAR"/>
    <result column="DEDUCTION_AMOUNT" property="deductionAmount" jdbcType="DECIMAL"/>
    <result column="money" property="money" jdbcType="DECIMAL"/>
    <result column="PLAN_NUM" property="planNum" jdbcType="DECIMAL"/>

    <result column="nuclear_user" property="nuclearUser" jdbcType="VARCHAR"/>
    <result column="nuclear_user_string" property="nuclearTimeString" jdbcType="VARCHAR"/>
    <result column="nuclear_time" property="nuclearTime" jdbcType="TIMESTAMP"/>
    <result column="AGDOCPPRO" property="agDocPpro" jdbcType="VARCHAR"/>
    <result column="xxAmount" property="xxAmount" jdbcType="DECIMAL"/>

    <result column="pro_type" property="proType" jdbcType="VARCHAR"/>
    <result column="activity_name" property="activityName" jdbcType="VARCHAR"/>

    <result column="dd_amt" property="ddAmt" jdbcType="DECIMAL"/>
    <result column="ykfr_amt" property="ykfrAmt" jdbcType="DECIMAL"/>
    <result column="down_payment_date" property="downPaymentDate" jdbcType="TIMESTAMP"/>
    <result column="down_payment_count" property="downPaymentCount" jdbcType="DECIMAL"/>
    <result column="down_payment" property="downPayment" jdbcType="DECIMAL"/>
    <result column="mqyk_amt" property="mqykAmt" jdbcType="DECIMAL"/>
    <result column="skfr_amt" property="skfrAmt" jdbcType="DECIMAL"/>
    <result column="fqdk_amt" property="fqdkAmt" jdbcType="DECIMAL"/>
    <result column="frdk_count" property="frdkCount" jdbcType="DECIMAL"/>
    <result column="sjdk_amt" property="sjdkAmt" jdbcType="DECIMAL"/>
    <result column="syqk_amt" property="syqkAmt" jdbcType="DECIMAL"/>
  </resultMap>
</mapper>