<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.dao.order.OOrderMapper" >
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.order.OOrder">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="O_NUM" jdbcType="VARCHAR" property="oNum" />
    <result column="O_APYTIME" jdbcType="TIMESTAMP" property="oApytime" />
    <result column="O_INURETIME" jdbcType="TIMESTAMP" property="oInuretime" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="PAYMENT_METHOD" jdbcType="VARCHAR" property="paymentMethod" />
    <result column="O_AMO" jdbcType="DECIMAL" property="oAmo" />
    <result column="INCENTIVE_AMO" jdbcType="DECIMAL" property="incentiveAmo" />
    <result column="PAY_AMO" jdbcType="DECIMAL" property="payAmo" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="RULEID" jdbcType="VARCHAR" property="ruleid" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="ORDER_PLATFORM" jdbcType="VARCHAR" property="orderPlatform" />
    <result column="REVIEW_STATUS" jdbcType="DECIMAL" property="reviewStatus" />
    <result column="ORDER_STATUS" jdbcType="DECIMAL" property="orderStatus" />
    <result column="CLEAR_STATUS" jdbcType="DECIMAL" property="clearStatus" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="C_TIME" jdbcType="TIMESTAMP" property="cTime" />
    <result column="U_USER" jdbcType="VARCHAR" property="uUser" />
    <result column="U_TIME" jdbcType="TIMESTAMP" property="uTime" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="BUS_ID" jdbcType="VARCHAR" property="busId" />
    <result column="OX_ORDER" jdbcType="VARCHAR" property="oxOrder" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, O_NUM, O_APYTIME, O_INURETIME, USER_ID, PAYMENT_METHOD, O_AMO, INCENTIVE_AMO,
    PAY_AMO, REMARK, RULEID, AGENT_ID, ORDER_PLATFORM, REVIEW_STATUS, ORDER_STATUS, CLEAR_STATUS,
    STATUS, C_TIME, U_USER, U_TIME, VERSION, BUS_ID, OX_ORDER
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.order.OOrderExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from O_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from O_ORDER
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.order.OOrderExample">
    delete from O_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.order.OOrder">
    insert into O_ORDER (ID, O_NUM, O_APYTIME,
    O_INURETIME, USER_ID, PAYMENT_METHOD,
    O_AMO, INCENTIVE_AMO, PAY_AMO,
    REMARK, RULEID, AGENT_ID,
    ORDER_PLATFORM, REVIEW_STATUS, ORDER_STATUS,
    CLEAR_STATUS, STATUS, C_TIME,
    U_USER, U_TIME, VERSION,
    BUS_ID, OX_ORDER)
    values (#{id,jdbcType=VARCHAR}, #{oNum,jdbcType=VARCHAR}, #{oApytime,jdbcType=TIMESTAMP},
    #{oInuretime,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}, #{paymentMethod,jdbcType=VARCHAR},
    #{oAmo,jdbcType=DECIMAL}, #{incentiveAmo,jdbcType=DECIMAL}, #{payAmo,jdbcType=DECIMAL},
    #{remark,jdbcType=VARCHAR}, #{ruleid,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR},
    #{orderPlatform,jdbcType=VARCHAR}, #{reviewStatus,jdbcType=DECIMAL}, #{orderStatus,jdbcType=DECIMAL},
    #{clearStatus,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, #{cTime,jdbcType=TIMESTAMP},
    #{uUser,jdbcType=VARCHAR}, #{uTime,jdbcType=TIMESTAMP}, #{version,jdbcType=DECIMAL},
    #{busId,jdbcType=VARCHAR}, #{oxOrder,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.order.OOrder">
    insert into O_ORDER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="oNum != null">
        O_NUM,
      </if>
      <if test="oApytime != null">
        O_APYTIME,
      </if>
      <if test="oInuretime != null">
        O_INURETIME,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="paymentMethod != null">
        PAYMENT_METHOD,
      </if>
      <if test="oAmo != null">
        O_AMO,
      </if>
      <if test="incentiveAmo != null">
        INCENTIVE_AMO,
      </if>
      <if test="payAmo != null">
        PAY_AMO,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="ruleid != null">
        RULEID,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="orderPlatform != null">
        ORDER_PLATFORM,
      </if>
      <if test="reviewStatus != null">
        REVIEW_STATUS,
      </if>
      <if test="orderStatus != null">
        ORDER_STATUS,
      </if>
      <if test="clearStatus != null">
        CLEAR_STATUS,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="cTime != null">
        C_TIME,
      </if>
      <if test="uUser != null">
        U_USER,
      </if>
      <if test="uTime != null">
        U_TIME,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="busId != null">
        BUS_ID,
      </if>
      <if test="oxOrder != null">
        OX_ORDER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="oNum != null">
        #{oNum,jdbcType=VARCHAR},
      </if>
      <if test="oApytime != null">
        #{oApytime,jdbcType=TIMESTAMP},
      </if>
      <if test="oInuretime != null">
        #{oInuretime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="oAmo != null">
        #{oAmo,jdbcType=DECIMAL},
      </if>
      <if test="incentiveAmo != null">
        #{incentiveAmo,jdbcType=DECIMAL},
      </if>
      <if test="payAmo != null">
        #{payAmo,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ruleid != null">
        #{ruleid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="orderPlatform != null">
        #{orderPlatform,jdbcType=VARCHAR},
      </if>
      <if test="reviewStatus != null">
        #{reviewStatus,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=DECIMAL},
      </if>
      <if test="clearStatus != null">
        #{clearStatus,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uUser != null">
        #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="uTime != null">
        #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="busId != null">
        #{busId,jdbcType=VARCHAR},
      </if>
      <if test="oxOrder != null">
        #{oxOrder,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.order.OOrderExample" resultType="java.lang.Long">
    select count(*) from O_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.order.OOrder">
    update O_ORDER
    <set>
      <if test="oNum != null">
        O_NUM = #{oNum,jdbcType=VARCHAR},
      </if>
      <if test="oApytime != null">
        O_APYTIME = #{oApytime,jdbcType=TIMESTAMP},
      </if>
      <if test="oInuretime != null">
        O_INURETIME = #{oInuretime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="paymentMethod != null">
        PAYMENT_METHOD = #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="oAmo != null">
        O_AMO = #{oAmo,jdbcType=DECIMAL},
      </if>
      <if test="incentiveAmo != null">
        INCENTIVE_AMO = #{incentiveAmo,jdbcType=DECIMAL},
      </if>
      <if test="payAmo != null">
        PAY_AMO = #{payAmo,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ruleid != null">
        RULEID = #{ruleid,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="orderPlatform != null">
        ORDER_PLATFORM = #{orderPlatform,jdbcType=VARCHAR},
      </if>
      <if test="reviewStatus != null">
        REVIEW_STATUS = #{reviewStatus,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        ORDER_STATUS = #{orderStatus,jdbcType=DECIMAL},
      </if>
      <if test="clearStatus != null">
        CLEAR_STATUS = #{clearStatus,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uUser != null">
        U_USER = #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="uTime != null">
        U_TIME = #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="busId != null">
        BUS_ID = #{busId,jdbcType=VARCHAR},
      </if>
      <if test="oxOrder != null">
        OX_ORDER = #{oxOrder,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.order.OOrder">
    update O_ORDER
    set O_NUM = #{oNum,jdbcType=VARCHAR},
    O_APYTIME = #{oApytime,jdbcType=TIMESTAMP},
    O_INURETIME = #{oInuretime,jdbcType=TIMESTAMP},
    USER_ID = #{userId,jdbcType=VARCHAR},
    PAYMENT_METHOD = #{paymentMethod,jdbcType=VARCHAR},
    O_AMO = #{oAmo,jdbcType=DECIMAL},
    INCENTIVE_AMO = #{incentiveAmo,jdbcType=DECIMAL},
    PAY_AMO = #{payAmo,jdbcType=DECIMAL},
    REMARK = #{remark,jdbcType=VARCHAR},
    RULEID = #{ruleid,jdbcType=VARCHAR},
    AGENT_ID = #{agentId,jdbcType=VARCHAR},
    ORDER_PLATFORM = #{orderPlatform,jdbcType=VARCHAR},
    REVIEW_STATUS = #{reviewStatus,jdbcType=DECIMAL},
    ORDER_STATUS = #{orderStatus,jdbcType=DECIMAL},
    CLEAR_STATUS = #{clearStatus,jdbcType=DECIMAL},
    STATUS = #{status,jdbcType=DECIMAL},
    C_TIME = #{cTime,jdbcType=TIMESTAMP},
    U_USER = #{uUser,jdbcType=VARCHAR},
    U_TIME = #{uTime,jdbcType=TIMESTAMP},
    VERSION = #{version,jdbcType=DECIMAL},
    BUS_ID = #{busId,jdbcType=VARCHAR},
    OX_ORDER = #{oxOrder,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>


  <select id="getOrderList" parameterType="java.util.Map" resultType="java.util.Map">
    <include refid="PAGING_START" />
    SELECT O.O_APYTIME,O_NUM,O.O_AMO,A.AG_NAME,A.AG_UNIQ_NUM,
    R.EXPRESS_REMARK,R.ADDR_REALNAME,R.ADDR_MOBILE,R.ADDR_DETAIL,
    S.PRO_NAME,S.MODEL,S.PRO_NUM,S.PRO_PRICE
    FROM O_ORDER O
    LEFT JOIN O_RECEIPT_ORDER R ON O.ID = R.ORDER_ID
    LEFT JOIN A_AGENT A ON A.ID = O.AGENT_ID
    LEFT JOIN O_RECEIPT_PRO P ON R.ORDER_ID = P.ID
    LEFT JOIN O_SUB_ORDER S ON O.ID = S.ORDER_ID
    <include refid="SORTING"></include>
    <include refid="PAGING_END" />
  </select>

  <select id="getOrderCount" parameterType="java.util.Map" resultType="java.lang.Long">
    SELECT COUNT(1)
    FROM O_ORDER O
    LEFT JOIN O_RECEIPT_ORDER R ON O.ID = R.ORDER_ID
    LEFT JOIN A_AGENT A ON A.ID = O.AGENT_ID
    LEFT JOIN O_RECEIPT_PRO P ON R.ORDER_ID = P.ID
    LEFT JOIN O_SUB_ORDER S ON O.ID = S.ORDER_ID
  </select>

  <sql id='SORTING'>
    ORDER BY O.O_APYTIME DESC
  </sql>

  <sql id="PAGING_START">
    <if test="begin != null  and end != null and end >0">
      SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (
    </if>
  </sql>

  <sql id="PAGING_END">
    <if test="begin != null  and end != null and end >0">
      ) A WHERE ROWNUM &lt;= #{end} ) WHERE RN > #{begin}
    </if>
  </sql>

  <select id="queryOrderListView" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    (
    select
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    nvl(d.outstanding_amount,0) as outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    o.ox_order,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro ,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    e.bus_contact_person,
    f.name as ag_doc_district_name ,
    g.name as ag_doc_pro_name ,
    o.user_id as user_id,
    org.ORG_NICK,
    d.CUSTOM_STAGING,
    nvl((select sum(o_payment_detail.pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3) and o_payment_detail.status = '1'), 0)
    +  nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (2) and o_payment_detail.status = '1'),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3, 5)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'), 0)
    + nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (2)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'),0) as byqk,
    (
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    nvl((select sum(PLAN_PRO_NUM) from O_RECEIPT_PLAN plan where plan.order_id=o.id and plan.status=1),0)as total,
    c.platform_name,
    (select LISTAGG(o_sub_order_activity.activity_name,',') WITHIN GROUP( ORDER BY o_sub_order.order_id) from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id and o_sub_order.status=1 and o_sub_order_activity.status=1
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as activity_name,
    nvl((select sum(o_receipt_pro.pro_num)-sum(o_receipt_pro.send_num) from o_receipt_pro
    where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0) as for_send_num,
    nvl((select reviews_stat
    from (select oa.reviews_stat,order_id,
    row_number() OVER(PARTITION BY oa.order_id ORDER BY oa.adj_tm desc) as row_flg
    from o_order_adj oa
    where oa.status = 1) new_adj
    where new_adj.row_flg = '1' and new_adj.order_id=o.id),9) as adjStat,
    nvl((select 1
    from dual
    where exists (select *
    from o_payment_detail
    where PAYMENT_STATUS = '5'
    and status = '1'
    and order_id = o.id)),0) as paymentStatus
    from o_order o
    left join a_agent b on o.agent_id = b.id and b.status = 1
    left join a_agent_businfo e on e.agent_id = o.agent_id and o.bus_id = e.id and e.status = 1
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= e.ag_doc_district
    left join c_organization g on g.id= e.ag_doc_pro
    left join o_organization org on e.ORGAN_NUM = org.ORG_ID
    <where>
      o.user_id=#{userId}
      <if test="1==1"> and  o.status = 1  </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="ag!=null and ag!=''"> and  b.id = #{ag} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like CONCAT(CONCAT('%',#{agName}),'%') </if>
        <if test="agDocDistrict!=null and agDocDistrict!=''">
            and (b.AG_DOC_PRO = #{agDocDistrict} or b.AG_DOC_DISTRICT = #{agDocDistrict})
        </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''">
        and  EXISTS(select * FROM o_sub_order os
        left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        where soa.VENDER=#{vender} and os.order_id=o.id )
      </if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa
        left join o_sub_order os on soa.SUB_ORDER_ID = os.id and os.status = 1 and os.status = 1
        where os.order_id = o.id and soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
      <if test="platfromPerm==null or platfromPerm.size==0">
        and 1=-1
      </if>
    </where>
    UNION
    select
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    nvl(d.outstanding_amount,0) as outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    o.ox_order,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro ,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    e.bus_contact_person,
    f.name as ag_doc_district_name ,
    g.name as ag_doc_pro_name ,
    o.user_id as user_id,
    org.ORG_NICK,
    d.CUSTOM_STAGING,
    nvl((select sum(o_payment_detail.pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3) and o_payment_detail.status = '1'), 0)
    +  nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (2) and o_payment_detail.status = '1'),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3, 5)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'), 0)
    + nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (2)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'),0) as byqk,
    (
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    nvl((select sum(PLAN_PRO_NUM) from O_RECEIPT_PLAN plan where plan.order_id=o.id and plan.status=1),0)as total,
    c.platform_name,
    (select LISTAGG(o_sub_order_activity.activity_name,',') WITHIN GROUP( ORDER BY o_sub_order.order_id) from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id and o_sub_order.status=1 and o_sub_order_activity.status=1
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as activity_name,
    nvl((select sum(o_receipt_pro.pro_num)-sum(o_receipt_pro.send_num) from o_receipt_pro
    where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0) as for_send_num,
    nvl((select reviews_stat
    from (select oa.reviews_stat,order_id,
    row_number() OVER(PARTITION BY oa.order_id ORDER BY oa.adj_tm desc) as row_flg
    from o_order_adj oa
    where oa.status = 1) new_adj
    where new_adj.row_flg = '1' and new_adj.order_id=o.id),9) as adjStat,
    nvl((select 1
    from dual
    where exists (select *
    from o_payment_detail
    where PAYMENT_STATUS = '5'
    and status = '1'
    and order_id = o.id)),0) as paymentStatus
    from  o_order o
    left join a_agent b on o.agent_id = b.id and b.status = 1
    left join a_agent_businfo e on e.agent_id = o.agent_id and o.bus_id = e.id and e.status = 1
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= e.ag_doc_district
    left join c_organization g on g.id= e.ag_doc_pro
    left join o_organization org on e.ORGAN_NUM = org.ORG_ID
    <where>
      <if test="1==1"> and  o.status = 1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="ag!=null and ag!=''"> and  b.id = #{ag} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  CONCAT(CONCAT('%',#{agName}),'%') </if>
        <if test="agDocDistrict!=null and agDocDistrict!=''">
            and (b.AG_DOC_PRO = #{agDocDistrict} or b.AG_DOC_DISTRICT = #{agDocDistrict})
        </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''">
        and  EXISTS(select * FROM o_sub_order os
        left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        where soa.VENDER=#{vender} and os.order_id=o.id )
      </if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa
        left join o_sub_order os on soa.SUB_ORDER_ID = os.id and os.status = 1 and os.status = 1
        where os.order_id = o.id and soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
      <if test="organizationCode!=null and organizationCode !=''">
        and   (f.CODE like concat(#{organizationCode},'%') or g.CODE like concat(#{organizationCode},'%') )
      </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
      <if test="platfromPerm==null or platfromPerm.size==0">
        and 1=-1
      </if>
    </where>
    )
    order by c_time desc
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="queryOrderListViewCount" parameterType="map" resultType="int">
    select count(id) from(
    select
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    d.outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    o.ox_order,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro ,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    e.bus_contact_person,
    f.name as ag_doc_district_name ,
    g.name as ag_doc_pro_name ,
    o.user_id as user_id,
    nvl((select sum(o_payment_detail.pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3) and o_payment_detail.status = '1'), 0)
    +  nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (2) and o_payment_detail.status = '1'),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3, 5)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'), 0)
    + nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (2)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'),0) as byqk,
    (
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    c.platform_name,
    nvl((select sum(PLAN_PRO_NUM) from O_RECEIPT_PLAN plan where plan.order_id=o.id and plan.status=1),0)as total
    from o_order o
    left join a_agent b on o.agent_id = b.id and b.status = 1
    left join a_agent_businfo e on e.agent_id = o.agent_id and o.bus_id = e.id and e.status = 1
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= e.ag_doc_district
    left join c_organization g on g.id= e.ag_doc_pro
    <where>
      o.user_id=#{userId}
      <if test="1==1"> and  o.status = 1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="ag!=null and ag!=''"> and  b.id = #{ag} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  CONCAT(CONCAT('%',#{agName}),'%') </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''">
        and (b.AG_DOC_PRO = #{agDocDistrict} or b.AG_DOC_DISTRICT = #{agDocDistrict})
      </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''">
        and  EXISTS(select * FROM o_sub_order os
        left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        where soa.VENDER=#{vender} and os.order_id=o.id )</if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa
        left join o_sub_order os on soa.SUB_ORDER_ID = os.id and os.status = 1 and os.status = 1
        where os.order_id = o.id and soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
      <if test="platformType!=null and platformType!=''"> and c.platform_type = #{platformType} </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
      <if test="platfromPerm==null or platfromPerm.size==0">
        and 1=-1
      </if>
    </where>
    UNION
    select
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    d.outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    o.ox_order,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro ,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    e.bus_contact_person,
    f.name as ag_doc_district_name ,
    g.name as ag_doc_pro_name ,
    o.user_id as user_id,
    nvl((select sum(o_payment_detail.pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3) and o_payment_detail.status = '1'), 0)
    +  nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (2) and o_payment_detail.status = '1'),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3, 5)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'), 0)
    + nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (2)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'),0) as byqk,
    (
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    c.platform_name,
    nvl((select sum(PLAN_PRO_NUM) from O_RECEIPT_PLAN plan where plan.order_id=o.id and plan.status=1),0)as total
    from  o_order o
    left join a_agent b on o.agent_id = b.id and b.status = 1
    left join a_agent_businfo e on e.agent_id = o.agent_id and o.bus_id = e.id and e.status = 1
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id= e.ag_doc_district
    left join c_organization g on g.id= e.ag_doc_pro
    <where>
      <if test="1==1"> and  o.status = 1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="ag!=null and ag!=''"> and  b.id = #{ag} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  CONCAT(CONCAT('%',#{agName}),'%') </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''">
        and (b.AG_DOC_PRO = #{agDocDistrict} or b.AG_DOC_DISTRICT = #{agDocDistrict})
      </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1
        and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''">
        and  EXISTS(select * FROM o_sub_order os
        left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        where soa.VENDER=#{vender} and os.order_id=o.id )
      </if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa
        left join o_sub_order os on soa.SUB_ORDER_ID = os.id and os.status = 1 and os.status = 1
        where os.order_id = o.id and soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus}</if>
      <if test="organizationCode!=null and organizationCode !=''">
        and   (f.CODE like concat(#{organizationCode},'%') or g.CODE like concat(#{organizationCode},'%') )
      </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
      <if test="platfromPerm==null or platfromPerm.size==0">
        and 1=-1
      </if>
    </where>
    )
  </select>


  <!--查询订单数据-->
  <select id="queryAllOrderListView" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    select
    dict.D_ITEMNAME,
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    nvl(d.outstanding_amount,0) as outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    o.ox_order,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    e.bus_contact_person,
    o.user_id as user_id,
    f.name as ag_doc_district_name,
    g.name as ag_doc_pro_name,
    org.ORG_NICK,
    d.CUSTOM_STAGING,
    nvl((select sum(o_payment_detail.pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3) and o_payment_detail.status = '1'), 0)
    +  nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (2) and o_payment_detail.status = '1'),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3, 5)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'), 0)
    + nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (2)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'),0) as byqk,
    (nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    c.platform_name,
    (
    select LISTAGG(dict.d_itemname,',') WITHIN GROUP( ORDER BY o_sub_order.order_id)  from o_sub_order
    left join d_dict dict on dict.d_group='ORDER' and dict.d_artifact='MODEL_TYPE' and dict.D_ITEMVALUE=o_sub_order.pro_type and dict.d_status=1
    where o_sub_order.order_id = o.id and o_sub_order.status=1
    ) as pro_type,
    (select LISTAGG(o_sub_order_activity.activity_name,',') WITHIN GROUP( ORDER BY o_sub_order.order_id) from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id and o_sub_order.status=1 and o_sub_order_activity.status=1
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as activity_name,
    nvl((select sum(PLAN_PRO_NUM) from O_RECEIPT_PLAN plan where plan.order_id=o.id and plan.status=1),0)as total,
    nvl((select sum(o_receipt_pro.pro_num)-sum(o_receipt_pro.send_num)from o_receipt_pro
    where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0) as for_send_num
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo e on o.bus_id = e.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id = e.ag_doc_district
    left join c_organization g on g.id = e.ag_doc_pro
    left join o_organization org on e.ORGAN_NUM = org.ORG_ID
    left join d_dict dict on dict.d_itemvalue = c.platform_type AND dict.d_group = 'ORDER' AND dict.d_artifact = 'PLATFROM_TYPE' AND dict.d_status=1
 <where>
      <if test="1==1"> and  o.status = 1 and  b.STATUS=1 and e.STATUS=1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="ag!=null and ag!=''"> and  b.id = #{ag} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  CONCAT(CONCAT('%',#{agName}),'%') </if>
      <if test="platformType!=null and platformType.size > 0">
        and c.platform_type
        <foreach collection="platformType" item="platformItem" open=" in(" close=")" separator=",">
          #{platformItem}
        </foreach>
      </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformList!=null and platformList.size > 0">
         and c.PLATFORM_NUM
        <foreach collection="platformList" item="platform" open=" in(" close=")" separator=",">
          #{platform}
        </foreach>
      </if>
      <if test="proTypeList!=null and proTypeList.size>0">
       and EXISTS(select * from O_SUB_ORDER where  o.id=ORDER_ID and status=1
       and PRO_TYPE
       <foreach collection="proTypeList" item="proType" open=" in(" close=")" separator=",">
          #{proType}
       </foreach>
        )
      </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where  o.id=ORDER_ID and status=1 and model=#{model} ) </if>
      <if test="payMethodList!=null and payMethodList.size>0">
        and d.PAY_METHOD
        <foreach collection="payMethodList" item="payMethod" open=" in(" close=")" separator=",">
            #{payMethod}
        </foreach>
      </if>
      <if test="venderList!=null and venderList.size>0 ">
       and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
       where os.order_id=o.id and soa.VENDER
       <foreach collection="venderList" item="vender" open=" in(" close=")" separator=",">
          #{vender}
       </foreach>
       )
      </if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on  soa.SUB_ORDER_ID=os.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%') and soa.status=1 and os.order_id = o.id)
      </if>
      <if test="reviewStatusList!=null and reviewStatusList.size>0">
       and o.review_status
       <foreach collection="reviewStatusList" item="reviewStatus" open=" in(" close=")" separator=",">
          #{reviewStatus}
       </foreach>
      </if>
      <if test="notLookTem=='true'"> and o.review_status != 1</if>
      <if test="agDocDistrict!=null and agDocDistrict!=''">
       and (b.AG_DOC_PRO = #{agDocDistrict} or b.AG_DOC_DISTRICT = #{agDocDistrict})
      </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
       and o.order_platform in
       <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
         #{platfromPermItem.PLATFORM_NUM}
       </foreach>
      </if>
     <if test="platfromPerm==null or platfromPerm.size==0">
       and 1=-1
     </if>
    </where>
    order by o.c_time desc
    <include refid="OracleDialectSuffix" />
  </select>

  <!--查询订单数量-->
  <select id="queryAllOrderListViewCount" parameterType="map" resultType="int">
    select count(id) from(
    select
    d.PAY_METHOD,
    o.O_INURETIME,
    o.id,
    o.o_num,
    o.order_platform,
    o.payment_method,
    o.o_amo,
    o.pay_amo,
    d.pay_amount,
    d.real_amount,
    d.outstanding_amount,
    d.pay_status,
    o.clear_status,
    o.review_status,
    o.order_status,
    o.o_apytime,
    o.c_time,
    o.remark,
    o.ox_order,
    b.id as agentId,
    b.ag_name,
    b.ag_doc_pro,
    b.ag_doc_district,
    b.AG_UNIQ_NUM,
    e.bus_num,
    e.bus_contact_person,
    o.user_id as user_id,
    f.name as ag_doc_district_name,
    g.name as ag_doc_pro_name,
    nvl((select sum(o_payment_detail.pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3) and o_payment_detail.status = '1'), 0)
    +  nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id
    and o_payment_detail.payment_status in (2) and o_payment_detail.status = '1'),0) as qk,
    nvl((select sum(o_payment_detail.pay_amount)
    FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (1, 3, 5)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'), 0)
    + nvl((select sum(o_payment_detail.pay_amount-o_payment_detail.real_pay_amount) FROM o_payment_detail WHERE o_payment_detail.payment_id = d.id
    and o_payment_detail.order_id = o.id and o_payment_detail.payment_status in (2)
    and to_char(plan_pay_time, 'mm') = to_char(sysdate, 'mm') and o_payment_detail.status = '1'),0) as byqk,
    (nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as dpd,
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0) pro_num,
    c.platform_name,
    (
    select LISTAGG(dict.d_itemname,',') WITHIN GROUP( ORDER BY o_sub_order.order_id)  from o_sub_order
    left join d_dict dict on dict.d_group='ORDER' and dict.d_artifact='MODEL_TYPE' and dict.D_ITEMVALUE=o_sub_order.pro_type and dict.d_status=1
    where o_sub_order.order_id = o.id and o_sub_order.status=1
    ) as pro_type,
    (select LISTAGG(o_sub_order_activity.activity_name,',') WITHIN GROUP( ORDER BY o_sub_order.order_id) from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id and o_sub_order.status=1 and o_sub_order_activity.status=1
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as activity_name,
    nvl((select sum(PLAN_PRO_NUM) from O_RECEIPT_PLAN plan where plan.order_id=o.id and plan.status=1),0)as total,
    nvl((select sum(o_receipt_pro.pro_num)-sum(o_receipt_pro.send_num) from o_receipt_pro
    where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0) as for_send_num
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo e on o.bus_id = e.id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id
    left join c_organization f on f.id = e.ag_doc_district
    left join c_organization g on g.id = e.ag_doc_pro
    <where>
      <if test="1==1"> and  o.status = 1 and  b.STATUS=1 and e.STATUS=1 </if>
      <if test="oNum!=null and oNum!=''"> and  o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and  o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and  o.agent_id = #{agentId} </if>
      <if test="ag!=null and ag!=''"> and  b.id = #{ag} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform =  #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  CONCAT(CONCAT('%',#{agName}),'%') </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformType!=null and platformType.size > 0">
        and c.platform_type
        <foreach collection="platformType" item="platformItem" open=" in(" close=")" separator=",">
          #{platformItem}
        </foreach>
      </if>
      <if test="platformList!=null and platformList.size > 0">
        and c.PLATFORM_NUM
        <foreach collection="platformList" item="platform" open=" in(" close=")" separator=",">
          #{platform}
        </foreach>
      </if>
      <if test="busNum!=null and busNum!=''"> and e.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="proTypeList!=null and proTypeList.size>0">
        and EXISTS(select * from O_SUB_ORDER where  o.id=ORDER_ID and status=1
        and PRO_TYPE
        <foreach collection="proTypeList" item="proType" open=" in(" close=")" separator=",">
          #{proType}
        </foreach>
        )
      </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where  o.id=ORDER_ID and status=1 and model=#{model} ) </if>
      <if test="payMethodList!=null and payMethodList.size>0">
        and d.PAY_METHOD
        <foreach collection="payMethodList" item="payMethod" open=" in(" close=")" separator=",">
          #{payMethod}
        </foreach>
      </if>
      <if test="venderList!=null and venderList.size>0 ">
        and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        where os.order_id=o.id and soa.VENDER
        <foreach collection="venderList" item="vender" open=" in(" close=")" separator=",">
          #{vender}
        </foreach>
        )
      </if>
      <if test="activityName!=null and activityName !=''">
        and EXISTS (select * from o_sub_order_activity soa left join o_sub_order os on  soa.SUB_ORDER_ID=os.id where soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%') and soa.status=1 and os.order_id = o.id)
      </if>
      <if test="reviewStatusList!=null and reviewStatusList.size>0">
        and o.review_status
        <foreach collection="reviewStatusList" item="reviewStatus" open=" in(" close=")" separator=",">
          #{reviewStatus}
        </foreach>
      </if>
      <if test="notLookTem=='true'"> and o.review_status != 1</if>
      <if test="agDocDistrict!=null and agDocDistrict!=''">
        and (b.AG_DOC_PRO = #{agDocDistrict} or b.AG_DOC_DISTRICT = #{agDocDistrict})
      </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.AG_DOC_PRO like  #{agDocPro} </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
      <if test="platfromPerm==null or platfromPerm.size==0">
        and 1=-1
      </if>
    </where>
    )
  </select>



  <!--待配货商品-->
  <select id="queryOrderSubOrderProduct" resultType="map" parameterType="string">
    select
        o_sub_order.id,
        o_sub_order.order_id,
        o_sub_order.pro_id,
        o_sub_order.pro_code,
        o_sub_order.pro_name,
        o_sub_order.pro_type,
        o_sub_order.pro_price,
        o_sub_order.pro_num,
        o_sub_order.pro_rel_price,
        o_sub_order.send_num,
        o_sub_order.agent_id,
        nvl(
          (
            select sum(o_receipt_pro.pro_num)
            from o_receipt_pro
            where o_receipt_pro.orderid = o_sub_order.order_id
            and o_sub_order.pro_id = o_receipt_pro.pro_id
            and o_receipt_pro.status=1
          ),
        0)as havePhCount
        from o_sub_order
      where o_sub_order.order_id = #{orderId} and o_sub_order.status=1 and o_sub_order.agent_id=#{agentId}
      order by  o_sub_order.c_time asc
  </select>


  <!--已配货商品-->
  <select id="queryHavePeiHuoProduct" resultType="map" parameterType="string">
    select
      O_Receipt_order.Id,
      O_Receipt_order.Order_Id,
      O_Receipt_order.Receipt_Num,
      O_Receipt_order.Address_Id,
      O_Receipt_order.Addr_Realname,
      O_Receipt_order.Addr_Mobile,
      O_Receipt_order.Addr_Province,
      O_Receipt_order.Addr_City,
      O_Receipt_order.Addr_District,
      dr_pro.r_name as Addr_Province_string,
      dr_cit.r_name as Addr_City_string,
      dr_di.r_name as Addr_District_string,
      O_Receipt_order.Addr_Detail,
      O_Receipt_order.Remark,
      O_Receipt_order.Zip_Code,
      O_Receipt_order.Pro_Num,
      O_Receipt_order.Express_Remark,
      O_Receipt_order.Express_Suc_Date,
      O_Receipt_order.Receipt_Status,
      o_receipt_pro.id as receipt_pro_id,
      o_receipt_pro.pro_code,
      o_receipt_pro.pro_name,
      o_receipt_pro.pro_num as pro_num_count,
      o_receipt_pro.receipt_pro_status
    from O_Receipt_order
    left join o_receipt_pro on O_Receipt_order.Id = o_receipt_pro.receipt_id and o_receipt_pro.status=1
    left join d_region dr_pro on dr_pro.r_code = O_Receipt_order.Addr_Province
    left join d_region dr_cit on dr_cit.r_code = O_Receipt_order.Addr_City
    left join d_region dr_di on dr_di.r_code = O_Receipt_order.Addr_District
    where O_Receipt_order.Status=1 and O_Receipt_order.Order_Id=#{orderId}  and O_Receipt_order.Agent_Id = #{agentId}
    order by O_Receipt_order.Address_Id asc, o_receipt_pro.c_time desc
  </select>

  <!--订单管理导出-->
  <select id="excelOrder" parameterType="map" resultMap="OrderoutVo">
    (
    select
    dict.D_ITEMNAME as platformType,
    o.c_time as apytime,
    o.o_num as num,o.O_INURETIME,
    b.ag_uniq_num,b.id as agent_id,
    aab.bus_num,
    c.platform_name,
    b.ag_name,
    oorganization.ORG_NICK as orgName,
    nvl((
      select LISTAGG(o_sub_order.pro_code,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
      from o_sub_order
      left join o_order on o_sub_order.order_id = o_order.id
      where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_code,
    nvl((
      select LISTAGG(o_sub_order.pro_name,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
      from o_sub_order
      left join o_order on o_sub_order.order_id = o_order.id
      where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_name,
    nvl((
      select LISTAGG(o_sub_order.pro_type,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
      from o_sub_order
      left join o_order on o_sub_order.order_id = o_order.id
      left join d_dict dict on dict.d_group='ORDER' and dict.d_artifact='MODEL_TYPE' and dict.d_status=1 and dict.d_itemname = o_sub_order.pro_type
      where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),'') as pro_type,
    (
      select LISTAGG(o_sub_order_activity.activity_name,',')
      WITHIN GROUP(ORDER BY o_sub_order.order_id)
      from o_sub_order_activity
      left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id
      where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as activity_name,
    (
      select LISTAGG(o_sub_order_activity.pro_model,',')
      WITHIN GROUP(ORDER BY o_sub_order.order_id)
      from o_sub_order_activity
      left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id
      where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as model,
    nvl((
      select LISTAGG(o_sub_order.pro_rel_price,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
      from o_sub_order
      left join o_order on o_sub_order.order_id = o_order.id
      where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_rel_price,
    nvl((
      select LISTAGG(o_sub_order.pro_num,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
      from o_sub_order
      left join o_order on o_sub_order.order_id = o_order.id
      where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_num,
    nvl((
      select LISTAGG(o_sub_order.pro_rel_price*o_sub_order.pro_num,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
      from o_sub_order
      left join o_order on o_sub_order.order_id = o_order.id
      where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pay_amo,
    o.payment_method as pay_method,
    nvl((
      select LISTAGG(comp.com_name,',') WITHIN GROUP (ORDER BY comp.id)
      from a_pay_comp comp
      left join o_cash_receivables cr on cr.cashpay_type='PAYMENT' and cr.status = 1
      where comp.id = cr.collect_company and d.id = cr.src_id
    ),'') as com_name,
    nvl((
      select LISTAGG(cr.pay_user,',') WITHIN GROUP (ORDER BY cr.src_id)
      from o_cash_receivables cr
      where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as pay_user,
    nvl((
      select LISTAGG(to_char(cr.real_rec_time,'YYYY-MM-DD'),',') WITHIN GROUP (ORDER BY cr.src_id)
      from o_cash_receivables cr
      where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as realRecTime,
    d.nuclear_user,
    nvl((
      select LISTAGG(to_char(cr.check_date,'YYYY-MM-DD'),',') WITHIN GROUP (ORDER BY cr.src_id)
      from o_cash_receivables cr
      where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as checkDate,
    d.down_payment,
    nvl((
      select LISTAGG(cr.amount,'/') WITHIN GROUP (ORDER BY cr.src_id)
      from o_cash_receivables cr
      where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),0) as xxAmount,
    d.profit_mouth,
    d.profit_form,
    nvl((d.outstanding_amount),0) as ykfr_amt,
    to_char(d.down_payment_date,'YYYY-MM') as down_payment_date,
    nvl((
      case d.pay_method
        when 'SF1' then d.down_payment_count
        when 'FRFQ' then d.down_payment_count
        else 0
      end
    ),0) as down_payment_count,
    (decode(d.custom_staging,'1',
       nvl((
         select LISTAGG(de.pay_amount,'/') WITHIN GROUP (ORDER BY de.plan_pay_time)
         from o_payment_detail de
         where de.payment_id = d.id and de.order_id = o.id and de.status = 1
         and (de.pay_type='FRFQ' or de.pay_type='DKFQ')
       ),0),
       nvl((
         select max(de.pay_amount)
         from o_payment_detail de
         where de.payment_id = d.id and de.order_id = o.id and de.status = 1
         and (de.pay_type='FRFQ' or de.pay_type='DKFQ')
       ),0))
    ) as mqyk_amt,
    nvl((
      case d.pay_method
        when 'SF2' then d.pay_amount-d.down_payment
        when 'FKFQ' then d.pay_amount
        else 0
      end
    ),0) as fqdk_amt,
    nvl((
      case d.pay_method
        when 'SF2' then d.down_payment_count
        when 'FKFQ' then d.down_payment_count
        else 0
      end
    ),0) as frdk_count,
    (decode(d.custom_staging,'1',
       nvl((
         select LISTAGG(de.pay_amount,'/') WITHIN GROUP (ORDER BY de.plan_pay_time)
         from o_payment_detail de
         where de.payment_id = d.id and de.order_id = o.id and de.status = 1
         and de.pay_type='DKFQ'
       ),0),
       nvl((
         select max(de.pay_amount)
         from o_payment_detail de
         where de.payment_id = d.id and de.order_id = o.id and de.status = 1
         and de.pay_type='DKFQ'
       ),0))
    ) as mqydkAmt,
    nvl((
      select sum(o_payment_detail.real_pay_amount)
      from o_payment_detail
      where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.status = 1
      and (o_payment_detail.payment_status = 4 or o_payment_detail.payment_status = 2)
    ),0) as sjdk_amt,
    nvl(d.outstanding_amount,0) as syqk_amt,
    (
      nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
      -
      nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro
      where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as to_pick_num,
    nvl((
      select sum(plans.plan_pro_num)
      from o_receipt_plan plans
      where plans.order_id = o.id and plans.status = 1
    ),0) as is_plan_num,
    nvl((
      select sum(pro.pro_num) - sum(pro.send_num)
      from o_receipt_pro pro
      where pro.orderid = o.id and pro.status=1 and pro.receipt_pro_status in (1,2)
    ),0) as toPlanNum,
    o.review_status,
    to_char(o.o_inuretime,'yyyy-MM-dd hh24:mi:ss') as oinuretime,
    orging.name as ag_doc_district,
    org.name as ag_doc_pro,
    o.user_id as order_user,
    nvl((
      select oan.org_name
      from o_organization oan
      where oan.org_id = aab.organ_num and oan.status = 1
    ),'') as org_name,
    to_char(o.o_apytime,'yyyy-MM-dd hh24:mi:ss') as orderDate,
    o.remark
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo aab on aab.id = o.bus_id and aab.agent_id = o.agent_id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id and d.status=1
    left join c_organization org on org.id = aab.ag_doc_pro
    left join c_organization orging on orging.id = aab.ag_doc_district
    left join o_organization oorganization on aab.ORGAN_NUM = oorganization.ORG_ID
    left join d_dict dict on dict.d_itemvalue = c.platform_type AND dict.d_group = 'ORDER' AND dict.d_artifact = 'PLATFROM_TYPE' AND dict.d_status=1
    <where>
      <if test="1==1"> and o.status = 1 and b.status = 1 and aab.status = 1 </if>
      <if test="nuclearUser!=null and nuclearUser!=''"> and d.nuclear_user = #{nuclearUser} </if>
      <if test="oNum!=null and oNum!=''"> and o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and o.agent_id = #{agentId} </if>
      <if test="ag!=null and ag!=''"> and b.id = #{ag} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform = #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like CONCAT(CONCAT('%',#{agName}),'%')  </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformType!=null and platformType.size > 0">
        and c.platform_type
        <foreach collection="platformType" item="platformItem" open=" in(" close=")" separator=",">
          #{platformItem}
        </foreach>
      </if>
      <if test="platformList!=null and platformList.size > 0">
        and c.PLATFORM_NUM
        <foreach collection="platformList" item="platform" open=" in(" close=")" separator=",">
          #{platform}
        </foreach>
      </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.AG_UNIQ_NUM=#{agUniqNum} </if>
      <if test="proTypeList!=null and proTypeList.size>0">
        and EXISTS(select * from O_SUB_ORDER where  o.id=ORDER_ID and status=1
        and PRO_TYPE
        <foreach collection="proTypeList" item="proType" open=" in(" close=")" separator=",">
          #{proType}
        </foreach>
        )
      </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1 and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethodList!=null and payMethodList.size>0">
        and d.PAY_METHOD
        <foreach collection="payMethodList" item="payMethod" open=" in(" close=")" separator=",">
          #{payMethod}
        </foreach>
      </if>
      <if test="venderList!=null and venderList.size>0 ">
        and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        where os.order_id=o.id and soa.VENDER
        <foreach collection="venderList" item="vender" open=" in(" close=")" separator=",">
          #{vender}
        </foreach>
        )
      </if>
      <if test="activityName!=null and activityName!=''">
        and EXISTS (select * from o_sub_order_activity soa
        left join o_sub_order os on soa.SUB_ORDER_ID = os.id and os.status = 1 and os.status = 1
        where os.order_id = o.id and soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatusList!=null and reviewStatusList.size>0">
        and o.review_status
        <foreach collection="reviewStatusList" item="reviewStatus" open=" in(" close=")" separator=",">
          #{reviewStatus}
        </foreach>
      </if>
        <if test="agDocDistrict!=null and agDocDistrict!=''">
            and (b.ag_doc_pro = #{agDocDistrict} or and b.ag_doc_district = #{agDocDistrict})
        </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.ag_doc_pro = #{agDocPro} </if>
      <if test="busNum!=null and busNum!=''"> and aab.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="organizationCode!=null and organizationCode!=''">
        and (orging.CODE like concat(#{organizationCode},'%') or org.CODE like concat(#{organizationCode},'%') )
      </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
    </where>
    )
    order by o.c_time desc
  </select>

  <!--订单管理导出-->
  <select id="orderExcel" parameterType="map" resultMap="OrderoutVo">
    (
    select
    o.c_time as apytime,
    o.o_num as num,  o.o_inuretime,
    b.ag_uniq_num,b.id as agent_id,
    aab.bus_num,
    c.platform_name,
    b.ag_name,
    nvl((
    select LISTAGG(o_sub_order.pro_code,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_code,
    nvl((
    select LISTAGG(o_sub_order.pro_name,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_name,
    nvl((
    select LISTAGG(o_sub_order.pro_type,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    left join d_dict dict on dict.d_group='ORDER' and dict.d_artifact='MODEL_TYPE' and dict.d_status=1 and dict.d_itemname = o_sub_order.pro_type
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_type,
    (
    select LISTAGG(o_sub_order_activity.activity_name,',')
    WITHIN GROUP(ORDER BY o_sub_order.order_id)
    from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as activity_name,
    (
    select LISTAGG(o_sub_order_activity.pro_model,',')
    WITHIN GROUP(ORDER BY o_sub_order.order_id)
    from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as model,
    nvl((
    select LISTAGG(o_sub_order.pro_rel_price,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_rel_price,
    nvl((
    select LISTAGG(o_sub_order.pro_num,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_num,
    nvl((
    select LISTAGG(o_sub_order.pro_rel_price*o_sub_order.pro_num,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pay_amo,
    o.payment_method as pay_method,
    nvl((
    select LISTAGG(comp.com_name,',') WITHIN GROUP (ORDER BY comp.id)
    from a_pay_comp comp
    left join o_cash_receivables cr on cr.cashpay_type='PAYMENT' and cr.status = 1
    where comp.id = cr.collect_company and d.id = cr.src_id
    ),'') as com_name,
    nvl((
    select LISTAGG(cr.pay_user,',') WITHIN GROUP (ORDER BY cr.src_id)
    from o_cash_receivables cr
    where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as pay_user,
    nvl((
    select LISTAGG(to_char(cr.real_rec_time,'YYYY-MM-DD'),',') WITHIN GROUP (ORDER BY cr.src_id)
    from o_cash_receivables cr
    where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as realRecTime,
    d.nuclear_user,
    nvl((
    select LISTAGG(to_char(cr.check_date,'YYYY-MM-DD'),',') WITHIN GROUP (ORDER BY cr.src_id)
    from o_cash_receivables cr
    where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as checkDate,
    nvl((
    select LISTAGG(cr.amount,'/') WITHIN GROUP (ORDER BY cr.src_id)
    from o_cash_receivables cr
    where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),0) as xxAmount,
    d.profit_mouth,
    d.profit_form,
    nvl((d.outstanding_amount),0) as ykfr_amt,
    to_char(d.down_payment_date,'YYYY-MM') as down_payment_date,
    nvl((
    case d.pay_method
    when 'SF1' then d.down_payment_count
    when 'FRFQ' then d.down_payment_count
    else 0
    end
    ),0) as down_payment_count,
    nvl((
    select max(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.status = 1
    and (o_payment_detail.pay_type='FRFQ' or o_payment_detail.pay_type='DKFQ')
    ),0) as mqyk_amt,
    nvl((
    case d.pay_method
    when 'SF2' then d.pay_amount-d.down_payment
    when 'FKFQ' then d.pay_amount
    else 0
    end
    ),0) as fqdk_amt,
    nvl((
    case d.pay_method
    when 'SF2' then d.down_payment_count
    when 'FKFQ' then d.down_payment_count
    else 0
    end
    ),0) as frdk_count,
    nvl((
    select max(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.status = 1
    and (o_payment_detail.pay_type='FRFQ' or o_payment_detail.pay_type='DKFQ')
    ),0) as mqydkAmt,
    nvl((
    select sum(o_payment_detail.real_pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.status = 1
    and (o_payment_detail.payment_status = 4 or o_payment_detail.payment_status = 6)
    and (o_payment_detail.pay_type='DKFQ' or o_payment_detail.pay_type='FRFQ')
    ),0) as sjdk_amt,
    nvl(d.outstanding_amount,0) as syqk_amt,
    (
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro
    where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as to_pick_num,
    nvl((
    select sum(plans.plan_pro_num) from o_receipt_plan plans where plans.order_id = o.id and plans.status = 1
    ),0) as is_plan_num,
    o.review_status,
    to_char(o.o_inuretime,'yyyy-MM-dd hh24:mi:ss') as oinuretime,
    orging.name as ag_doc_district,
    org.name as ag_doc_pro,
    o.user_id as order_user,
    nvl((
    select oan.org_name
    from o_organization oan
    where oan.org_id = aab.organ_num and oan.status = 1
    ),'') as org_name,
    to_char(o.o_apytime,'yyyy-MM-dd hh24:mi:ss') as orderDate,
    o.remark
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo aab on aab.id = o.bus_id and aab.agent_id = o.agent_id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id and d.status=1
    left join c_organization org on org.id = aab.ag_doc_pro
    left join c_organization orging on orging.id = aab.ag_doc_district
    <where>
      o.user_id = #{userId}
      <if test="1==1"> and o.status = 1 and b.status = 1 and aab.status = 1 </if>
      <if test="nuclearUser!=null and nuclearUser!=''"> and d.nuclear_user = #{nuclearUser} </if>
      <if test="oNum!=null and oNum!=''"> and o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform = #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like CONCAT(CONCAT('%',#{agName}),'%')  </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.AG_UNIQ_NUM=#{agUniqNum} </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1 and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1 and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''">
        and EXISTS(select * from o_sub_order os
        left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id where os.order_id=o.id and soa.VENDER=#{vender})
      </if>
      <if test="activityName!=null and activityName!=''">
        and EXISTS (select * from o_sub_order_activity soa
        left join o_sub_order os on soa.SUB_ORDER_ID = os.id and os.status = 1 and os.status = 1
        where os.order_id = o.id and soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus} </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''">
        and (b.ag_doc_pro = #{agDocDistrict} or and b.ag_doc_district = #{agDocDistrict})
      </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.ag_doc_pro = #{agDocPro} </if>
      <if test="busNum!=null and busNum!=''"> and aab.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="organizationCode!=null and organizationCode!=''">
        and (orging.CODE like concat(#{organizationCode},'%') or org.CODE like concat(#{organizationCode},'%') )
      </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
    </where>
    UNION
    select
    o.c_time as apytime,
    o.o_num as num,  o.o_inuretime ,
    b.ag_uniq_num,b.id as agent_id,
    aab.bus_num,
    c.platform_name,
    b.ag_name,
    nvl((
    select LISTAGG(o_sub_order.pro_code,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_code,
    nvl((
    select LISTAGG(o_sub_order.pro_name,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_name,
    nvl((
    select LISTAGG(o_sub_order.pro_type,',') WITHIN GROUP (ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    left join d_dict dict on dict.d_group='ORDER' and dict.d_artifact='MODEL_TYPE' and dict.d_status=1 and dict.d_itemname = o_sub_order.pro_type
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_type,
    (
    select LISTAGG(o_sub_order_activity.activity_name,',')
    WITHIN GROUP(ORDER BY o_sub_order.order_id)
    from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as activity_name,
    (
    select LISTAGG(o_sub_order_activity.pro_model,',')
    WITHIN GROUP(ORDER BY o_sub_order.order_id)
    from o_sub_order_activity
    left join o_sub_order on o_sub_order_activity.sub_order_id = o_sub_order.id
    where o_sub_order.status=1 and o_sub_order_activity.status=1 and o_sub_order.order_id = o.id
    ) as model,
    nvl((
    select LISTAGG(o_sub_order.pro_rel_price,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_rel_price,
    nvl((
    select LISTAGG(o_sub_order.pro_num,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pro_num,
    nvl((
    select LISTAGG(o_sub_order.pro_rel_price*o_sub_order.pro_num,'/') WITHIN GROUP( ORDER BY o_sub_order.order_id)
    from o_sub_order
    left join o_order on o_sub_order.order_id = o_order.id
    where o_sub_order.status=1 and o_order.status=1 and o_sub_order.order_id = o.id
    ),0) as pay_amo,
    o.payment_method as pay_method,
    nvl((
    select LISTAGG(comp.com_name,',') WITHIN GROUP (ORDER BY comp.id)
    from a_pay_comp comp
    left join o_cash_receivables cr on cr.cashpay_type='PAYMENT' and cr.status = 1
    where comp.id = cr.collect_company and d.id = cr.src_id
    ),'') as com_name,
    nvl((
    select LISTAGG(cr.pay_user,',') WITHIN GROUP (ORDER BY cr.src_id)
    from o_cash_receivables cr
    where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as pay_user,
    nvl((
    select LISTAGG(to_char(cr.real_rec_time,'YYYY-MM-DD'),',') WITHIN GROUP (ORDER BY cr.src_id)
    from o_cash_receivables cr
    where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as realRecTime,
    d.nuclear_user,
    nvl((
    select LISTAGG(to_char(cr.check_date,'YYYY-MM-DD'),',') WITHIN GROUP (ORDER BY cr.src_id)
    from o_cash_receivables cr
    where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as checkDate,
    nvl((
    select LISTAGG(cr.amount,'/') WITHIN GROUP (ORDER BY cr.src_id)
    from o_cash_receivables cr
    where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),0) as xxAmount,
    d.profit_mouth,
    d.profit_form,
    nvl((d.outstanding_amount),0) as ykfr_amt,
    to_char(d.down_payment_date,'YYYY-MM') as down_payment_date,
    nvl((
    case d.pay_method
    when 'SF1' then d.down_payment_count
    when 'FRFQ' then d.down_payment_count
    else 0
    end
    ),0) as down_payment_count,
    nvl((
    select max(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.status = 1
    and (o_payment_detail.pay_type='FRFQ' or o_payment_detail.pay_type='DKFQ')
    ),0) as mqyk_amt,
    nvl((
    case d.pay_method
    when 'SF2' then d.pay_amount-d.down_payment
    when 'FKFQ' then d.pay_amount
    else 0
    end
    ),0) as fqdk_amt,
    nvl((
    case d.pay_method
    when 'SF2' then d.down_payment_count
    when 'FKFQ' then d.down_payment_count
    else 0
    end
    ),0) as frdk_count,
    nvl((
    select max(o_payment_detail.pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.status = 1
    and (o_payment_detail.pay_type='FRFQ' or o_payment_detail.pay_type='DKFQ')
    ),0) as mqydkAmt,
    nvl((
    select sum(o_payment_detail.real_pay_amount)
    from o_payment_detail
    where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.status = 1
    and (o_payment_detail.payment_status = 4 or o_payment_detail.payment_status = 6)
    and (o_payment_detail.pay_type='DKFQ' or o_payment_detail.pay_type='FRFQ')
    ),0) as sjdk_amt,
    nvl(d.outstanding_amount,0) as syqk_amt,
    (
    nvl((select sum(o_sub_order.pro_num) from o_sub_order where o_sub_order.order_id = o.id and o_sub_order.status=1),0)
    -
    nvl((select sum(o_receipt_pro.pro_num) from o_receipt_pro
    where o_receipt_pro.orderid=o.id and o_receipt_pro.status=1 and o_receipt_pro.receipt_pro_status in (1,2)),0)
    )as to_pick_num,
    nvl((
    select sum(plans.plan_pro_num) from o_receipt_plan plans where plans.order_id = o.id and plans.status = 1
    ),0) as is_plan_num,
    o.review_status,
    to_char(o.o_inuretime,'yyyy-MM-dd hh24:mi:ss') as oinuretime,
    orging.name as ag_doc_district,
    org.name as ag_doc_pro,
    o.user_id as order_user,
    nvl((
    select oan.org_name
    from o_organization oan
    where oan.org_id = aab.organ_num and oan.status = 1
    ),'') as org_name,
    to_char(o.o_apytime,'yyyy-MM-dd hh24:mi:ss') as orderDate,
    o.remark
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo aab on aab.id = o.bus_id and aab.agent_id = o.agent_id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id and d.status=1
    left join c_organization org on org.id = aab.ag_doc_pro
    left join c_organization orging on orging.id = aab.ag_doc_district
    <where>
      <if test="1==1"> and o.status = 1 and b.status = 1 and aab.status = 1 </if>
      <if test="nuclearUser!=null and nuclearUser!=''"> and d.nuclear_user = #{nuclearUser} </if>
      <if test="oNum!=null and oNum!=''"> and o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and o.agent_id = #{agentId} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform = #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like  CONCAT(CONCAT('%',#{agName}),'%') </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformNum!=null and platformNum!=''"> and c.PLATFORM_NUM=#{platformNum} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.AG_UNIQ_NUM=#{agUniqNum} </if>
      <if test="proType!=null and proType!=''"> and EXISTS(select * from O_SUB_ORDER where status=1 and PRO_TYPE=#{proType} and o.id=ORDER_ID) </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1 and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="vender!=null and vender!=''">
        and EXISTS(select * from o_sub_order os
        left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id where os.order_id=o.id and soa.VENDER=#{vender})
      </if>
      <if test="activityName!=null and activityName!=''">
        and EXISTS (select * from o_sub_order_activity soa
        left join o_sub_order os on soa.SUB_ORDER_ID = os.id and os.status = 1 and os.status = 1
        where os.order_id = o.id and soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatus!=null and reviewStatus!=''"> and o.review_status = #{reviewStatus} </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''">
        and (b.ag_doc_pro = #{agDocDistrict} or and b.ag_doc_district = #{agDocDistrict})
      </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.ag_doc_pro = #{agDocPro} </if>
      <if test="busNum!=null and busNum!=''"> and aab.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="organizationCode!=null and organizationCode!=''">
        and (orging.CODE like concat(#{organizationCode},'%') or org.CODE like concat(#{organizationCode},'%') )
      </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
    </where>
    )
    order by apytime desc
  </select>

  <!--订单商品明细导出-->
  <select id="excelOrderDetail" parameterType="map" resultMap="OrderoutVo">
    (
    select
    dict.D_ITEMNAME as platformType,
    o.c_time as apytime,
    o.o_num as num,o.O_INURETIME,
    b.id as agent_id,
    b.ag_uniq_num,
    aab.bus_num,
    c.platform_name,
    b.ag_name,
    oorganization.ORG_NICK as orgName,
    os.pro_code,
    os.pro_name,
    nvl((
      select os.pro_type
      from d_dict dict
      where dict.d_group = 'ORDER' and dict.d_artifact = 'MODEL_TYPE' and dict.d_status = 1
      and dict.d_itemvalue = os.pro_type and os.status = 1 and dict.d_status = 1
    ),'') as pro_type,
    oso.activity_name,
    oso.pro_model as model,
    os.pro_rel_price,
    os.pro_num,
    nvl(os.pro_rel_price * os.pro_num,0) as pay_amo,
    o.payment_method as pay_method,
    nvl((
      select LISTAGG(comp.com_name,',') WITHIN GROUP (ORDER BY comp.id)
      from a_pay_comp comp
      left join o_cash_receivables cr on cr.cashpay_type='PAYMENT' and cr.status = 1
      where comp.id = cr.collect_company and d.id = cr.src_id
    ),'') as com_name,
    nvl((
      select LISTAGG(cr.pay_user,',') WITHIN GROUP (ORDER BY cr.src_id)
      from o_cash_receivables cr
      where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as pay_user,
    nvl((
      select LISTAGG(to_char(cr.real_rec_time,'YYYY-MM-DD'),',') WITHIN GROUP (ORDER BY cr.src_id)
      from o_cash_receivables cr
      where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as realRecTime,
    d.nuclear_user,
    nvl((
      select LISTAGG(to_char(cr.check_date,'YYYY-MM-DD'),',') WITHIN GROUP (ORDER BY cr.src_id)
      from o_cash_receivables cr
      where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),'') as checkDate,
    d.down_payment,
    nvl((
      select LISTAGG(cr.amount,'/') WITHIN GROUP (ORDER BY cr.src_id)
      from o_cash_receivables cr
      where cr.src_id = d.id and cr.cashpay_type='PAYMENT' and cr.status = 1
    ),0) as xxAmount,
    d.profit_mouth,
    d.profit_form,
    nvl((d.outstanding_amount),0) as ykfr_amt,
    to_char(d.down_payment_date,'YYYY-MM') as down_payment_date,
    nvl((
      case d.pay_method
        when 'SF1' then d.down_payment_count
        when 'FRFQ' then d.down_payment_count
        else 0
      end
    ),0) as down_payment_count,
    (decode(d.custom_staging,'1',
      nvl((
        select LISTAGG(de.pay_amount,'/') WITHIN GROUP (ORDER BY de.plan_pay_time)
        from o_payment_detail de
        where de.payment_id = d.id and de.order_id = o.id and de.status = 1
        and de.pay_type='FRFQ'
      ),0),
      nvl((
        select max(de.pay_amount)
        from o_payment_detail de
        where de.payment_id = d.id and de.order_id = o.id and de.status = 1
        and de.pay_type='FRFQ'
      ),0))
    ) as mqyk_amt,
    nvl((
      case d.pay_method
        when 'SF2' then d.pay_amount-d.down_payment
        when 'FKFQ' then d.pay_amount
        else 0
      end
    ),0) as fqdk_amt,
    nvl((
      case d.pay_method
        when 'SF2' then d.down_payment_count
        when 'FKFQ' then d.down_payment_count
        else 0
      end
    ),0) as frdk_count,
    (decode(d.custom_staging,'1',
      nvl((
        select LISTAGG(de.pay_amount,'/') WITHIN GROUP (ORDER BY de.plan_pay_time)
        from o_payment_detail de
        where de.payment_id = d.id and de.order_id = o.id and de.status = 1
        and de.pay_type='DKFQ'
      ),0),
      nvl((
        select max(de.pay_amount)
        from o_payment_detail de
        where de.payment_id = d.id and de.order_id = o.id and de.status = 1
        and de.pay_type='DKFQ'
      ),0))
    ) as mqydkAmt,
    nvl((
      select sum(o_payment_detail.real_pay_amount)
      from o_payment_detail
      where o_payment_detail.payment_id = d.id and o_payment_detail.order_id = o.id and o_payment_detail.status = 1
      and (o_payment_detail.payment_status = 4 or o_payment_detail.payment_status = 2)
    ),0) as sjdk_amt,
    nvl(d.outstanding_amount,0) as syqk_amt,
    (
      nvl(os.pro_num,0)
      -
      nvl((select sum(pro.pro_num) from o_receipt_pro pro
      left join o_receipt_order ro on ro.id = pro.receipt_id
      where pro.orderid = o.id and pro.status = 1 and ro.status = 1 and os.pro_id = pro.pro_id and pro.receipt_pro_status in (1,2)),0)
    )as to_pick_num,
    nvl((
      select sum(pro.pro_num)
      from o_receipt_pro pro
      left join o_receipt_order ro on ro.id = pro.receipt_id
      where pro.orderid = o.id and pro.status = 1 and ro.status = 1 and os.pro_id = pro.pro_id and pro.receipt_pro_status in (1,2)),
    0) as is_plan_num,
    nvl((
      select sum(pro.pro_num) - sum(pro.send_num)
      from o_receipt_pro pro
      left join o_receipt_order ro on ro.id = pro.receipt_id
      where pro.orderid = o.id and pro.status = 1 and ro.status = 1 and os.pro_id = pro.pro_id and pro.receipt_pro_status in (1,2)
    ),0) as toPlanNum,
    o.review_status,
    to_char(o.o_inuretime,'yyyy-MM-dd hh24:mi:ss') as oinuretime,
    orging.name as ag_doc_district,
    org.name as ag_doc_pro,
    o.user_id as order_user,
    nvl((
      select oan.org_name
      from o_organization oan
      where oan.org_id = aab.organ_num and oan.status = 1
    ),'') as org_name,
    to_char(o.o_apytime,'yyyy-MM-dd hh24:mi:ss') as orderDate,
    o.remark
    from o_order o
    left join a_agent b on o.agent_id = b.id
    left join a_agent_businfo aab on aab.id = o.bus_id and aab.agent_id = o.agent_id
    left join a_platform c on c.platform_num = o.order_platform
    left join o_payment d on d.order_id = o.id and d.status=1
    left join c_organization org on org.id = aab.ag_doc_pro
    left join c_organization orging on orging.id = aab.ag_doc_district
    left join o_organization oorganization on aab.ORGAN_NUM = oorganization.ORG_ID
    left join d_dict dict on dict.d_itemvalue = c.platform_type AND dict.d_group = 'ORDER' AND dict.d_artifact = 'PLATFROM_TYPE' AND dict.d_status=1
    left join o_sub_order os on os.order_id = o.id
    left join o_sub_order_activity oso on oso.sub_order_id = os.id
    <where>
      <if test="1==1"> and o.status = 1 and b.status = 1 and aab.status = 1 and os.status = 1 and oso.status = 1 </if>
      <if test="nuclearUser!=null and nuclearUser!=''"> and d.nuclear_user = #{nuclearUser} </if>
      <if test="oNum!=null and oNum!=''"> and o.o_num = #{oNum} </if>
      <if test="id!=null and id!=''"> and o.id = #{id} </if>
      <if test="agentId!=null and agentId!=''"> and o.agent_id = #{agentId} </if>
      <if test="ag!=null and ag!=''"> and b.id = #{ag} </if>
      <if test="orderPlatform!=null and orderPlatform!=''"> and o.order_platform = #{orderPlatform} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.ag_uniq_num = #{agUniqNum} </if>
      <if test="agName!=null and agName!=''"> and b.ag_name like CONCAT(CONCAT('%',#{agName}),'%')  </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(o.c_time,'yyyy-mm-dd hh24:mi:ss') between #{beginTime} and #{endTime}) </if>
      <if test="creatTimeFirst!=null and creatTimeLast!=''"> and (to_char(o.O_INURETIME,'yyyy-mm-dd hh24:mi:ss') between #{creatTimeFirst} and #{creatTimeLast}) </if>
      <if test="platformType!=null and platformType.size > 0">
        and c.platform_type
        <foreach collection="platformType" item="platformItem" open=" in(" close=")" separator=",">
          #{platformItem}
        </foreach>
      </if>
      <if test="platformList!=null and platformList.size > 0">
        and c.PLATFORM_NUM
        <foreach collection="platformList" item="platform" open=" in(" close=")" separator=",">
          #{platform}
        </foreach>
      </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and b.AG_UNIQ_NUM=#{agUniqNum} </if>
      <if test="proTypeList!=null and proTypeList.size>0">
        and EXISTS(select * from O_SUB_ORDER where  o.id=ORDER_ID and status=1
        and PRO_TYPE
        <foreach collection="proTypeList" item="proType" open=" in(" close=")" separator=",">
          #{proType}
        </foreach>
        )
      </if>
      <if test="model!=null and model!=''"> and EXISTS(select * from O_SUB_ORDER where status=1 and model=#{model} and o.id=ORDER_ID) </if>
      <if test="payMethodList!=null and payMethodList.size>0">
        and d.PAY_METHOD
        <foreach collection="payMethodList" item="payMethod" open=" in(" close=")" separator=",">
          #{payMethod}
        </foreach>
      </if>
      <if test="venderList!=null and venderList.size>0 ">
        and  EXISTS(select * FROM o_sub_order os left join o_sub_order_activity soa on soa.SUB_ORDER_ID=os.id
        where os.order_id=o.id and soa.VENDER
        <foreach collection="venderList" item="vender" open=" in(" close=")" separator=",">
          #{vender}
        </foreach>
        )
      </if>
      <if test="activityName!=null and activityName!=''">
        and EXISTS (select * from o_sub_order_activity soa
        left join o_sub_order os on soa.SUB_ORDER_ID = os.id and os.status = 1 and os.status = 1
        where os.order_id = o.id and soa.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%'))
      </if>
      <if test="reviewStatusList!=null and reviewStatusList.size>0">
        and o.review_status
        <foreach collection="reviewStatusList" item="reviewStatus" open=" in(" close=")" separator=",">
          #{reviewStatus}
        </foreach>
      </if>
      <if test="agDocDistrict!=null and agDocDistrict!=''">
        and (b.ag_doc_pro = #{agDocDistrict} or and b.ag_doc_district = #{agDocDistrict})
      </if>
      <if test="agDocPro!=null and agDocPro!=''"> and b.ag_doc_pro = #{agDocPro} </if>
      <if test="busNum!=null and busNum!=''"> and aab.bus_num like CONCAT(CONCAT('%',#{busNum}),'%') </if>
      <if test="organizationCode!=null and organizationCode!=''">
        and (orging.CODE like concat(#{organizationCode},'%') or org.CODE like concat(#{organizationCode},'%') )
      </if>
      <if test="platfromPerm!=null and platfromPerm.size>0">
        and o.order_platform in
        <foreach collection="platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >
          #{platfromPermItem.PLATFORM_NUM}
        </foreach>
      </if>
    </where>
    )
    order by o.c_time desc
  </select>

  <!--订单导出VO-->
  <resultMap id="OrderoutVo" type="com.ryx.credit.pojo.admin.vo.OrderoutVo">
    <result column="o_apytime" property="apytime" jdbcType="TIMESTAMP"/>
    <result column="o_num" property="num" jdbcType="VARCHAR"/>
    <result column="agent_id" property="agentId" jdbcType="VARCHAR"/>
    <result column="ag_uniq_num" property="agUniqNum" jdbcType="VARCHAR"/>
    <result column="bus_num" property="busNum" jdbcType="VARCHAR"/>
    <result column="platform_name" property="platformName" jdbcType="VARCHAR"/>
    <result column="ag_name" property="agName" jdbcType="VARCHAR"/>
    <result column="pro_code" property="proCode" jdbcType="VARCHAR"/>
    <result column="pro_name" property="proName" jdbcType="VARCHAR"/>
    <result column="pro_type" property="proType" jdbcType="VARCHAR"/>
    <result column="activity_name" property="activityName" jdbcType="VARCHAR"/>
    <result column="model" property="model" jdbcType="VARCHAR"/>
    <result column="pro_rel_price" property="proRelPrice" jdbcType="VARCHAR"/>
    <result column="pro_num" property="proNum" jdbcType="VARCHAR"/>
    <result column="pay_amo" property="payAmo" jdbcType="VARCHAR"/>
    <result column="pay_method" property="payMethod" jdbcType="VARCHAR"/>
    <result column="com_name" property="comName" jdbcType="VARCHAR"/>
    <result column="pay_user" property="payUser" jdbcType="VARCHAR"/>
    <result column="real_rec_time" property="realRecTime" jdbcType="TIMESTAMP"/>
    <result column="nuclear_user" property="nuclearUser" jdbcType="VARCHAR"/>
    <result column="check_date" property="checkDate" jdbcType="TIMESTAMP"/>
    <result column="down_payment" property="downPayment" jdbcType="VARCHAR"/>
    <result column="xxAmount" property="xxAmount" jdbcType="VARCHAR"/>
    <result column="profit_mouth" property="profitMouth" jdbcType="VARCHAR"/>
    <result column="profit_form" property="profitForm" jdbcType="VARCHAR"/>
    <result column="ykfr_amt" property="ykfrAmt" jdbcType="DECIMAL"/>
    <result column="down_payment_date" property="downPaymentDate" jdbcType="TIMESTAMP"/>
    <result column="down_payment_count" property="downPaymentCount" jdbcType="DECIMAL"/>
    <result column="mqyk_amt" property="mqykAmt" jdbcType="VARCHAR"/>
    <result column="fqdk_amt" property="fqdkAmt" jdbcType="DECIMAL"/>
    <result column="frdk_count" property="frdkCount" jdbcType="DECIMAL"/>
    <result column="mqydk_amt" property="mqydkAmt" jdbcType="VARCHAR"/>
    <result column="sjdk_amt" property="sjdkAmt" jdbcType="DECIMAL"/>
    <result column="syqk_amt" property="syqkAmt" jdbcType="DECIMAL"/>
    <result column="to_pick_num" property="toPickNum" jdbcType="VARCHAR"/>
    <result column="is_plan_num" property="isPlanNum" jdbcType="VARCHAR"/>
    <result column="to_plan_num" property="toPlanNum" jdbcType="VARCHAR"/>
    <result column="review_status" property="reviewStatus" jdbcType="VARCHAR"/>
    <result column="o_inuretime" property="oinuretime" jdbcType="VARCHAR"/>
    <result column="ag_doc_district" property="agDocDistrict" jdbcType="VARCHAR"/>
    <result column="ag_doc_pro" property="agDocPro" jdbcType="VARCHAR"/>
    <result column="order_user" property="orderUser" jdbcType="VARCHAR"/>
    <result column="org_name" property="orgName" jdbcType="VARCHAR"/>
    <result column="order_date" property="orderDate" jdbcType="TIMESTAMP"/>
    <result column="remark" property="remark" jdbcType="VARCHAR"/>
    <result column="agent_id" property="agentId" jdbcType="VARCHAR"/>
  </resultMap>

  <!--欠款查询 -->
  <select id="arrearageCount" parameterType="java.util.Map" resultType="java.lang.Long">
     select count(1) from
    (
    select
    to_char(o_payment_detail.plan_pay_time,'yyyy-mm') as tm,businfo.agent_id,businfo.bus_platform,
    sum(case when o_payment_detail.payment_status in(1,3) then o_payment_detail.pay_amount else 0 end)+
    sum(case when o_payment_detail.payment_status =2 then o_payment_detail.pay_amount-o_payment_detail.real_pay_amount else 0 end)
    jjqk,businfo.bus_num
    from o_payment_detail o_payment_detail
    left join o_payment op on o_payment_detail.payment_id=op.id
    left join o_order o on o.id=op.order_id
    left join a_agent_businfo businfo on businfo.id=o.bus_id
    where o_payment_detail.status=1 and o.status=1 and op.status=1   and  o_payment_detail.payment_status in (1,2,3)
    and  businfo.agent_id is not null
    and order_status=2 and review_status=3
    and payment_type = 'ORDER_FKD'
    <include refid="ARREARAGE_WHERE_SQL"/>
    group by to_char(o_payment_detail.plan_pay_time,'yyyy-mm'),businfo.agent_id,businfo.bus_platform ,businfo.bus_num
    )a left join a_platform on a.bus_platform=a_platform.platform_num
    left join a_agent agent on agent.id=a.agent_id where 1=1
    <include refid="BASE_WHERE_SQL"/>
    order by agent.id,  a.tm desc
  </select>

  <select id="arrearageList" parameterType="java.util.Map" resultType="java.util.Map">
    <include refid="PAGING_START" />
    select a.*,a_platform.platform_name,agent.ag_name,agent.AG_UNIQ_NUM,agent.id as agId from
    (
    select
    to_char(o_payment_detail.plan_pay_time,'yyyy-mm') as tm,businfo.agent_id,businfo.bus_platform,
    sum(case when o_payment_detail.payment_status in(1,3) then o_payment_detail.pay_amount else 0 end)+
    sum(case when o_payment_detail.payment_status =2 then o_payment_detail.pay_amount-o_payment_detail.real_pay_amount else 0 end)
    jjqk,
    businfo.bus_num
    from o_payment_detail o_payment_detail
    left join o_payment op on o_payment_detail.payment_id=op.id
    left join o_order o on o.id=op.order_id
    left join a_agent_businfo businfo on businfo.id=o.bus_id
    where 1=1 and o_payment_detail.status=1 and o.status=1 and op.status=1   and  o_payment_detail.payment_status in (1,2,3)
    and  businfo.agent_id is not null and order_status=2 and review_status=3
     and payment_type = 'ORDER_FKD'
    <include refid="ARREARAGE_WHERE_SQL"/>
    group by to_char(o_payment_detail.plan_pay_time,'yyyy-mm'),businfo.agent_id,businfo.bus_platform ,businfo.bus_num
    )a left join a_platform on a.bus_platform=a_platform.platform_num
    left join a_agent agent on agent.id=a.agent_id where 1=1
    <include refid="BASE_WHERE_SQL"/>
    order by agent.id,  a.tm desc
    <include refid="PAGING_END" />
  </select>

  <sql id="BASE_WHERE_SQL">
    <if test="agUniqNum!=null and agUniqNum!=''"> and agent.AG_UNIQ_NUM=#{agUniqNum} </if>
    <if test="agId!=null and agId!=''"> and agent.id=#{agId} </if>
    <if test="agName !=null and agName !='' ">
      and  agent.AG_NAME LIKE CONCAT(CONCAT('%',#{agName}),'%')
    </if>
  </sql>

  <sql id="ARREARAGE_WHERE_SQL">
    <if test="platform!=null and platform!=''"> and businfo.bus_platform=#{platform} </if>
    <if test="busNum !=null and busNum !='' ">
      and  businfo.bus_num LIKE CONCAT(CONCAT('%',#{busNum}),'%')
    </if>
    <if test="month!=null and month!=''"> and to_char(o_payment_detail.plan_pay_time,'yyyy-mm')=#{month} </if>
  </sql>


  <select id="arrearageQuery" parameterType="map" resultType="map">
    select
      a.omonth,a_agent_businfo.agent_id,o_order.id as oid,a_agent_businfo.bus_num,a_agent_businfo.bus_platform,o_payment.pay_amount,o_payment.real_amount,o_payment.outstanding_amount,
      o_payment.down_payment,a.qiankuan,o_payment.pay_method,
      a_platform.platform_name from
      (
        select
        to_char(o_payment_detail.plan_pay_time,'yyyy-mm') as omonth,
        o_payment_detail.order_id as oId,
        sum(case when o_payment_detail.payment_status in(1,3) then o_payment_detail.pay_amount else 0 end)+
        sum(case when o_payment_detail.payment_status =2 then o_payment_detail.pay_amount-o_payment_detail.real_pay_amount else 0 end)
        qiankuan
        from
        o_payment_detail
        where 1=1 and o_payment_detail.status=1
         <if test="time!=null and time!=''"> and to_char(o_payment_detail.plan_pay_time,'yyyy-mm')=#{time} </if>
        and  o_payment_detail.payment_status in (1,2,3)
        group by to_char(o_payment_detail.plan_pay_time,'yyyy-mm'),o_payment_detail.order_id
      ) a
      left join o_order on o_order.id=a.oId
      left join o_payment on o_payment.order_id=a.oId
      left join a_agent_businfo on o_order.bus_id=a_agent_businfo.id
      left join a_platform on a_agent_businfo.bus_platform=a_platform.platform_num
      where a_agent_businfo.status=1 and o_order.status=1 and o_order.order_status=2 and o_order.review_status=3 and o_payment.status=1
      <if test="busPlatform!=null and busPlatform!=''"> and a_agent_businfo.bus_platform=#{busPlatform} </if>
      <if test="agentId !=null and agentId !='' ">
        and  o_order.agent_id =#{agentId}
      </if>
      <if test="busNum !=null and busNum !='' ">
       and  a_agent_businfo.bus_num =#{busNum}
      </if>
     order by o_order.O_INURETIME,order_id
  </select>
  <!--欠款详情-->
  <select id="serchArrearageCount" parameterType="java.util.Map" resultType="java.lang.Long">
    select
    count(1) from
    (
    select
    to_char(o_payment_detail.plan_pay_time,'yyyy-mm') as omonth,
    o_payment_detail.order_id as oId,
    o_payment_detail.payment_status,
    sum(case when o_payment_detail.payment_status in(1,2,3) then o_payment_detail.pay_amount else 0 end)
    qiankuan,
    nvl( sum(case when o_payment_detail.payment_status in(1,2,3) then o_payment_detail.REAL_PAY_AMOUNT else 0 end),0)realPayAmount,
    nvl(sum(case when o_payment_detail.payment_status in(1,2,3) then o_payment_detail.pay_amount else 0 end)
    -sum(o_payment_detail.REAL_PAY_AMOUNT),0)repay
    from
    o_payment_detail
    where 1=1
    <if test="time!=null and time!=''"> and to_char(o_payment_detail.plan_pay_time,'yyyy-mm')=#{time} </if>
    and  o_payment_detail.payment_status in (1,2,3) and o_payment_detail.status=1
    group by to_char(o_payment_detail.plan_pay_time,'yyyy-mm'),o_payment_detail.order_id,o_payment_detail.payment_status
    ) a
    left join o_order on o_order.id=a.oId
    left join o_payment on o_payment.order_id=a.oId
    left join a_agent_businfo on o_order.bus_id=a_agent_businfo.id
    left join a_platform on a_agent_businfo.bus_platform=a_platform.platform_num
    where 1=1  and o_order.status=1 and o_payment.status=1 and o_order.REVIEW_STATUS=3
    <if test="busPlatform!=null and busPlatform!=''"> and a_agent_businfo.bus_platform=#{busPlatform} </if>
    <if test="agentId !=null and agentId !='' ">
      and  a_agent_businfo.agent_id =#{agentId}
    </if>
    <if test="busNum !=null and busNum !='' ">
      and  a_agent_businfo.bus_num =#{busNum}
    </if>
    order by o_order.agent_id,  a.omonth desc
  </select>

  <select id="serchArrearageList" parameterType="map" resultType="map">
    <include refid="PAGING_START" />
    select
    a.omonth,a_agent_businfo.agent_id,o_order.id as oid,a_agent_businfo.bus_num,a_agent_businfo.bus_platform,o_payment.pay_amount,o_payment.real_amount,o_payment.outstanding_amount,
    o_payment.down_payment,a.qiankuan,o_payment.pay_method, o_order.order_status,a.payment_status,a.realPayAmount,a.repay,
    a_platform.platform_name from
    (
    select
    to_char(o_payment_detail.plan_pay_time,'yyyy-mm') as omonth,
    o_payment_detail.order_id as oId,
    o_payment_detail.payment_status,
    sum(case when o_payment_detail.payment_status in(1,2,3) then o_payment_detail.pay_amount else 0 end)
    qiankuan,
    nvl( sum(case when o_payment_detail.payment_status in(1,2,3) then o_payment_detail.REAL_PAY_AMOUNT else 0 end),0)realPayAmount,
    nvl(sum(case when o_payment_detail.payment_status in(1,2,3) then o_payment_detail.pay_amount else 0 end)
    -sum(o_payment_detail.REAL_PAY_AMOUNT),0)repay
    from
    o_payment_detail
    where 1=1
    <if test="time!=null and time!=''"> and to_char(o_payment_detail.plan_pay_time,'yyyy-mm')=#{time} </if>
    and  o_payment_detail.payment_status in (1,2,3) and o_payment_detail.status=1
    group by to_char(o_payment_detail.plan_pay_time,'yyyy-mm'),o_payment_detail.order_id ,o_payment_detail.payment_status
    ) a
    left join o_order on o_order.id=a.oId
    left join o_payment on o_payment.order_id=a.oId
    left join a_agent_businfo on o_order.bus_id=a_agent_businfo.id
    left join a_platform on a_agent_businfo.bus_platform=a_platform.platform_num
    where 1=1 and o_order.status=1 and o_payment.status=1 and o_order.REVIEW_STATUS=3
    <if test="busPlatform!=null and busPlatform!=''"> and a_agent_businfo.bus_platform=#{busPlatform} </if>
    <if test="agentId !=null and agentId !='' ">
      and  a_agent_businfo.agent_id =#{agentId}
    </if>
    <if test="busNum !=null and busNum !='' ">
      and  a_agent_businfo.bus_num =#{busNum}
    </if>
    order by o_order.agent_id,  a.omonth desc
    <include refid="PAGING_END" />
  </select>






  <!--查询是否还有欠款-->
  <select id="isRemoveAccount" parameterType="map" resultType="map">
    select a.* ,a_agent_businfo.id,a_agent_businfo.BUS_PLATFORM,o_payment.outstanding_amount from
    (select * from o_Payment_detail  where 1=1 and o_payment_detail.PAYMENT_STATUS=1
    <if test="time!=null and time!=''"> and to_char(o_payment_detail.plan_pay_time,'yyyy-mm')=#{time} </if>
    )a
    left join o_order on o_order.id=a.order_id
    left join o_payment on o_payment.order_id=a.order_id
    left join a_agent_businfo on o_order.bus_id=a_agent_businfo.id
    where 1=1
    <if test="busPlatform!=null and busPlatform!=''"> and a_agent_businfo.bus_platform=#{busPlatform} </if>
    <if test="agentId !=null and agentId !='' "> and  a_agent_businfo.agent_id =#{agentId} </if>
    order by a.agent_id,  to_char(a.plan_pay_time,'yyyy-mm') desc
  </select>

  <!--批量销账导入文件查询机具欠款-->
  <select id="queryJjqk" parameterType="java.util.Map" resultType="java.util.Map">
    select a.*,a_platform.platform_name,agent.ag_name,agent.AG_UNIQ_NUM from
    (
    select
    businfo.agent_id,businfo.bus_platform,sum(o_payment_detail.pay_amount) as jjqk
    ,businfo.bus_num
    from o_payment_detail o_payment_detail
    left join o_payment op on o_payment_detail.payment_id=op.id and  o_payment_detail.payment_status in (1,3)
    left join o_order o on o.id=op.order_id
    left join a_agent_businfo businfo on businfo.id=o.bus_id where 1=1
    <if test="platform!=null and platform!=''"> and businfo.bus_platform=#{platform} </if>
    <if test="busNum !=null and busNum !='' ">
      and  businfo.bus_num =#{busNum}
    </if>
    group by businfo.agent_id,businfo.bus_platform ,businfo.bus_num
    )a left join a_platform on a.bus_platform=a_platform.platform_num
    left join a_agent agent on agent.id=a.agent_id where 1=1
    <if test="agId!=null and agId!=''"> and agent.ID=#{agId} </if>
    order by agent.id
  </select>
</mapper>