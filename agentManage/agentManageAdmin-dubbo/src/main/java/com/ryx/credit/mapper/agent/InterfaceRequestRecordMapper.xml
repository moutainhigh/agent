<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.dao.agent.InterfaceRequestRecordMapper" >
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecord" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="URL" property="url" jdbcType="VARCHAR" />
    <result column="C_TIME" property="cTime" jdbcType="TIMESTAMP" />
    <result column="C_USER" property="cUser" jdbcType="VARCHAR" />
    <result column="REP_STATUS" property="repStatus" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordWithBLOBs" extends="BaseResultMap" >
    <result column="REQ_JSON" property="reqJson" jdbcType="CLOB" />
    <result column="REP_JSON" property="repJson" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, TYPE, URL, C_TIME, C_USER, REP_STATUS, STATUS
  </sql>
  <sql id="Blob_Column_List" >
    REQ_JSON, REP_JSON
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from D_INTERFACEREQUEST_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from D_INTERFACEREQUEST_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from D_INTERFACEREQUEST_RECORD
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordExample" >
    delete from D_INTERFACEREQUEST_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordWithBLOBs" >
    insert into D_INTERFACEREQUEST_RECORD (ID, TYPE, URL, 
      C_TIME, C_USER, REP_STATUS, 
      STATUS, REQ_JSON, REP_JSON)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{cTime,jdbcType=TIMESTAMP}, #{cUser,jdbcType=VARCHAR}, #{repStatus,jdbcType=DECIMAL}, 
      #{status,jdbcType=DECIMAL}, #{reqJson,jdbcType=CLOB}, #{repJson,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordWithBLOBs" >
    insert into D_INTERFACEREQUEST_RECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="url != null" >
        URL,
      </if>
      <if test="cTime != null" >
        C_TIME,
      </if>
      <if test="cUser != null" >
        C_USER,
      </if>
      <if test="repStatus != null" >
        REP_STATUS,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="reqJson != null" >
        REQ_JSON,
      </if>
      <if test="repJson != null" >
        REP_JSON,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null" >
        #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="repStatus != null" >
        #{repStatus,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="reqJson != null" >
        #{reqJson,jdbcType=CLOB},
      </if>
      <if test="repJson != null" >
        #{repJson,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordExample" resultType="java.lang.Integer" >
    select count(*) from D_INTERFACEREQUEST_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordWithBLOBs" >
    update D_INTERFACEREQUEST_RECORD
    <set >
      <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        URL = #{url,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null" >
        C_USER = #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="repStatus != null" >
        REP_STATUS = #{repStatus,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="reqJson != null" >
        REQ_JSON = #{reqJson,jdbcType=CLOB},
      </if>
      <if test="repJson != null" >
        REP_JSON = #{repJson,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecordWithBLOBs" >
    update D_INTERFACEREQUEST_RECORD
    set TYPE = #{type,jdbcType=VARCHAR},
      URL = #{url,jdbcType=VARCHAR},
      C_TIME = #{cTime,jdbcType=TIMESTAMP},
      C_USER = #{cUser,jdbcType=VARCHAR},
      REP_STATUS = #{repStatus,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=DECIMAL},
      REQ_JSON = #{reqJson,jdbcType=CLOB},
      REP_JSON = #{repJson,jdbcType=CLOB}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.agent.InterfaceRequestRecord" >
    update D_INTERFACEREQUEST_RECORD
    set TYPE = #{type,jdbcType=VARCHAR},
      URL = #{url,jdbcType=VARCHAR},
      C_TIME = #{cTime,jdbcType=TIMESTAMP},
      C_USER = #{cUser,jdbcType=VARCHAR},
      REP_STATUS = #{repStatus,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>