<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.dao.order.OProductMapper" >
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.order.OProduct" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PRO_CODE" property="proCode" jdbcType="VARCHAR" />
    <result column="PRO_NAME" property="proName" jdbcType="VARCHAR" />
    <result column="PRO_COM" property="proCom" jdbcType="VARCHAR" />
    <result column="PRO_TYPE" property="proType" jdbcType="VARCHAR" />
    <result column="PRO_MODEL" property="proModel" jdbcType="VARCHAR" />
    <result column="PRO_PRICE" property="proPrice" jdbcType="DECIMAL" />
    <result column="IS_DEPOSIT" property="isDeposit" jdbcType="DECIMAL" />
    <result column="DEPOSIT" property="deposit" jdbcType="DECIMAL" />
    <result column="PRO_STATUS" property="proStatus" jdbcType="DECIMAL" />
    <result column="C_USER" property="cUser" jdbcType="VARCHAR" />
    <result column="C_TIME" property="cTime" jdbcType="TIMESTAMP" />
    <result column="U_TIME" property="uTime" jdbcType="TIMESTAMP" />
    <result column="U_USER" property="uUser" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="VERSION" property="version" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PRO_CODE, PRO_NAME, PRO_COM, PRO_TYPE, PRO_MODEL, PRO_PRICE, IS_DEPOSIT, DEPOSIT, 
    PRO_STATUS, C_USER, C_TIME, U_TIME, U_USER, STATUS, VERSION
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ryx.credit.pojo.admin.order.OProductExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from O_PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from O_PRODUCT
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.order.OProductExample" >
    delete from O_PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.order.OProduct" >
    insert into O_PRODUCT (ID, PRO_CODE, PRO_NAME, 
      PRO_COM, PRO_TYPE, PRO_MODEL, 
      PRO_PRICE, IS_DEPOSIT, DEPOSIT, 
      PRO_STATUS, C_USER, C_TIME, 
      U_TIME, U_USER, STATUS, 
      VERSION)
    values (#{id,jdbcType=VARCHAR}, #{proCode,jdbcType=VARCHAR}, #{proName,jdbcType=VARCHAR}, 
      #{proCom,jdbcType=VARCHAR}, #{proType,jdbcType=VARCHAR}, #{proModel,jdbcType=VARCHAR}, 
      #{proPrice,jdbcType=DECIMAL}, #{isDeposit,jdbcType=DECIMAL}, #{deposit,jdbcType=DECIMAL}, 
      #{proStatus,jdbcType=DECIMAL}, #{cUser,jdbcType=VARCHAR}, #{cTime,jdbcType=TIMESTAMP}, 
      #{uTime,jdbcType=TIMESTAMP}, #{uUser,jdbcType=VARCHAR}, #{status,jdbcType=DECIMAL}, 
      #{version,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.order.OProduct" >
    insert into O_PRODUCT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="proCode != null" >
        PRO_CODE,
      </if>
      <if test="proName != null" >
        PRO_NAME,
      </if>
      <if test="proCom != null" >
        PRO_COM,
      </if>
      <if test="proType != null" >
        PRO_TYPE,
      </if>
      <if test="proModel != null" >
        PRO_MODEL,
      </if>
      <if test="proPrice != null" >
        PRO_PRICE,
      </if>
      <if test="isDeposit != null" >
        IS_DEPOSIT,
      </if>
      <if test="deposit != null" >
        DEPOSIT,
      </if>
      <if test="proStatus != null" >
        PRO_STATUS,
      </if>
      <if test="cUser != null" >
        C_USER,
      </if>
      <if test="cTime != null" >
        C_TIME,
      </if>
      <if test="uTime != null" >
        U_TIME,
      </if>
      <if test="uUser != null" >
        U_USER,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="version != null" >
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="proCode != null" >
        #{proCode,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proCom != null" >
        #{proCom,jdbcType=VARCHAR},
      </if>
      <if test="proType != null" >
        #{proType,jdbcType=VARCHAR},
      </if>
      <if test="proModel != null" >
        #{proModel,jdbcType=VARCHAR},
      </if>
      <if test="proPrice != null" >
        #{proPrice,jdbcType=DECIMAL},
      </if>
      <if test="isDeposit != null" >
        #{isDeposit,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="proStatus != null" >
        #{proStatus,jdbcType=DECIMAL},
      </if>
      <if test="cUser != null" >
        #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uTime != null" >
        #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uUser != null" >
        #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        #{version,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.order.OProductExample" resultType="java.lang.Integer" >
    select count(*) from O_PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.order.OProduct" >
    update O_PRODUCT
    <set >
      <if test="proCode != null" >
        PRO_CODE = #{proCode,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        PRO_NAME = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proCom != null" >
        PRO_COM = #{proCom,jdbcType=VARCHAR},
      </if>
      <if test="proType != null" >
        PRO_TYPE = #{proType,jdbcType=VARCHAR},
      </if>
      <if test="proModel != null" >
        PRO_MODEL = #{proModel,jdbcType=VARCHAR},
      </if>
      <if test="proPrice != null" >
        PRO_PRICE = #{proPrice,jdbcType=DECIMAL},
      </if>
      <if test="isDeposit != null" >
        IS_DEPOSIT = #{isDeposit,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null" >
        DEPOSIT = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="proStatus != null" >
        PRO_STATUS = #{proStatus,jdbcType=DECIMAL},
      </if>
      <if test="cUser != null" >
        C_USER = #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uTime != null" >
        U_TIME = #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uUser != null" >
        U_USER = #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.order.OProduct" >
    update O_PRODUCT
    set PRO_CODE = #{proCode,jdbcType=VARCHAR},
      PRO_NAME = #{proName,jdbcType=VARCHAR},
      PRO_COM = #{proCom,jdbcType=VARCHAR},
      PRO_TYPE = #{proType,jdbcType=VARCHAR},
      PRO_MODEL = #{proModel,jdbcType=VARCHAR},
      PRO_PRICE = #{proPrice,jdbcType=DECIMAL},
      IS_DEPOSIT = #{isDeposit,jdbcType=DECIMAL},
      DEPOSIT = #{deposit,jdbcType=DECIMAL},
      PRO_STATUS = #{proStatus,jdbcType=DECIMAL},
      C_USER = #{cUser,jdbcType=VARCHAR},
      C_TIME = #{cTime,jdbcType=TIMESTAMP},
      U_TIME = #{uTime,jdbcType=TIMESTAMP},
      U_USER = #{uUser,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      VERSION = #{version,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>


  <!--分组查询-->
  <select id="queryGroupByProCodeList" parameterType="map" resultType="map">
      <include refid="OracleDialectPrefix" />
        select max(O_product.Id) as "id" ,
        Pro_Code as "proCode",Pro_Name  as "proName",Pro_Type  as "proType",Pro_Price  as "proPrice"
        from O_product
        <where>
          O_product.Pro_Status=1 and status = 1
         <if test="proType!=null and proType!=''"> and O_product.Pro_Type=#{proType}</if>
         <if test="proCode!=null and proCode!=''"> and O_product.Pro_Code=#{proCode}</if>
         <if test="proName!=null and proName!=''"> and O_product.Pro_Name like '${proName}'</if>
          <if test="proTypes!=null"> and O_product.Pro_Type IN
            <foreach collection="proTypes" item="proTypeitem" open="(" separator="," close=")">
                '${proTypeitem}'
            </foreach>
          </if>
        </where>
        group by Pro_Code,Pro_Name,Pro_Type,Pro_Price
      <include refid="OracleDialectSuffix" />
  </select>

  <!--分组查询数量统计-->
  <select id="queryGroupByProCodeListCount" parameterType="map" resultType="int">
      select count(a.id) from (
        select max(O_product.Id) as id, Pro_Code,Pro_Name,Pro_Type,Pro_Price  from O_product
        <where>
          O_product.Pro_Status=1 and O_product.Status=1
          <if test="proType!=null and proType!=''"> and O_product.Pro_Type=#{proType}</if>
          <if test="proCode!=null and proCode!=''"> and O_product.Pro_Code=#{proCode}</if>
          <if test="proName!=null and proName!=''"> and O_product.Pro_Name like '${proName}'</if>
        </where>
        group by Pro_Code,Pro_Name,Pro_Type,Pro_Price
      ) a
  </select>


</mapper>