<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.ryx.credit.dao.agent.AgentDebitCardMapper">    <select id="countQuery" resultType="java.lang.Integer">        select count(1) from (          <include refid="queryForList_Detail"/>        ) aaa    </select>    <select id="queryForList" resultType="java.util.Map">        <include refid="OracleDialectPrefix"/>        <include refid="queryForList_Detail"/>        <include refid="OracleDialectSuffix"/>    </select>    <sql id="queryForList_Detail">        select            a.ID,            a.AG_NAME,            a.AG_STATUS,            ac.CLO_REVIEW_STATUS,            ac.CLO_TYPE,            ac.CLO_REALNAME,            ac.CLO_BANK_ACCOUNT,            ac.CLO_BANK,            ac.CLO_BANK_BRANCH,            ac.ALL_LINE_NUM,            ac.BRANCH_LINE_NUM,            ap.FLAG,            ac.SUGGEST_STATUS,            ap.ID as PAY_ID,            ac.ID as AC_ID        from A_AGENT a        inner join (            select distinct aa.ID from A_AGENT aa            left join A_AGENT_BUSINFO b on aa.ID = b.AGENT_ID            where  aa.AG_STATUS = 'Approved' and aa.STATUS = 1            and b.CLO_REVIEW_STATUS = '3' and b.STATUS = 1            <if test="map.docPro != null and map.docPro != '' ">                and b.AG_DOC_PRO = #{map.docPro}            </if>            <if test="map.docDis != null and map.docDis != '' ">                and b.AG_DOC_DISTRICT = #{map.docDis}            </if>        ) bb on a.ID = bb.ID        left join (SELECT * FROM(                SELECT z.ID , z.MERCH_ID ,ROW_NUMBER()                OVER(PARTITION BY z.MERCH_ID ORDER BY z.ID desc ) AS code_id                FROM A_COLINFO_PAYMENT z                )                WHERE code_id = 1          ) ddd on a.ID = ddd.MERCH_ID        left join A_AGENT_COLINFO ac on a.ID = ac.AGENT_ID        left join A_COLINFO_PAYMENT ap ON ap.colinfo_id = ac.id        where  ac.status = 1 and a.status=1        <if test="map.agStatus != null and map.agStatus != '' ">            and  a.AG_STATUS = #{map.agStatus}        </if>        <if test="map.cloType != null and map.cloType != '' ">            and ac.CLO_TYPE = #{map.cloType}        </if>        <if test="map.agentName != null and map.agentName != '' ">            and a.AG_NAME like CONCAT(CONCAT('%',#{map.agentName}),'%')        </if>        <if test="map.agentId != null and map.agentId != '' ">            and a.ID = #{map.agentId}        </if>        <if test="map.cloRealname != null and map.cloRealname != '' ">            and ac.CLO_REALNAME = #{map.cloRealname}        </if>        <if test="map.flag != null and map.flag != '' ">            and ap.FLAG = #{map.flag}        </if>        <if test="map.sugStatus != null and map.sugStatus != '' ">            and ac.SUGGEST_STATUS = #{map.sugStatus}        </if>    </sql>    <select id="getNoticeList" resultType="java.util.Map">        <include refid="OracleDialectPrefix"/>        select a.ID,a.AG_NAME,a.AG_STATUS,ac.CLO_TYPE,ac.CLO_REALNAME,ac.CLO_BANK_ACCOUNT,        ac.CLO_BANK,ac.CLO_BANK_BRANCH,ac.ALL_LINE_NUM,ac.BRANCH_LINE_NUM,ap.FLAG,ac.SUGGEST_STATUS,ap.ID as PAY_ID,        ac.ID as AC_ID        from A_AGENT a        inner join (select distinct AGENT_ID from A_AGENT_BUSINFO where STATUS = 1 and AG_DOC_PRO = #{orgId}) ab on a.ID = ab.AGENT_ID        left join A_AGENT_COLINFO ac on a.ID = ac.AGENT_ID        left join (SELECT * FROM(              SELECT z.FLAG,z.ID,z.MERCH_ID,z.COLINFO_ID,ROW_NUMBER()              OVER(PARTITION BY z.MERCH_ID ORDER BY z.ID desc ) AS code_id                FROM A_COLINFO_PAYMENT z            )WHERE code_id = 1) ap on ac.ID = ap.COLINFO_ID        where  ac.SUGGEST_STATUS = '1'        <include refid="OracleDialectSuffix"/>    </select>    <select id="getNoticeCount" resultType="java.lang.Integer" parameterType="java.lang.String">        select count(1) from (           select a.ID,a.AG_NAME,a.AG_STATUS,ac.CLO_TYPE,ac.CLO_REALNAME,ac.CLO_BANK_ACCOUNT,            ac.CLO_BANK,ac.CLO_BANK_BRANCH,ac.ALL_LINE_NUM,ac.BRANCH_LINE_NUM,ap.FLAG,ac.SUGGEST_STATUS,ap.ID as PAY_ID,            ac.ID as AC_ID            from A_AGENT a            inner join (select distinct AGENT_ID from A_AGENT_BUSINFO where STATUS = 1 and AG_DOC_PRO = #{orgId}) ab on a.ID = ab.AGENT_ID            left join A_AGENT_COLINFO ac on a.ID = ac.AGENT_ID            left join (SELECT * FROM(                SELECT z.FLAG,z.ID,z.MERCH_ID,z.COLINFO_ID,ROW_NUMBER()                OVER(PARTITION BY z.MERCH_ID ORDER BY z.ID desc ) AS code_id                FROM A_COLINFO_PAYMENT z                )                WHERE code_id = 1) ap on ac.ID = ap.COLINFO_ID            where  ac.SUGGEST_STATUS = '1'        ) aaa    </select>    <select id="exports" resultType="java.util.Map">        select a.ID agentId ,a.AG_NAME agentName,ac.CLO_REALNAME cloRealName,ac.CLO_BANK_ACCOUNT cloBankAccount,        ac.CLO_BANK cloBank,ac.CLO_BANK_BRANCH cloBankBranch,ac.ALL_LINE_NUM allLineNum,ac.BRANCH_LINE_NUM branchLineNum,        '审批通过' as agStatus,ac.AG_LEGAL_CERNUM agLegalCernum,ac.CLO_TAX_POINT cloTaxPoint,ac.CLO_INVOICE cloInvoice,        case when ap.FLAG = '1' then '已生批'        when ap.FLAG = '0' then '未处理'        when ap.FLAG = '2' then '打款失败-已重试'        when ap.FLAG = '3' then '复合通过'        when ap.FLAG = '4' then '风险拦截'        when ap.FLAG = '5' then '已撤销'        when ap.FLAG = '7' then '复合中'        when ap.FLAG = '8' then '复合不通过'        when ap.FLAG = '9' then '银行处理成功'        when ap.FLAG = '11' then '打款成功'        when ap.FLAG = '12' then '打款失败'        when ap.FLAG = '20' then '银行处理失败'        else '' end as flag ,        case when ac.CLO_TYPE = 2 then '对私' when ac.CLO_TYPE = 1 then '对公' end as cloType        from A_AGENT a        inner join (        select distinct aa.ID from A_AGENT aa        left join A_AGENT_BUSINFO b on aa.ID = b.AGENT_ID        where  aa.AG_STATUS = 'Approved' and aa.STATUS = 1        and b.CLO_REVIEW_STATUS = '3' and b.STATUS = 1        <if test="map.docPro != null and map.docPro != '' ">            and b.AG_DOC_PRO = #{map.docPro}        </if>        <if test="map.docDis != null and map.docDis != '' ">            and b.AG_DOC_DISTRICT = #{map.docDis}        </if>        ) bb on a.ID = bb.ID        left join (SELECT * FROM(        SELECT z.ID , z.MERCH_ID ,ROW_NUMBER()        OVER(PARTITION BY z.MERCH_ID ORDER BY z.ID desc ) AS code_id        FROM A_COLINFO_PAYMENT z        )        WHERE code_id = 1        ) ddd on a.ID = ddd.MERCH_ID        left join A_AGENT_COLINFO ac on a.ID = ac.AGENT_ID        left join  A_COLINFO_PAYMENT ap on ddd.ID = ap.ID        where  ac.status = 1 and a.status=1        <if test="map.agStatus != null and map.agStatus != '' ">            and  a.AG_STATUS = #{map.agStatus}        </if>        <if test="map.cloType != null and map.cloType != '' ">            and ac.CLO_TYPE = #{map.cloType}        </if>        <if test="map.agentName != null and map.agentName != '' ">            and a.AG_NAME like CONCAT(CONCAT('%',#{map.agentName}),'%')        </if>        <if test="map.agentId != null and map.agentId != '' ">            and a.ID = #{map.agentId}        </if>        <if test="map.cloRealname != null and map.cloRealname != '' ">            and ac.CLO_REALNAME = #{map.cloRealname}        </if>        <if test="map.flag != null and map.flag != '' ">            and ap.FLAG = #{map.flag}        </if>        <if test="map.sugStatus != null and map.sugStatus != '' ">            and ac.SUGGEST_STATUS = #{map.sugStatus}        </if>    </select>    <select id="getBusInfoById" parameterType="java.lang.String" resultType="java.util.Map">      select  oor.ORG_NAME as ORGAN_NUM,oo.ORG_NAME as FINACE_REMIT_ORGAN      from A_AGENT_BUSINFO ab      left join o_organization oor on ab.ORGAN_NUM = oor.ORG_ID      left join o_organization oo on ab.FINACE_REMIT_ORGAN = oo.ORG_ID      where ab.AGENT_ID = #{id}    </select>    <update id="updateSuggestStatusById">        update A_AGENT_COLINFO set SUGGEST_STATUS = '${statu}' where ID = '${id}'    </update>    <sql id="OracleDialectPrefix">        <if test="page != null">            select * from ( select row_.*, rownum rownum_ from (        </if>    </sql>    <sql id="OracleDialectSuffix">        <if test="page != null">            <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>        </if>    </sql>    <select id="exportsForZHposOrPlus" resultType="java.util.Map">        select p.platform_name as "品牌名",        to_char(b.approve_time,'yyyyMMdd') as "入网日期",        b.agent_id as "AG编码",        b.bus_num as "业务编号(O码)",        a.ag_name as "代理商名称",        b.pos_plat_code as "SP码",        d.d_itemname as "级别",        o.name as "归属省区",        (select LISTAGG(c_user.name, ',') within group(order by c_user.id) from c_user where c_user.organization_id = b.ag_doc_pro and c_user.name not like '%north%' and c_user.name not like '%测试%') as "负责人",        case c.clo_type when 1 then '对公' when 2 then '对私' end as "结算账户性质",        c.clo_tax_point as "结算税点",        c.clo_realname as "结算户名",        '结算卡'||c.clo_bank_account as "结算账号",        c.clo_bank_branch as "结算支行名",        '支行联行号'||c.branch_line_num as "结算卡联行号",        '身份证'||c.ag_legal_cernum as "结算人身份证号",        to_char(b.c_time,'yyyyMMdd') as "日期"         from a_agent_businfo b        left join a_agent a on a.id=b.agent_id        left join (select * from a_agent_colinfo c where c.status=1 and c.clo_review_status=3) c on c.agent_id=a.id        left join a_platform p on p.platform_num=b.bus_platform        left join d_Dict d on d.d_group='AGENT' and d.d_artifact='BUS_TYPE' and d.d_itemvalue=b.bus_type        left join c_organization o on o.id=b.ag_doc_pro        where a.status=1 and b.status=1        and b.clo_review_status=3 and a.ag_status='Approved'  and b.status in (0,1,2,3)        and p.platform_type='ZHPOS'        order by b.c_time desc    </select>    <select id="queryAgentColinfoList" resultType="java.util.Map">        <include refid="OracleDialectPrefix"/>        <include refid="queryAgentColinfo_Detail"/>        <include refid="OracleDialectSuffix"/>    </select>    <select id="queryAgentColinfoCount" resultType="java.lang.Integer">        select count(1) from (        <include refid="queryAgentColinfo_Detail"/>        ) aaa    </select>    <sql id="queryAgentColinfo_Detail">        select a.*,b.ag_name from A_agent_colinfo a left join a_agent b on a.agent_id=b.id        where a.status=1 and a.CLO_REVIEW_STATUS=3 and b.status=1 and b.ag_status='Approved'        <if test="map.agentName != null and map.agentName != '' ">            and b.AG_NAME like CONCAT(CONCAT('%',#{map.agentName}),'%')        </if>        <if test="map.agentId != null and map.agentId != '' ">            and b.ID = #{map.agentId}        </if>        <if test="map.cloType != null and map.cloType != '' ">            and a.CLO_TYPE = #{map.cloType}        </if>        <if test="map.payStatus != null and map.payStatus != '' ">            and a.PAY_STATUS = #{map.payStatus}        </if>        <if test="map.amendStatus != null and map.amendStatus != '' ">            and a.AMEND_STATUS = #{map.amendStatus}        </if>        and EXISTS(        select A_AGENT_BUSINFO.ID from A_AGENT_BUSINFO        left join C_ORGANIZATION oa on oa.id=A_AGENT_BUSINFO.ag_doc_pro        left join C_ORGANIZATION ob on ob.id=A_AGENT_BUSINFO.AG_DOC_DISTRICT        where b.id=A_AGENT_BUSINFO.AGENT_ID        <if test="map.agDocPro!=null and map.agDocPro!=''">and (A_AGENT_BUSINFO.AG_DOC_PRO = #{map.agDocPro})</if>        )        order by a.clo_type    </sql></mapper>