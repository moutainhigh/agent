<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.dao.agent.DataHistoryMapper">
    <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.agent.DataHistory">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="DATA_ID" property="dataId" jdbcType="VARCHAR"/>
        <result column="DATA_TYPE" property="dataType" jdbcType="VARCHAR"/>
        <result column="DATA_VERSION" property="dataVersion" jdbcType="DECIMAL"/>
        <result column="C_TIME" property="cTime" jdbcType="TIMESTAMP"/>
        <result column="C_USER" property="cUser" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="DECIMAL"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.ryx.credit.pojo.admin.agent.DataHistory" extends="BaseResultMap">
        <result column="DATA_COTENT" property="dataCotent" jdbcType="CLOB" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, DATA_ID, DATA_TYPE, DATA_VERSION, C_TIME, C_USER, STATUS
  </sql>
    <sql id="Blob_Column_List">
    DATA_COTENT
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from DATA_HISTORY
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryExample">
        <include refid="OracleDialectPrefix"/>
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from DATA_HISTORY
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="OracleDialectSuffix"/>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from DATA_HISTORY
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryExample">
        delete from DATA_HISTORY
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ryx.credit.pojo.admin.agent.DataHistory">
    insert into DATA_HISTORY (ID, DATA_ID, DATA_TYPE, 
      DATA_VERSION, C_TIME, C_USER, 
      STATUS, DATA_COTENT)
    values (#{id,jdbcType=VARCHAR}, #{dataId,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, 
      #{dataVersion,jdbcType=DECIMAL}, #{cTime,jdbcType=TIMESTAMP}, #{cUser,jdbcType=VARCHAR}, 
      #{status,jdbcType=DECIMAL}, #{dataCotent,jdbcType=CLOB})
  </insert>
    <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.agent.DataHistory">
        insert into DATA_HISTORY
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="dataId != null">
                DATA_ID,
            </if>
            <if test="dataType != null">
                DATA_TYPE,
            </if>
            <if test="dataVersion != null">
                DATA_VERSION,
            </if>
            <if test="cTime != null">
                C_TIME,
            </if>
            <if test="cUser != null">
                C_USER,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="dataCotent != null">
                DATA_COTENT,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="dataId != null">
                #{dataId,jdbcType=VARCHAR},
            </if>
            <if test="dataType != null">
                #{dataType,jdbcType=VARCHAR},
            </if>
            <if test="dataVersion != null">
                #{dataVersion,jdbcType=DECIMAL},
            </if>
            <if test="cTime != null">
                #{cTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cUser != null">
                #{cUser,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=DECIMAL},
            </if>
            <if test="dataCotent != null">
                #{dataCotent,jdbcType=CLOB},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.agent.DataHistoryExample"
            resultType="java.lang.Integer">
        select count(*) from DATA_HISTORY
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.agent.DataHistory">
        update DATA_HISTORY
        <set>
            <if test="dataId != null">
                DATA_ID = #{dataId,jdbcType=VARCHAR},
            </if>
            <if test="dataType != null">
                DATA_TYPE = #{dataType,jdbcType=VARCHAR},
            </if>
            <if test="dataVersion != null">
                DATA_VERSION = #{dataVersion,jdbcType=DECIMAL},
            </if>
            <if test="cTime != null">
                C_TIME = #{cTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cUser != null">
                C_USER = #{cUser,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=DECIMAL},
            </if>
            <if test="dataCotent != null">
                DATA_COTENT = #{dataCotent,jdbcType=CLOB},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ryx.credit.pojo.admin.agent.DataHistory">
    update DATA_HISTORY
    set DATA_ID = #{dataId,jdbcType=VARCHAR},
      DATA_TYPE = #{dataType,jdbcType=VARCHAR},
      DATA_VERSION = #{dataVersion,jdbcType=DECIMAL},
      C_TIME = #{cTime,jdbcType=TIMESTAMP},
      C_USER = #{cUser,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      DATA_COTENT = #{dataCotent,jdbcType=CLOB}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.agent.DataHistory">
    update DATA_HISTORY
    set DATA_ID = #{dataId,jdbcType=VARCHAR},
      DATA_TYPE = #{dataType,jdbcType=VARCHAR},
      DATA_VERSION = #{dataVersion,jdbcType=DECIMAL},
      C_TIME = #{cTime,jdbcType=TIMESTAMP},
      C_USER = #{cUser,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
    <sql id="OracleDialectPrefix">
        <if test="page != null">
            select * from ( select row_.*, rownum rownum_ from (
        </if>
    </sql>
    <sql id="OracleDialectSuffix">
        <if test="page != null">
            <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
        </if>
    </sql>

    <select id="selectAll" parameterType="map" resultType="map">
        <include refid="OracleDialectPrefix"/>
        select
        ID,DATA_ID,DATA_TYPE,C_TIME,dbms_lob.substr(DATA_COTENT)as DATA_COTENT,C_USER
        from DATA_HISTORY where STATUS=1
        <if test="map.dataType != null and map.dataType != '' " >
            and DATA_TYPE = #{map.dataType}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(C_TIME,'YYYY-MM-dd')=#{map.time}
        </if>
        <if test="map.dataId != null and map.dataId != '' ">
            and DATA_ID = #{map.dataId}
        </if>
        order by C_TIME desc
        <include refid="OracleDialectSuffix"/>
    </select>

    <select id="getCount" parameterType="map" resultType="int">
        select
        count(*)
        from DATA_HISTORY where STATUS=1
        <if test="map.dataType != null and map.dataType != '' " >
            and DATA_TYPE = #{map.dataType}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(C_TIME,'YYYY-MM-dd')=#{map.time}
        </if>
    </select>
</mapper>