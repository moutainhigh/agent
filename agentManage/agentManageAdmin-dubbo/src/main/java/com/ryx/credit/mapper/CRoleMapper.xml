<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.dao.CRoleMapper">

    <!-- 通用查询结果列-->
    <sql id="Base_Column_List">
        id, name, seq, description, status
    </sql>

    <select id="selectResourceIdListByRoleId" resultType="java.lang.Long" parameterType="java.lang.Long">
        SELECT
            e.resource_id AS id
        FROM
            c_role r
        LEFT JOIN c_role_resource e ON r.id = e.role_id
        WHERE
            r.id = #{id}
    </select>

    <select id="selectResourceListByRoleIdList" resultType="com.ryx.credit.pojo.admin.CResource"
            parameterType="java.lang.Long">
        SELECT
            DISTINCT s.id AS id,
            s.NAME as name,
            s.url AS url,
            s.description AS description,
            s.icon AS icon,
            s.pid AS pid,
            s.seq AS seq,
            s.STATUS AS status,
            s.open_mode AS openMode,
            s.opened as opened,
            s.resource_type AS resourceType,
            s.create_time AS createTime
        FROM
            c_role r
        LEFT JOIN c_role_resource e ON r.id = e.role_id
        LEFT JOIN c_resource s ON e.resource_id = s.id
        WHERE
            r.id in  
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                #{item}
            </foreach>
        AND s.resource_type = 0
        ORDER BY seq
    </select>

    <select id="selectResourceListByRoleId" resultType="java.util.HashMap" parameterType="java.lang.Long">
        SELECT
            e.id AS id,
            s.url AS url
        FROM
            c_role r
        LEFT JOIN c_role_resource e ON r.id = e.role_id
        LEFT JOIN c_resource s ON e.resource_id = s.id
        WHERE
            r.id = #{id}
    </select>

	<select id="selectByName" resultType="com.ryx.credit.pojo.admin.CRole"
            parameterType="java.lang.String">
		select * from c_role where name = #{name}
	</select>

    <select id="selectShiroUrl" resultType="java.lang.String">
        select re.url from c_user u,c_user_role ur,c_role r ,c_role_resource rr,c_resource re
        where u.id = ur.user_id
        and ur.role_id = r.id
        and r.id = rr.role_id
        and rr.resource_id = re.id
        and url is not null
        and pid= #{pid}
        <if test="url != null" >
            and url like CONCAT(CONCAT('',#{url}),'%')
        </if>
        and u.id = #{userId}
    </select>

    <select id="findFinanceRole" resultType="java.lang.String">
        select r.name from c_user u,c_role r,c_user_role ur
        where u.id = ur.user_id and r.id = ur.role_id
        and u.id = #{userId}
    </select>

    <select id="findFinanceRoleId" resultType="java.lang.String">
        select to_char(r.id) from c_user u,c_role r,c_user_role ur
        where u.id = ur.user_id and r.id = ur.role_id
          and u.id = #{userId}
    </select>


    <insert id="insertRole" parameterType="com.ryx.credit.pojo.admin.CRole" >
        insert into
        c_role(id,name,seq,description,status)
        values
        (
            #{id,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR},
            #{seq,jdbcType=DECIMAL},
            #{description,jdbcType=VARCHAR},
            #{status,jdbcType=DECIMAL}
        )
    </insert>

    <select id="findId" resultType="java.lang.Long">
        SELECT s_role.NEXTVAL FROM DUAL
    </select>


    <select id="selectResourcByRoleId" resultType="com.ryx.credit.pojo.admin.CResource" parameterType="java.lang.Long">
        SELECT
        DISTINCT s.id AS id,
        s.NAME as name,
        s.url AS url,
        s.description AS description,
        s.icon AS icon,
        s.pid AS pid,
        s.seq AS seq,
        s.STATUS AS status,
        s.open_mode AS openMode,
        s.opened as opened,
        s.resource_type AS resourceType,
        s.create_time AS createTime
        FROM
        c_role r
        LEFT JOIN c_role_resource e ON r.id = e.role_id
        LEFT JOIN c_resource s ON e.resource_id = s.id
        WHERE
        r.id = #{id}
        ORDER BY seq
    </select>


</mapper>