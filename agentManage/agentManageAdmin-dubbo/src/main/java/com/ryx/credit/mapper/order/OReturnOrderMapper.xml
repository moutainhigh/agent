<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.dao.order.OReturnOrderMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.order.OReturnOrder">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="APPLY_REMARK" jdbcType="VARCHAR" property="applyRemark" />
    <result column="RET_INVOICE" jdbcType="DECIMAL" property="retInvoice" />
    <result column="RET_RECEIPT" jdbcType="DECIMAL" property="retReceipt" />
    <result column="RET_SCHEDULE" jdbcType="DECIMAL" property="retSchedule" />
    <result column="RETURN_AMO" jdbcType="DECIMAL" property="returnAmo" />
    <result column="GOODS_RETURN_AMO" jdbcType="DECIMAL" property="goodsReturnAmo" />
    <result column="CUT_AMO" jdbcType="DECIMAL" property="cutAmo" />
    <result column="REL_RETURN_AMO" jdbcType="DECIMAL" property="relReturnAmo" />
    <result column="TAKE_OUT_AMO" jdbcType="DECIMAL" property="takeOutAmo" />
    <result column="RETURN_ADDRESS" jdbcType="VARCHAR" property="returnAddress" />
    <result column="RET_TIME" jdbcType="TIMESTAMP" property="retTime" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="BATCH_CODE" jdbcType="VARCHAR" property="batchCode" />
    <result column="C_TIME" jdbcType="TIMESTAMP" property="cTime" />
    <result column="U_TIME" jdbcType="TIMESTAMP" property="uTime" />
    <result column="C_USER" jdbcType="VARCHAR" property="cUser" />
    <result column="U_USER" jdbcType="VARCHAR" property="uUser" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="REFUNDTIME" jdbcType="TIMESTAMP" property="refundtime" />
    <result column="REFUNDPEOPLE" jdbcType="VARCHAR" property="refundpeople" />
    <result column="AUDITOR" jdbcType="VARCHAR" property="auditor" />
    <result column="ORETURNTYPE" jdbcType="VARCHAR" property="oreturntype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, AGENT_ID, APPLY_REMARK, RET_INVOICE, RET_RECEIPT, RET_SCHEDULE, RETURN_AMO, GOODS_RETURN_AMO, 
    CUT_AMO, REL_RETURN_AMO, TAKE_OUT_AMO, RETURN_ADDRESS, RET_TIME, REMARK, BATCH_CODE, 
    C_TIME, U_TIME, C_USER, U_USER, STATUS, VERSION, REFUNDTIME, REFUNDPEOPLE, AUDITOR, 
    ORETURNTYPE
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.order.OReturnOrderExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from O_RETURN_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from O_RETURN_ORDER
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.order.OReturnOrderExample">
    delete from O_RETURN_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.order.OReturnOrder">
    insert into O_RETURN_ORDER (ID, AGENT_ID, APPLY_REMARK, 
      RET_INVOICE, RET_RECEIPT, RET_SCHEDULE, 
      RETURN_AMO, GOODS_RETURN_AMO, CUT_AMO, 
      REL_RETURN_AMO, TAKE_OUT_AMO, RETURN_ADDRESS, 
      RET_TIME, REMARK, BATCH_CODE, 
      C_TIME, U_TIME, C_USER, 
      U_USER, STATUS, VERSION, 
      REFUNDTIME, REFUNDPEOPLE, AUDITOR, 
      ORETURNTYPE)
    values (#{id,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{applyRemark,jdbcType=VARCHAR}, 
      #{retInvoice,jdbcType=DECIMAL}, #{retReceipt,jdbcType=DECIMAL}, #{retSchedule,jdbcType=DECIMAL}, 
      #{returnAmo,jdbcType=DECIMAL}, #{goodsReturnAmo,jdbcType=DECIMAL}, #{cutAmo,jdbcType=DECIMAL}, 
      #{relReturnAmo,jdbcType=DECIMAL}, #{takeOutAmo,jdbcType=DECIMAL}, #{returnAddress,jdbcType=VARCHAR}, 
      #{retTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{batchCode,jdbcType=VARCHAR}, 
      #{cTime,jdbcType=TIMESTAMP}, #{uTime,jdbcType=TIMESTAMP}, #{cUser,jdbcType=VARCHAR}, 
      #{uUser,jdbcType=VARCHAR}, #{status,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL}, 
      #{refundtime,jdbcType=TIMESTAMP}, #{refundpeople,jdbcType=VARCHAR}, #{auditor,jdbcType=VARCHAR}, 
      #{oreturntype,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.order.OReturnOrder">
    insert into O_RETURN_ORDER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="applyRemark != null">
        APPLY_REMARK,
      </if>
      <if test="retInvoice != null">
        RET_INVOICE,
      </if>
      <if test="retReceipt != null">
        RET_RECEIPT,
      </if>
      <if test="retSchedule != null">
        RET_SCHEDULE,
      </if>
      <if test="returnAmo != null">
        RETURN_AMO,
      </if>
      <if test="goodsReturnAmo != null">
        GOODS_RETURN_AMO,
      </if>
      <if test="cutAmo != null">
        CUT_AMO,
      </if>
      <if test="relReturnAmo != null">
        REL_RETURN_AMO,
      </if>
      <if test="takeOutAmo != null">
        TAKE_OUT_AMO,
      </if>
      <if test="returnAddress != null">
        RETURN_ADDRESS,
      </if>
      <if test="retTime != null">
        RET_TIME,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="batchCode != null">
        BATCH_CODE,
      </if>
      <if test="cTime != null">
        C_TIME,
      </if>
      <if test="uTime != null">
        U_TIME,
      </if>
      <if test="cUser != null">
        C_USER,
      </if>
      <if test="uUser != null">
        U_USER,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="refundtime != null">
        REFUNDTIME,
      </if>
      <if test="refundpeople != null">
        REFUNDPEOPLE,
      </if>
      <if test="auditor != null">
        AUDITOR,
      </if>
      <if test="oreturntype != null">
        ORETURNTYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="applyRemark != null">
        #{applyRemark,jdbcType=VARCHAR},
      </if>
      <if test="retInvoice != null">
        #{retInvoice,jdbcType=DECIMAL},
      </if>
      <if test="retReceipt != null">
        #{retReceipt,jdbcType=DECIMAL},
      </if>
      <if test="retSchedule != null">
        #{retSchedule,jdbcType=DECIMAL},
      </if>
      <if test="returnAmo != null">
        #{returnAmo,jdbcType=DECIMAL},
      </if>
      <if test="goodsReturnAmo != null">
        #{goodsReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="cutAmo != null">
        #{cutAmo,jdbcType=DECIMAL},
      </if>
      <if test="relReturnAmo != null">
        #{relReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="takeOutAmo != null">
        #{takeOutAmo,jdbcType=DECIMAL},
      </if>
      <if test="returnAddress != null">
        #{returnAddress,jdbcType=VARCHAR},
      </if>
      <if test="retTime != null">
        #{retTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null">
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uTime != null">
        #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="uUser != null">
        #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="refundtime != null">
        #{refundtime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundpeople != null">
        #{refundpeople,jdbcType=VARCHAR},
      </if>
      <if test="auditor != null">
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="oreturntype != null">
        #{oreturntype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.order.OReturnOrderExample" resultType="java.lang.Long">
    select count(*) from O_RETURN_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.order.OReturnOrder">
    update O_RETURN_ORDER
    <set>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="applyRemark != null">
        APPLY_REMARK = #{applyRemark,jdbcType=VARCHAR},
      </if>
      <if test="retInvoice != null">
        RET_INVOICE = #{retInvoice,jdbcType=DECIMAL},
      </if>
      <if test="retReceipt != null">
        RET_RECEIPT = #{retReceipt,jdbcType=DECIMAL},
      </if>
      <if test="retSchedule != null">
        RET_SCHEDULE = #{retSchedule,jdbcType=DECIMAL},
      </if>
      <if test="returnAmo != null">
        RETURN_AMO = #{returnAmo,jdbcType=DECIMAL},
      </if>
      <if test="goodsReturnAmo != null">
        GOODS_RETURN_AMO = #{goodsReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="cutAmo != null">
        CUT_AMO = #{cutAmo,jdbcType=DECIMAL},
      </if>
      <if test="relReturnAmo != null">
        REL_RETURN_AMO = #{relReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="takeOutAmo != null">
        TAKE_OUT_AMO = #{takeOutAmo,jdbcType=DECIMAL},
      </if>
      <if test="returnAddress != null">
        RETURN_ADDRESS = #{returnAddress,jdbcType=VARCHAR},
      </if>
      <if test="retTime != null">
        RET_TIME = #{retTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        BATCH_CODE = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null">
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uTime != null">
        U_TIME = #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        C_USER = #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="uUser != null">
        U_USER = #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="refundtime != null">
        REFUNDTIME = #{refundtime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundpeople != null">
        REFUNDPEOPLE = #{refundpeople,jdbcType=VARCHAR},
      </if>
      <if test="auditor != null">
        AUDITOR = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="oreturntype != null">
        ORETURNTYPE = #{oreturntype,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.order.OReturnOrder">
    update O_RETURN_ORDER
    set AGENT_ID = #{agentId,jdbcType=VARCHAR},
      APPLY_REMARK = #{applyRemark,jdbcType=VARCHAR},
      RET_INVOICE = #{retInvoice,jdbcType=DECIMAL},
      RET_RECEIPT = #{retReceipt,jdbcType=DECIMAL},
      RET_SCHEDULE = #{retSchedule,jdbcType=DECIMAL},
      RETURN_AMO = #{returnAmo,jdbcType=DECIMAL},
      GOODS_RETURN_AMO = #{goodsReturnAmo,jdbcType=DECIMAL},
      CUT_AMO = #{cutAmo,jdbcType=DECIMAL},
      REL_RETURN_AMO = #{relReturnAmo,jdbcType=DECIMAL},
      TAKE_OUT_AMO = #{takeOutAmo,jdbcType=DECIMAL},
      RETURN_ADDRESS = #{returnAddress,jdbcType=VARCHAR},
      RET_TIME = #{retTime,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR},
      BATCH_CODE = #{batchCode,jdbcType=VARCHAR},
      C_TIME = #{cTime,jdbcType=TIMESTAMP},
      U_TIME = #{uTime,jdbcType=TIMESTAMP},
      C_USER = #{cUser,jdbcType=VARCHAR},
      U_USER = #{uUser,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      VERSION = #{version,jdbcType=DECIMAL},
      REFUNDTIME = #{refundtime,jdbcType=TIMESTAMP},
      REFUNDPEOPLE = #{refundpeople,jdbcType=VARCHAR},
      AUDITOR = #{auditor,jdbcType=VARCHAR},
      ORETURNTYPE = #{oreturntype,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>







  <select id="getOrderReturnCount" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(*)
    from o_return_order ro
    right join o_return_order_detail odetail on odetail.return_id = ro.id
    left join o_sub_order os on os.pro_id = odetail.pro_id and os.order_id = odetail.order_id and os.status=1
    left join o_sub_order_activity oso on oso.sub_order_id = os.id and oso.status=1
    left join o_order oorder on oorder.id = odetail.order_id
    left join a_platform c on c.platform_num = oorder.order_platform
    left join o_payment d on d.order_id = odetail.order_id and d.status=1
    left join a_agent agent on agent.id = ro.agent_id and agent.status=1
    left join o_refund_agent refund on ro.id = refund.src_id and refund.refund_type = 'TKTH'
    <include refid="BASE_WHERE_SQL"></include>
  </select>


  <select id="getOrderReturnList" parameterType="java.util.Map" resultType="java.util.Map">
    <include refid="PAGING_START" />
    select
    to_char(coalesce((select max(o_logistics.send_date) from O_Receipt_plan
    left join o_logistics on o_logistics.receipt_plan_id = O_Receipt_plan.Id
    where odetail.id = O_Receipt_plan.Return_Order_Detail_Id), to_date('','yyyy-MM-dd')),'yyyy-MM-dd') as rotime,
    to_char(odetail.return_time,'YYYY-MM-DD') as returntime,
    to_char(ro.refundtime,'YYYY-MM-DD') as refundtime,
    to_char(ro.c_time,'YYYY-MM-DD') as cTime,
    to_char(ro.u_time,'YYYY-MM-DD') as uTime,
    ro.refundpeople, ro.auditor,
    c.PLATFORM_NAME, ro.ret_schedule,
    ro.id, odetail.return_count,
    odetail.return_count * odetail.return_price as return_price,
    odetail.order_price as order_price,
    odetail.begin_sn, odetail.end_sn, odetail.order_id,
    agent.AG_UNIQ_NUM, agent.AG_NAME, os.pro_type,
    oso.activity_name, oso.pro_model, oso.vender,
    ro.take_out_amo * (odetail.return_count * odetail.return_price / ro.goods_return_amo) as take_out_amo,
    ro.rel_return_amo * (odetail.return_count * odetail.return_price / ro.goods_return_amo) as rel_return_amo,
    ro.cut_amo * (odetail.return_count * odetail.return_price / ro.goods_return_amo) as cut_amo,
    refund.clo_bank_account,
    refund.clo_realname,
    oorder.ox_order
    from o_return_order ro
    right join o_return_order_detail odetail on odetail.return_id = ro.id
    left join o_sub_order os on os.pro_id = odetail.pro_id and os.order_id = odetail.order_id and os.status=1
    left join o_sub_order_activity oso on oso.sub_order_id = os.id and oso.status=1
    left join o_order oorder on oorder.id = odetail.order_id
    left join a_platform c on c.platform_num = oorder.order_platform
    left join o_payment d on d.order_id = odetail.order_id and d.status=1
    left join a_agent agent on agent.id = ro.agent_id and agent.status=1
    left join o_refund_agent refund on ro.id = refund.src_id and refund.refund_type = 'TKTH'
    <include refid="BASE_WHERE_SQL"></include>
    <include refid="SORTING"></include>
    <include refid="PAGING_END" />
  </select>

  <sql id="BASE_WHERE_SQL">
    <where>
      ro.status=1 and odetail.status=1
      <if test="id!=null and id!=''"> and ro.ID=#{id} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and agent.AG_UNIQ_NUM=#{agUniqNum} </if>
      <if test="activityName!=null and activityName !=''"> and oso.ACTIVITY_NAME LIKE CONCAT(CONCAT('%',#{activityName}),'%')</if>
      <if test="platform!=null and platform!=''"> and c.PLATFORM_NUM=#{platform} </if>
      <if test="proModel!=null and proModel!=''"> and oso.PRO_MODEL=#{proModel} </if>
      <if test="proType!=null and proType!=''"> and os.PRO_TYPE=#{proType}</if>
      <if test="vender != null and vender != '' "> and oso.vender=#{vender}</if>
      <if test="payMethod!=null and payMethod!=''"> and d.PAY_METHOD=#{payMethod} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(odetail.return_time,'YYYY-MM-DD') between #{beginTime} and #{endTime}) </if>
      <if test="agentId !=null and agentId !='' "> and ro.AGENT_ID=#{agentId}</if>
      <if test="agName !=null and agName !='' "> and agent.ag_name like concat(concat( '%', #{agName}),'%')</if>
      <if test="orgId !=null and orgId !='' ">and (ag.AG_DOC_PRO = #{orgId} or ag.AG_DOC_DISTRICT = #{orgId})</if>
      <if test="retSchedule !=null and retSchedule !='' ">and ro.ret_schedule = #{retSchedule} </if>

    </where>
  </sql>

  <sql id='SORTING'>
    ORDER BY ro.C_TIME DESC
  </sql>
  <sql id="PAGING_START">
    <if test="begin != null  and end != null and end >0">
      SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (
    </if>
  </sql>

  <sql id="PAGING_END">
    <if test="begin != null  and end != null and end >0">
      ) A WHERE ROWNUM &lt;= #{end} ) WHERE RN > #{begin}
    </if>
  </sql>

  <select id="selectByReturnDeId" parameterType="string" resultType="map">
    select
      subact.activity_id,
      subact.pro_id,
      orderdetail.id as O_RETURN_ORDER_DETAIL_ID,
      orderdetail.return_count,
      oa.act_code,
      suborder.pro_type,
      subact.pro_model,
      subact.vender
    from o_return_order_detail orderdetail
      left join o_sub_order suborder on orderdetail.order_id=suborder.order_id and orderdetail.pro_id=suborder.pro_id and suborder.status=1
      left join o_sub_order_activity subact on subact.sub_order_id=suborder.id and subact.status=1
      left join o_activity oa on subact.activity_id = oa.id
      where orderdetail.id=#{returnDetailsId}
  </select>


  <select id="queryReceiveOrderActivity" parameterType="map" resultType="map">
    select
      oso.activity_id, oso.activity_name, oso.sub_order_id, os.order_id, os.agent_id
    from o_sub_order_activity oso, o_sub_order os
    where oso.sub_order_id = os.id and oso.status=1 and oso.sub_order_id in
    (select id from o_sub_order where status=1 and order_id = #{params.receiveOrderId} and agent_id = #{params.receiveAgentId})
  </select>

  <select id="exportRetForDetail" parameterType="map" resultMap="ReturnOrderVo">
    (select
      ro.id as return_order_id,
      bus.bus_num,
      aagent.ag_uniq_num,
      aagent.ag_name,
      oso.vender,
      oso.pro_model,
      odetail.return_count,
      odetail.order_price as order_price,
      oso.activity_name,
      nvl(ro.cut_amo * (odetail.return_count * odetail.return_price / ro.goods_return_amo),0) as cut_amo
    from o_return_order ro
    right join o_return_order_detail odetail on odetail.return_id = ro.id
    left join o_sub_order os on os.pro_id = odetail.pro_id and os.order_id = odetail.order_id and os.status = 1
    left join o_sub_order_activity oso on oso.sub_order_id = os.id and oso.status = 1
    left join o_order oorder on oorder.id = odetail.order_id and oorder.status = 1
    left join a_platform c on c.platform_num = oorder.order_platform and c.status = 1
    left join o_payment d on d.order_id = odetail.order_id and d.status = 1
    left join a_agent aagent on aagent.id = ro.agent_id and aagent.status = 1
    left join o_refund_agent refund on ro.id = refund.src_id and refund.refund_type = 'TKTH'
    left join a_agent_businfo bus on bus.agent_id = oorder.agent_id and bus.id = oorder.bus_id and bus.status = 1
    <where>
      1=1 and ro.status = 1 and odetail.status = 1
      <if test="agName !=null and agName !='' "> and aagent.ag_name like concat(concat('%', #{agName}),'%') </if>
      <if test="id!=null and id!=''"> and ro.id = #{id} </if>
      <if test="activityName!=null and activityName !=''"> and oso.activity_name LIKE CONCAT(CONCAT('%',#{activityName}),'%') </if>
      <if test="platform!=null and platform!=''"> and c.platform_num = #{platform} </if>
      <if test="proModel!=null and proModel!=''"> and oso.pro_model = #{proModel} </if>
      <if test="agUniqNum!=null and agUniqNum!=''"> and aagent.ag_uniq_num = #{agUniqNum} </if>
      <if test="proType!=null and proType!=''"> and os.pro_type = #{proType} </if>
      <if test="vender != null and vender != '' "> and oso.vender=#{vender} </if>
      <if test="payMethod!=null and payMethod!=''"> and d.pay_method = #{payMethod} </if>
      <if test="retSchedule !=null and retSchedule !='' ">and ro.ret_schedule = #{retSchedule} </if>
      <if test="beginTime!=null and endTime!=''"> and (to_char(odetail.return_time,'YYYY-MM-DD') between #{beginTime} and #{endTime}) </if>
      <if test="orgId !=null and orgId !='' ">and (ag.ag_doc_pro = #{orgId} or ag.ag_doc_district = #{orgId}) </if>
    </where>
    )
    order by ro.c_time desc
  </select>

  <resultMap id="ReturnOrderVo" type="com.ryx.credit.pojo.admin.vo.ReturnOrderVo">
    <result column="return_order_id" property="returnOrderId" jdbcType="VARCHAR"/>
    <result column="bus_num" property="busNum" jdbcType="VARCHAR"/>
    <result column="ag_uniq_num" property="agUniqNum" jdbcType="VARCHAR"/>
    <result column="ag_name" property="agName" jdbcType="VARCHAR"/>
    <result column="vender" property="vender" jdbcType="VARCHAR"/>
    <result column="pro_model" property="proModel" jdbcType="VARCHAR"/>
    <result column="return_count" property="returnCount" jdbcType="DECIMAL"/>
    <result column="order_price" property="orderPrice" jdbcType="DECIMAL"/>
    <result column="activity_name" property="activityName" jdbcType="VARCHAR"/>
    <result column="receive_order_id" property="receiveOrderId" jdbcType="VARCHAR"/>
    <result column="receive_agent_id" property="receiveAgentId" jdbcType="VARCHAR"/>
    <result column="receive_agent_name" property="receiveAgentName" jdbcType="VARCHAR"/>
    <result column="receive_activity_name" property="receiveActivityName" jdbcType="VARCHAR"/>
    <result column="cut_amo" property="cutAmo" jdbcType="DECIMAL"/>
    <result column="addr_detail" property="addrDetail" jdbcType="VARCHAR"/>
    <result column="w_number" property="wnumber" jdbcType="VARCHAR"/>
    <result column="ag_doc_district" property="agDocDistrict" jdbcType="VARCHAR"/>
    <result column="ag_doc_pro" property="agDocPro" jdbcType="VARCHAR"/>
  </resultMap>
</mapper>