<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.dao.order.OPaymentDetailMapper">
    <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.order.OPaymentDetail">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="PAYMENT_ID" jdbcType="VARCHAR" property="paymentId" />
        <result column="PAYMENT_TYPE" jdbcType="VARCHAR" property="paymentType" />
        <result column="ORDER_ID" jdbcType="VARCHAR" property="orderId" />
        <result column="BATCH_CODE" jdbcType="VARCHAR" property="batchCode" />
        <result column="PAY_TYPE" jdbcType="VARCHAR" property="payType" />
        <result column="PAY_AMOUNT" jdbcType="DECIMAL" property="payAmount" />
        <result column="REAL_PAY_AMOUNT" jdbcType="DECIMAL" property="realPayAmount" />
        <result column="PAY_TIME" jdbcType="TIMESTAMP" property="payTime" />
        <result column="SRC_ID" jdbcType="VARCHAR" property="srcId" />
        <result column="SRC_TYPE" jdbcType="VARCHAR" property="srcType" />
        <result column="PLAN_PAY_TIME" jdbcType="TIMESTAMP" property="planPayTime" />
        <result column="PLAN_NUM" jdbcType="DECIMAL" property="planNum" />
        <result column="PAYMENT_STATUS" jdbcType="DECIMAL" property="paymentStatus" />
        <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
        <result column="C_USER" jdbcType="VARCHAR" property="cUser" />
        <result column="C_DATE" jdbcType="TIMESTAMP" property="cDate" />
        <result column="REMARK" jdbcType="VARCHAR" property="remark" />
        <result column="STATUS" jdbcType="DECIMAL" property="status" />
        <result column="VERSION" jdbcType="DECIMAL" property="version" />
        <result column="O_PD_SUM_ID" jdbcType="VARCHAR" property="oPdSumId" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, PAYMENT_ID, PAYMENT_TYPE, ORDER_ID, BATCH_CODE, PAY_TYPE, PAY_AMOUNT, REAL_PAY_AMOUNT,
    PAY_TIME, SRC_ID, SRC_TYPE, PLAN_PAY_TIME, PLAN_NUM, PAYMENT_STATUS, AGENT_ID, C_USER,
    C_DATE, REMARK, STATUS, VERSION, O_PD_SUM_ID
  </sql>
    <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.order.OPaymentDetailExample" resultMap="BaseResultMap">
        <include refid="OracleDialectPrefix" />
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from O_PAYMENT_DETAIL
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="OracleDialectSuffix" />
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from O_PAYMENT_DETAIL
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.order.OPaymentDetailExample">
        delete from O_PAYMENT_DETAIL
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.ryx.credit.pojo.admin.order.OPaymentDetail">
    insert into O_PAYMENT_DETAIL (ID, PAYMENT_ID, PAYMENT_TYPE,
      ORDER_ID, BATCH_CODE, PAY_TYPE,
      PAY_AMOUNT, REAL_PAY_AMOUNT, PAY_TIME,
      SRC_ID, SRC_TYPE, PLAN_PAY_TIME,
      PLAN_NUM, PAYMENT_STATUS, AGENT_ID,
      C_USER, C_DATE, REMARK,
      STATUS, VERSION, O_PD_SUM_ID
      )
    values (#{id,jdbcType=VARCHAR}, #{paymentId,jdbcType=VARCHAR}, #{paymentType,jdbcType=VARCHAR},
      #{orderId,jdbcType=VARCHAR}, #{batchCode,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR},
      #{payAmount,jdbcType=DECIMAL}, #{realPayAmount,jdbcType=DECIMAL}, #{payTime,jdbcType=TIMESTAMP},
      #{srcId,jdbcType=VARCHAR}, #{srcType,jdbcType=VARCHAR}, #{planPayTime,jdbcType=TIMESTAMP},
      #{planNum,jdbcType=DECIMAL}, #{paymentStatus,jdbcType=DECIMAL}, #{agentId,jdbcType=VARCHAR},
      #{cUser,jdbcType=VARCHAR}, #{cDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR},
      #{status,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL}, #{oPdSumId,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.order.OPaymentDetail">
        insert into O_PAYMENT_DETAIL
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="paymentId != null">
                PAYMENT_ID,
            </if>
            <if test="paymentType != null">
                PAYMENT_TYPE,
            </if>
            <if test="orderId != null">
                ORDER_ID,
            </if>
            <if test="batchCode != null">
                BATCH_CODE,
            </if>
            <if test="payType != null">
                PAY_TYPE,
            </if>
            <if test="payAmount != null">
                PAY_AMOUNT,
            </if>
            <if test="realPayAmount != null">
                REAL_PAY_AMOUNT,
            </if>
            <if test="payTime != null">
                PAY_TIME,
            </if>
            <if test="srcId != null">
                SRC_ID,
            </if>
            <if test="srcType != null">
                SRC_TYPE,
            </if>
            <if test="planPayTime != null">
                PLAN_PAY_TIME,
            </if>
            <if test="planNum != null">
                PLAN_NUM,
            </if>
            <if test="paymentStatus != null">
                PAYMENT_STATUS,
            </if>
            <if test="agentId != null">
                AGENT_ID,
            </if>
            <if test="cUser != null">
                C_USER,
            </if>
            <if test="cDate != null">
                C_DATE,
            </if>
            <if test="remark != null">
                REMARK,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="version != null">
                VERSION,
            </if>
            <if test="oPdSumId != null">
                O_PD_SUM_ID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="paymentId != null">
                #{paymentId,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="batchCode != null">
                #{batchCode,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=VARCHAR},
            </if>
            <if test="payAmount != null">
                #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="realPayAmount != null">
                #{realPayAmount,jdbcType=DECIMAL},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="srcId != null">
                #{srcId,jdbcType=VARCHAR},
            </if>
            <if test="srcType != null">
                #{srcType,jdbcType=VARCHAR},
            </if>
            <if test="planPayTime != null">
                #{planPayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="planNum != null">
                #{planNum,jdbcType=DECIMAL},
            </if>
            <if test="paymentStatus != null">
                #{paymentStatus,jdbcType=DECIMAL},
            </if>
            <if test="agentId != null">
                #{agentId,jdbcType=VARCHAR},
            </if>
            <if test="cUser != null">
                #{cUser,jdbcType=VARCHAR},
            </if>
            <if test="cDate != null">
                #{cDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=DECIMAL},
            </if>
            <if test="version != null">
                #{version,jdbcType=DECIMAL},
            </if>
            <if test="oPdSumId != null">
                #{oPdSumId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.order.OPaymentDetailExample" resultType="java.lang.Long">
        select count(*) from O_PAYMENT_DETAIL
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update O_PAYMENT_DETAIL
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.paymentId != null">
                PAYMENT_ID = #{record.paymentId,jdbcType=VARCHAR},
            </if>
            <if test="record.paymentType != null">
                PAYMENT_TYPE = #{record.paymentType,jdbcType=VARCHAR},
            </if>
            <if test="record.orderId != null">
                ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
            </if>
            <if test="record.batchCode != null">
                BATCH_CODE = #{record.batchCode,jdbcType=VARCHAR},
            </if>
            <if test="record.payType != null">
                PAY_TYPE = #{record.payType,jdbcType=VARCHAR},
            </if>
            <if test="record.payAmount != null">
                PAY_AMOUNT = #{record.payAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.realPayAmount != null">
                REAL_PAY_AMOUNT = #{record.realPayAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.payTime != null">
                PAY_TIME = #{record.payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.srcId != null">
                SRC_ID = #{record.srcId,jdbcType=VARCHAR},
            </if>
            <if test="record.srcType != null">
                SRC_TYPE = #{record.srcType,jdbcType=VARCHAR},
            </if>
            <if test="record.planPayTime != null">
                PLAN_PAY_TIME = #{record.planPayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.planNum != null">
                PLAN_NUM = #{record.planNum,jdbcType=DECIMAL},
            </if>
            <if test="record.paymentStatus != null">
                PAYMENT_STATUS = #{record.paymentStatus,jdbcType=DECIMAL},
            </if>
            <if test="record.agentId != null">
                AGENT_ID = #{record.agentId,jdbcType=VARCHAR},
            </if>
            <if test="record.cUser != null">
                C_USER = #{record.cUser,jdbcType=VARCHAR},
            </if>
            <if test="record.cDate != null">
                C_DATE = #{record.cDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=DECIMAL},
            </if>
            <if test="record.version != null">
                VERSION = #{record.version,jdbcType=DECIMAL},
            </if>
            <if test="record.oPdSumId != null">
                O_PD_SUM_ID = #{record.oPdSumId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update O_PAYMENT_DETAIL
        set ID = #{record.id,jdbcType=VARCHAR},
        PAYMENT_ID = #{record.paymentId,jdbcType=VARCHAR},
        PAYMENT_TYPE = #{record.paymentType,jdbcType=VARCHAR},
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
        BATCH_CODE = #{record.batchCode,jdbcType=VARCHAR},
        PAY_TYPE = #{record.payType,jdbcType=VARCHAR},
        PAY_AMOUNT = #{record.payAmount,jdbcType=DECIMAL},
        REAL_PAY_AMOUNT = #{record.realPayAmount,jdbcType=DECIMAL},
        PAY_TIME = #{record.payTime,jdbcType=TIMESTAMP},
        SRC_ID = #{record.srcId,jdbcType=VARCHAR},
        SRC_TYPE = #{record.srcType,jdbcType=VARCHAR},
        PLAN_PAY_TIME = #{record.planPayTime,jdbcType=TIMESTAMP},
        PLAN_NUM = #{record.planNum,jdbcType=DECIMAL},
        PAYMENT_STATUS = #{record.paymentStatus,jdbcType=DECIMAL},
        AGENT_ID = #{record.agentId,jdbcType=VARCHAR},
        C_USER = #{record.cUser,jdbcType=VARCHAR},
        C_DATE = #{record.cDate,jdbcType=TIMESTAMP},
        REMARK = #{record.remark,jdbcType=VARCHAR},
        STATUS = #{record.status,jdbcType=DECIMAL},
        VERSION = #{record.version,jdbcType=DECIMAL},
        O_PD_SUM_ID = #{record.oPdSumId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.order.OPaymentDetail">
        update O_PAYMENT_DETAIL
        <set>
            <if test="paymentId != null">
                PAYMENT_ID = #{paymentId,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                ORDER_ID = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="batchCode != null">
                BATCH_CODE = #{batchCode,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                PAY_TYPE = #{payType,jdbcType=VARCHAR},
            </if>
            <if test="payAmount != null">
                PAY_AMOUNT = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="realPayAmount != null">
                REAL_PAY_AMOUNT = #{realPayAmount,jdbcType=DECIMAL},
            </if>
            <if test="payTime != null">
                PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="srcId != null">
                SRC_ID = #{srcId,jdbcType=VARCHAR},
            </if>
            <if test="srcType != null">
                SRC_TYPE = #{srcType,jdbcType=VARCHAR},
            </if>
            <if test="planPayTime != null">
                PLAN_PAY_TIME = #{planPayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="planNum != null">
                PLAN_NUM = #{planNum,jdbcType=DECIMAL},
            </if>
            <if test="paymentStatus != null">
                PAYMENT_STATUS = #{paymentStatus,jdbcType=DECIMAL},
            </if>
            <if test="agentId != null">
                AGENT_ID = #{agentId,jdbcType=VARCHAR},
            </if>
            <if test="cUser != null">
                C_USER = #{cUser,jdbcType=VARCHAR},
            </if>
            <if test="cDate != null">
                C_DATE = #{cDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=DECIMAL},
            </if>
            <if test="version != null">
                VERSION = VERSION + 1,
            </if>
            <if test="oPdSumId != null">
                O_PD_SUM_ID = #{oPdSumId,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR} and VERSION =  #{version,jdbcType=DECIMAL}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.order.OPaymentDetail">
    update O_PAYMENT_DETAIL
    set PAYMENT_ID = #{paymentId,jdbcType=VARCHAR},
      PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
      ORDER_ID = #{orderId,jdbcType=VARCHAR},
      BATCH_CODE = #{batchCode,jdbcType=VARCHAR},
      PAY_TYPE = #{payType,jdbcType=VARCHAR},
      PAY_AMOUNT = #{payAmount,jdbcType=DECIMAL},
      REAL_PAY_AMOUNT = #{realPayAmount,jdbcType=DECIMAL},
      PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
      SRC_ID = #{srcId,jdbcType=VARCHAR},
      SRC_TYPE = #{srcType,jdbcType=VARCHAR},
      PLAN_PAY_TIME = #{planPayTime,jdbcType=TIMESTAMP},
      PLAN_NUM = #{planNum,jdbcType=DECIMAL},
      PAYMENT_STATUS = #{paymentStatus,jdbcType=DECIMAL},
      AGENT_ID = #{agentId,jdbcType=VARCHAR},
      C_USER = #{cUser,jdbcType=VARCHAR},
      C_DATE = #{cDate,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      VERSION = VERSION + 1,
      O_PD_SUM_ID = #{oPdSumId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR} and VERSION =  #{version,jdbcType=DECIMAL}
  </update>
    <sql id="OracleDialectPrefix">
        <if test="page != null">
            select * from ( select row_.*, rownum rownum_ from (
        </if>
    </sql>
    <sql id="OracleDialectSuffix">
        <if test="page != null">
            <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
        </if>
    </sql>





    <!--============================以上代码自动生成=========================-->



    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from O_PAYMENT_DETAIL
        where ID = #{id,jdbcType=VARCHAR} and STATUS=1
    </select>

    <update id="updatePaymentDetailByPaymentId" parameterType="java.lang.String">
    update O_PAYMENT_DETAIL
    set
      REAL_PAY_AMOUNT = PAY_AMOUNT,
      PAY_TIME = sysdate,
      SRC_ID = #{srcId,jdbcType=VARCHAR},
      SRC_TYPE = #{srcType,jdbcType=VARCHAR},
      PLAN_PAY_TIME = sysdate,
      PAYMENT_STATUS = 4,
      REMARK = '抵扣欠款'
    where PAYMENT_ID = #{paymentId,jdbcType=VARCHAR}
    and Payment_status in ('1','2','3')
  </update>

    <select id="selectShareMoney" parameterType="map" resultType="map">
        select * from
        ( select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,detail.AGENT_ID,detail.ORDER_ID,
        detail.PAYMENT_TYPE,payment.GUARANTEE_AGENT,agent.AG_NAME ,o.ORDER_PLATFORM
        from O_PAYMENT_DETAIL detail left join O_PAYMENT payment on detail.PAYMENT_ID=payment.ID left join A_AGENT agent
        on detail.AGENT_ID=agent.id
        left join O_ORDER o on detail.ORDER_ID=o.id where
        detail.status=1 and payment.status=1 and agent.status=1 and (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3) and detail.PAY_TYPE='FRFQ'
        and detail.PAYMENT_TYPE='ORDER_FKD'
        <if test="map.agentId != null and map.agentId != '' ">
            and detail.AGENT_ID = #{map.agentId}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(detail.PLAN_PAY_TIME,'YYYY-MM') &lt;= #{map.time}
        </if>
        union
        select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,cash.agent_id,'' as ORDER_ID,
        detail.PAYMENT_TYPE,a.ag_name as AG_NAME ,
        (
        select o_Payment.guarantee_agent from O_REFUND_PRICE_DIFF_DETAIL dfde
        left join o_Payment on o_Payment.order_id = dfde.order_id
        where dfde.Refund_price_diff_id = diff.id and dfde.status=1 and o_Payment.status=1 and rownum =1
        )
        as GUARANTEE_AGENT,
        (
        select o.order_platform from O_REFUND_PRICE_DIFF_DETAIL dfde
        left join o_order o on o.id = dfde.order_id
        where dfde.Refund_price_diff_id = diff.id and dfde.status=1 and rownum =1
        ) as ORDER_PLATFORM
        from O_PAYMENT_DETAIL detail
        left join o_Cash_Receivables cash on cash.id=detail.Payment_id and cash.cashpay_type='REFUNDPRICEDIFF'
        left join O_REFUND_PRICE_DIFF diff on cash.src_id = diff.id
        left join a_agent a on a.id = diff.agent_id
        where detail.status=1 and  (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3) and detail.PAY_TYPE='FRFQ'
        and detail.PAYMENT_TYPE='ORDER_XX'
        <if test="map.agentId != null and map.agentId != '' ">
        and detail.AGENT_ID = #{map.agentId}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(detail.PLAN_PAY_TIME,'YYYY-MM')&lt;= #{map.time}
        </if>
        union
        select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,detail.AGENT_ID,detail.ORDER_ID,
        detail.PAYMENT_TYPE,payment.GUARANTEE_AGENT,agent.AG_NAME ,o.ORDER_PLATFORM
        from O_PAYMENT_DETAIL detail left join O_PAYMENT payment on detail.PAYMENT_ID=payment.ID left join A_AGENT agent
        on detail.AGENT_ID=agent.id
        left join O_ORDER o on detail.ORDER_ID=o.id where
        detail.status=1 and payment.status=1 and agent.status=1 and  (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3) and detail.PAY_TYPE='FRFQ'
        and detail.PAYMENT_TYPE='ORDER_PDT'
        <if test="map.agentId != null and map.agentId != '' ">
            and detail.AGENT_ID = #{map.agentId}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(detail.PLAN_PAY_TIME,'YYYY-MM')&lt;= #{map.time}
        </if>)a
        ORDER BY a.C_DATE DESC
    </select>

    <select id="querySupplementXXDK" parameterType="map" resultType="java.math.BigDecimal">
        select
          NVL(SUM(s.pay_amount) ,0)
        from o_Payment_detail pd,o_Supplement s
        <where>
            pd.id = s.src_id
            and s.review_status = #{map.reviewStatus}
            and s.pay_method = #{map.payMethod}
            and pd.payment_id= #{map.paymentId}
        </where>
    </select>

    <select id="selectMoney" parameterType="string" resultType="com.ryx.credit.pojo.admin.order.OPaymentDetail">
        select PAY_AMOUNT as payAmount,REAL_PAY_AMOUNT as realPayAmount from o_Payment_detail where id=#{id} and  PAYMENT_STATUS in(1,3,5)
        and status=1
    </select>

    <select id="getAllDebtDetail" parameterType="map" resultType="map">
      select * from
      ( select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,detail.AGENT_ID,detail.ORDER_ID,
      detail.PAYMENT_TYPE,payment.GUARANTEE_AGENT,agent.AG_NAME ,o.ORDER_PLATFORM,'订单分期' as DETAIN_NAME,'' as DETAIN_CODE
      from O_PAYMENT_DETAIL detail left join O_PAYMENT payment on detail.PAYMENT_ID=payment.ID left join A_AGENT agent
      on detail.AGENT_ID=agent.id
      left join O_ORDER o on detail.ORDER_ID=o.id where
      detail.status=1 and payment.status=1 and agent.status=1 and (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3) and detail.PAY_TYPE in('FRFQ','FKFQ','DKFQ')
      and detail.PAYMENT_TYPE in('ORDER_FKD','ORDER_PDT')
      <if test="map.agentId != null and map.agentId != '' ">
         and detail.AGENT_ID = #{map.agentId}
      </if>
      union
      select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,cash.agent_id,'' as ORDER_ID,
      detail.PAYMENT_TYPE,a.ag_name as AG_NAME ,
      (
      select o_Payment.guarantee_agent from O_REFUND_PRICE_DIFF_DETAIL dfde
      left join o_Payment on o_Payment.order_id = dfde.order_id
      where dfde.Refund_price_diff_id = diff.id and dfde.status=1 and o_Payment.status=1 and rownum =1
      )
      as GUARANTEE_AGENT,
      (
      select o.order_platform from O_REFUND_PRICE_DIFF_DETAIL dfde
      left join o_order o on o.id = dfde.order_id
      where dfde.Refund_price_diff_id = diff.id and dfde.status=1 and rownum =1
      ) as ORDER_PLATFORM,'订单分期' as DETAIN_NAME,'' as DETAIN_CODE
      from O_PAYMENT_DETAIL detail
      left join o_Cash_Receivables cash on cash.id=detail.Payment_id and cash.cashpay_type='REFUNDPRICEDIFF'
      left join O_REFUND_PRICE_DIFF diff on cash.src_id = diff.id
      left join a_agent a on a.id = diff.agent_id
      where detail.status=1 and  (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3) and detail.PAY_TYPE='FRFQ'
      and detail.PAYMENT_TYPE='ORDER_XX'
      <if test="map.agentId != null and map.agentId != '' ">
         and detail.AGENT_ID = #{map.agentId}
      </if>
      union
      select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,detail.AGENT_ID,detail.ORDER_ID,
      detail.PAYMENT_TYPE,payment.GUARANTEE_AGENT,agent.AG_NAME ,'',d.d_itemname as DETAIN_NAME,ac.c_type
      from O_PAYMENT_DETAIL detail left join O_PAYMENT payment on detail.PAYMENT_ID=payment.ID left join A_AGENT agent
      on detail.AGENT_ID=agent.id left join A_capital ac on detail.payment_id=ac.id
      left join d_dict d on d.d_itemvalue = ac.c_type and d_group = 'AGENT' and d_artifact='CAPITAL_TYPE'
      where detail.status=1 and ac.status = 1 and agent.status = 1
      and detail.PAYMENT_TYPE ='ORDER_BZJ'
      <if test="map.agentId != null and map.agentId != '' ">
         and detail.AGENT_ID = #{map.agentId}
      </if>
      )a
      ORDER BY a.C_DATE DESC
    </select>

    <select id="getCapitalDebt" parameterType="map" resultType="map">
        select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,detail.AGENT_ID,detail.ORDER_ID,
        detail.PAYMENT_TYPE,payment.GUARANTEE_AGENT,agent.AG_NAME ,'',d.d_itemname as DETAIN_NAME,ac.c_type
        from O_PAYMENT_DETAIL detail left join O_PAYMENT payment on detail.PAYMENT_ID=payment.ID left join A_AGENT agent
        on detail.AGENT_ID=agent.id left join A_capital ac on detail.payment_id=ac.id
        left join d_dict d on d.d_itemvalue = ac.c_type and d_group = 'AGENT' and d_artifact='CAPITAL_TYPE'
        where detail.status=1 and ac.status = 1 and agent.status = 1
        and detail.PAYMENT_TYPE ='ORDER_BZJ' and (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3)
        <if test="map.agentId != null and map.agentId != '' ">
            and detail.AGENT_ID = #{map.agentId}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(detail.PLAN_PAY_TIME,'YYYY-MM')&lt;= #{map.time}
        </if>
    </select>

    <select id="getOrderDebt" parameterType="map" resultType="map">
        select * from
        ( select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,detail.AGENT_ID,detail.ORDER_ID,
        detail.PAYMENT_TYPE,payment.GUARANTEE_AGENT,agent.AG_NAME ,o.ORDER_PLATFORM
        from O_PAYMENT_DETAIL detail left join O_PAYMENT payment on detail.PAYMENT_ID=payment.ID left join A_AGENT agent
        on detail.AGENT_ID=agent.id
        left join O_ORDER o on detail.ORDER_ID=o.id where
        detail.status=1 and payment.status=1 and agent.status=1 and (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3) and detail.PAY_TYPE in('FRFQ','FKFQ','DKFQ')
        and detail.PAYMENT_TYPE='ORDER_FKD'
        <if test="map.agentId != null and map.agentId != '' ">
            and detail.AGENT_ID = #{map.agentId}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(detail.PLAN_PAY_TIME,'YYYY-MM') &lt;= #{map.time}
        </if>
        union
        select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,cash.agent_id,'' as ORDER_ID,
        detail.PAYMENT_TYPE,a.ag_name as AG_NAME ,
        (
        select o_Payment.guarantee_agent from O_REFUND_PRICE_DIFF_DETAIL dfde
        left join o_Payment on o_Payment.order_id = dfde.order_id
        where dfde.Refund_price_diff_id = diff.id and dfde.status=1 and o_Payment.status=1 and rownum =1
        )
        as GUARANTEE_AGENT,
        (
        select o.order_platform from O_REFUND_PRICE_DIFF_DETAIL dfde
        left join o_order o on o.id = dfde.order_id
        where dfde.Refund_price_diff_id = diff.id and dfde.status=1 and rownum =1
        ) as ORDER_PLATFORM
        from O_PAYMENT_DETAIL detail
        left join o_Cash_Receivables cash on cash.id=detail.Payment_id and cash.cashpay_type='REFUNDPRICEDIFF'
        left join O_REFUND_PRICE_DIFF diff on cash.src_id = diff.id
        left join a_agent a on a.id = diff.agent_id
        where detail.status=1 and  (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3) and detail.PAY_TYPE='FRFQ'
        and detail.PAYMENT_TYPE='ORDER_XX'
        <if test="map.agentId != null and map.agentId != '' ">
            and detail.AGENT_ID = #{map.agentId}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(detail.PLAN_PAY_TIME,'YYYY-MM')&lt;= #{map.time}
        </if>
        union
        select detail.c_date,detail.id,detail.PLAN_PAY_TIME,detail.PAY_AMOUNT,detail.AGENT_ID,detail.ORDER_ID,
        detail.PAYMENT_TYPE,payment.GUARANTEE_AGENT,agent.AG_NAME ,o.ORDER_PLATFORM
        from O_PAYMENT_DETAIL detail left join O_PAYMENT payment on detail.PAYMENT_ID=payment.ID left join A_AGENT agent
        on detail.AGENT_ID=agent.id
        left join O_ORDER o on detail.ORDER_ID=o.id where
        detail.status=1 and payment.status=1 and agent.status=1 and  (detail.PAYMENT_STATUS=1 or detail.PAYMENT_STATUS=3) and detail.PAY_TYPE in('FRFQ','FKFQ','DKFQ')
        and detail.PAYMENT_TYPE='ORDER_PDT'
        <if test="map.agentId != null and map.agentId != '' ">
            and detail.AGENT_ID = #{map.agentId}
        </if>
        <if test="map.time != null and map.time != '' ">
            and to_char(detail.PLAN_PAY_TIME,'YYYY-MM')&lt;= #{map.time}
        </if>)a
        ORDER BY a.plan_pay_time asc
    </select>

    <update id="updateCapitalById" parameterType="com.ryx.credit.pojo.admin.order.OPaymentDetail">
        update O_PAYMENT_DETAIL
        set REAL_PAY_AMOUNT = #{realPayAmount,jdbcType=DECIMAL},
        PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
        SRC_ID = #{srcId,jdbcType=VARCHAR},
        SRC_TYPE = #{srcType,jdbcType=VARCHAR},
        PAYMENT_STATUS = #{paymentStatus,jdbcType=DECIMAL}
        where ID = #{id,jdbcType=VARCHAR}
    </update>



<select id="getOpdSum" resultType="java.util.Map" parameterType="java.util.Map">
    select AGENT_ID,ORDER_PLATFORM,SUM(pay_amount) as sum_amount from
    (select aa.AGENT_ID,aa.PAY_AMOUNT,bb.ORDER_PLATFORM,aa.PLAN_PAY_TIME from o_Payment_detail
    aa  join O_ORDER bb on aa.ORDER_ID = bb.id where aa.STATUS = 1 and
    (aa.Payment_status = 1 or aa.PAYMENT_STATUS = 3  ))
    <if test="month != null and month != '' ">
    where to_char(PLAN_PAY_TIME,'YYYY-MM') &lt;= #{month}
    </if>
    group by ORDER_PLATFORM,AGENT_ID

</select>

<select id="getOPaymentDetailID" resultType="java.util.Map" parameterType="java.util.Map">
    select * from (select aa.ID,aa.AGENT_ID,bb.ORDER_PLATFORM ,aa.PLAN_PAY_TIME from o_Payment_detail
    aa  join O_ORDER bb on aa.ORDER_ID = bb.id where aa.STATUS = 1 and (aa.Payment_status = 1 or aa.PAYMENT_STATUS = 3))
    where 1=1
    <if test=" AGENT_ID!= null and AGENT_ID != '' ">
       and AGENT_ID = #{AGENT_ID}
   </if>
   <if test=" ORDER_PLATFORM!= null and ORDER_PLATFORM != '' ">
       and ORDER_PLATFORM = #{ORDER_PLATFORM}
   </if>
    <if test=" month != null and month != '' ">
        and  to_char(PLAN_PAY_TIME,'YYYY-MM')&lt;= #{month}
    </if>
</select>

  <select id="SelectByMonthRefund" parameterType="java.util.Map" resultType="java.util.Map">

      SELECT gg.*,hh.AG_NAME as PARENT_AG_NAME from  (select ee.* ,ff.AG_NAME as AG_NAME  from (select cc.*,dd.AGENT_ID as GUARANTEE_AGENT from
      (select aa.id as ID,aa.agentid as AGENT_ID,aa.platform as ORDER_PLATFORM,aa.sum_mouth,aa.sum_status,aa.status,aa.version,aa.c_user,
      aa.c_time,aa.u_time,aa.sum_amount as PAY_AMOUNT, bb.BUS_PARENT  from o_pd_sum aa,A_AGENT_BUSINFO bb
      where aa.platform = bb.BUS_PLATFORM and aa.agentid  = bb.AGENT_ID) cc left join A_AGENT_BUSINFO dd on cc.BUS_PARENT = dd.ID) ee
      left join A_AGENT ff on ee.AGENT_ID = ff.ID) gg left join A_AGENT hh on gg.GUARANTEE_AGENT= hh.ID

      where  gg.sum_status = '1'
      <if test=" time!= null and time != '' ">
          and gg.sum_mouth &lt;= #{time}
      </if>
  </select>

<!--   查询已结清的实际付款金额-->

    <select id="selectRealAmount" resultType="java.math.BigDecimal" parameterType="String">
        select sum(REAL_PAY_AMOUNT)as realPayAmount from O_PAYMENT_DETAIL
         <where>
             <if test=" orderId!= null and orderId != '' ">
                 ORDER_ID=#{orderId}
             </if>
         </where>
           AND PAYMENT_TYPE=#{paymentType} and Payment_status=${paymentStatus}
        group by ''
    </select>

    <!--查询还剩几期的待付款-->
    <select id="selectCount" resultMap="BaseResultMap" parameterType="String">
        select
        <include refid="Base_Column_List" />
        from O_PAYMENT_DETAIL
        <where>
            <if test=" orderId!= null and orderId != '' ">
                ORDER_ID=#{orderId}
            </if>
        </where>
        AND PAYMENT_TYPE=#{paymentType} and Payment_status=${paymentStatus}
    </select>

</mapper>