<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.dao.agent.AgentBusInfoMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.agent.AgentBusInfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="BUS_NUM" jdbcType="VARCHAR" property="busNum" />
    <result column="BUS_PLATFORM" jdbcType="VARCHAR" property="busPlatform" />
    <result column="BUS_TYPE" jdbcType="VARCHAR" property="busType" />
    <result column="BUS_PARENT" jdbcType="VARCHAR" property="busParent" />
    <result column="BUS_RISK_PARENT" jdbcType="VARCHAR" property="busRiskParent" />
    <result column="BUS_ACTIVATION_PARENT" jdbcType="VARCHAR" property="busActivationParent" />
    <result column="BUS_REGION" jdbcType="VARCHAR" property="busRegion" />
    <result column="BUS_SENT_DIRECTLY" jdbcType="DECIMAL" property="busSentDirectly" />
    <result column="BUS_DIRECT_CASHBACK" jdbcType="DECIMAL" property="busDirectCashback" />
    <result column="BUS_INDE_ASS" jdbcType="DECIMAL" property="busIndeAss" />
    <result column="BUS_CONTACT" jdbcType="VARCHAR" property="busContact" />
    <result column="BUS_CONTACT_MOBILE" jdbcType="VARCHAR" property="busContactMobile" />
    <result column="BUS_CONTACT_EMAIL" jdbcType="VARCHAR" property="busContactEmail" />
    <result column="BUS_CONTACT_PERSON" jdbcType="VARCHAR" property="busContactPerson" />
    <result column="BUS_RISK_EMAIL" jdbcType="VARCHAR" property="busRiskEmail" />
    <result column="CLO_TAX_POINT" jdbcType="DECIMAL" property="cloTaxPoint" />
    <result column="CLO_INVOICE" jdbcType="DECIMAL" property="cloInvoice" />
    <result column="CLO_RECEIPT" jdbcType="DECIMAL" property="cloReceipt" />
    <result column="CLO_PAY_COMPANY" jdbcType="VARCHAR" property="cloPayCompany" />
    <result column="CLO_AGENT_COLINFO" jdbcType="VARCHAR" property="cloAgentColinfo" />
    <result column="BUS_STATUS" jdbcType="DECIMAL" property="busStatus" />
    <result column="CLO_REVIEW_STATUS" jdbcType="DECIMAL" property="cloReviewStatus" />
    <result column="C_TIME" jdbcType="TIMESTAMP" property="cTime" />
    <result column="C_UTIME" jdbcType="TIMESTAMP" property="cUtime" />
    <result column="C_USER" jdbcType="VARCHAR" property="cUser" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="AG_ZBH" jdbcType="VARCHAR" property="agZbh" />
    <result column="BUS_USE_ORGAN" jdbcType="VARCHAR" property="busUseOrgan" />
    <result column="BUS_SCOPE" jdbcType="VARCHAR" property="busScope" />
    <result column="DREDGE_S0" jdbcType="DECIMAL" property="dredgeS0" />
    <result column="BUS_LOGIN_NUM" jdbcType="VARCHAR" property="busLoginNum" />
    <result column="DEBIT_RATE_LOWER" jdbcType="VARCHAR" property="debitRateLower" />
    <result column="DEBIT_CAPPING" jdbcType="VARCHAR" property="debitCapping" />
    <result column="DEBIT_APPEAR_RATE" jdbcType="VARCHAR" property="debitAppearRate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, AGENT_ID, BUS_NUM, BUS_PLATFORM, BUS_TYPE, BUS_PARENT, BUS_RISK_PARENT, BUS_ACTIVATION_PARENT,
    BUS_REGION, BUS_SENT_DIRECTLY, BUS_DIRECT_CASHBACK, BUS_INDE_ASS, BUS_CONTACT, BUS_CONTACT_MOBILE,
    BUS_CONTACT_EMAIL, BUS_CONTACT_PERSON, BUS_RISK_EMAIL, CLO_TAX_POINT, CLO_INVOICE,
    CLO_RECEIPT, CLO_PAY_COMPANY, CLO_AGENT_COLINFO, BUS_STATUS, CLO_REVIEW_STATUS, C_TIME,
    C_UTIME, C_USER, STATUS, VERSION, AG_ZBH, BUS_USE_ORGAN, BUS_SCOPE, DREDGE_S0, BUS_LOGIN_NUM,
    DEBIT_RATE_LOWER, DEBIT_CAPPING, DEBIT_APPEAR_RATE
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentBusInfoExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from A_AGENT_BUSINFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from A_AGENT_BUSINFO
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentBusInfoExample">
    delete from A_AGENT_BUSINFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.agent.AgentBusInfo">
    insert into A_AGENT_BUSINFO (ID, AGENT_ID, BUS_NUM,
    BUS_PLATFORM, BUS_TYPE, BUS_PARENT,
    BUS_RISK_PARENT, BUS_ACTIVATION_PARENT, BUS_REGION,
    BUS_SENT_DIRECTLY, BUS_DIRECT_CASHBACK, BUS_INDE_ASS,
    BUS_CONTACT, BUS_CONTACT_MOBILE, BUS_CONTACT_EMAIL,
    BUS_CONTACT_PERSON, BUS_RISK_EMAIL, CLO_TAX_POINT,
    CLO_INVOICE, CLO_RECEIPT, CLO_PAY_COMPANY,
    CLO_AGENT_COLINFO, BUS_STATUS, CLO_REVIEW_STATUS,
    C_TIME, C_UTIME, C_USER,
    STATUS, VERSION, AG_ZBH,
    BUS_USE_ORGAN, BUS_SCOPE, DREDGE_S0,
    BUS_LOGIN_NUM, DEBIT_RATE_LOWER, DEBIT_CAPPING,
    DEBIT_APPEAR_RATE)
    values (#{id,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{busNum,jdbcType=VARCHAR},
    #{busPlatform,jdbcType=VARCHAR}, #{busType,jdbcType=VARCHAR}, #{busParent,jdbcType=VARCHAR},
    #{busRiskParent,jdbcType=VARCHAR}, #{busActivationParent,jdbcType=VARCHAR}, #{busRegion,jdbcType=VARCHAR},
    #{busSentDirectly,jdbcType=DECIMAL}, #{busDirectCashback,jdbcType=DECIMAL}, #{busIndeAss,jdbcType=DECIMAL},
    #{busContact,jdbcType=VARCHAR}, #{busContactMobile,jdbcType=VARCHAR}, #{busContactEmail,jdbcType=VARCHAR},
    #{busContactPerson,jdbcType=VARCHAR}, #{busRiskEmail,jdbcType=VARCHAR}, #{cloTaxPoint,jdbcType=DECIMAL},
    #{cloInvoice,jdbcType=DECIMAL}, #{cloReceipt,jdbcType=DECIMAL}, #{cloPayCompany,jdbcType=VARCHAR},
    #{cloAgentColinfo,jdbcType=VARCHAR}, #{busStatus,jdbcType=DECIMAL}, #{cloReviewStatus,jdbcType=DECIMAL},
    #{cTime,jdbcType=TIMESTAMP}, #{cUtime,jdbcType=TIMESTAMP}, #{cUser,jdbcType=VARCHAR},
    #{status,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL}, #{agZbh,jdbcType=VARCHAR},
    #{busUseOrgan,jdbcType=VARCHAR}, #{busScope,jdbcType=VARCHAR}, #{dredgeS0,jdbcType=DECIMAL},
    #{busLoginNum,jdbcType=VARCHAR}, #{debitRateLower,jdbcType=VARCHAR}, #{debitCapping,jdbcType=VARCHAR},
    #{debitAppearRate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.agent.AgentBusInfo">
    insert into A_AGENT_BUSINFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="busNum != null">
        BUS_NUM,
      </if>
      <if test="busPlatform != null">
        BUS_PLATFORM,
      </if>
      <if test="busType != null">
        BUS_TYPE,
      </if>
      <if test="busParent != null">
        BUS_PARENT,
      </if>
      <if test="busRiskParent != null">
        BUS_RISK_PARENT,
      </if>
      <if test="busActivationParent != null">
        BUS_ACTIVATION_PARENT,
      </if>
      <if test="busRegion != null">
        BUS_REGION,
      </if>
      <if test="busSentDirectly != null">
        BUS_SENT_DIRECTLY,
      </if>
      <if test="busDirectCashback != null">
        BUS_DIRECT_CASHBACK,
      </if>
      <if test="busIndeAss != null">
        BUS_INDE_ASS,
      </if>
      <if test="busContact != null">
        BUS_CONTACT,
      </if>
      <if test="busContactMobile != null">
        BUS_CONTACT_MOBILE,
      </if>
      <if test="busContactEmail != null">
        BUS_CONTACT_EMAIL,
      </if>
      <if test="busContactPerson != null">
        BUS_CONTACT_PERSON,
      </if>
      <if test="busRiskEmail != null">
        BUS_RISK_EMAIL,
      </if>
      <if test="cloTaxPoint != null">
        CLO_TAX_POINT,
      </if>
      <if test="cloInvoice != null">
        CLO_INVOICE,
      </if>
      <if test="cloReceipt != null">
        CLO_RECEIPT,
      </if>
      <if test="cloPayCompany != null">
        CLO_PAY_COMPANY,
      </if>
      <if test="cloAgentColinfo != null">
        CLO_AGENT_COLINFO,
      </if>
      <if test="busStatus != null">
        BUS_STATUS,
      </if>
      <if test="cloReviewStatus != null">
        CLO_REVIEW_STATUS,
      </if>
      <if test="cTime != null">
        C_TIME,
      </if>
      <if test="cUtime != null">
        C_UTIME,
      </if>
      <if test="cUser != null">
        C_USER,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="agZbh != null">
        AG_ZBH,
      </if>
      <if test="busUseOrgan != null">
        BUS_USE_ORGAN,
      </if>
      <if test="busScope != null">
        BUS_SCOPE,
      </if>
      <if test="dredgeS0 != null">
        DREDGE_S0,
      </if>
      <if test="busLoginNum != null">
        BUS_LOGIN_NUM,
      </if>
      <if test="debitRateLower != null">
        DEBIT_RATE_LOWER,
      </if>
      <if test="debitCapping != null">
        DEBIT_CAPPING,
      </if>
      <if test="debitAppearRate != null">
        DEBIT_APPEAR_RATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="busNum != null">
        #{busNum,jdbcType=VARCHAR},
      </if>
      <if test="busPlatform != null">
        #{busPlatform,jdbcType=VARCHAR},
      </if>
      <if test="busType != null">
        #{busType,jdbcType=VARCHAR},
      </if>
      <if test="busParent != null">
        #{busParent,jdbcType=VARCHAR},
      </if>
      <if test="busRiskParent != null">
        #{busRiskParent,jdbcType=VARCHAR},
      </if>
      <if test="busActivationParent != null">
        #{busActivationParent,jdbcType=VARCHAR},
      </if>
      <if test="busRegion != null">
        #{busRegion,jdbcType=VARCHAR},
      </if>
      <if test="busSentDirectly != null">
        #{busSentDirectly,jdbcType=DECIMAL},
      </if>
      <if test="busDirectCashback != null">
        #{busDirectCashback,jdbcType=DECIMAL},
      </if>
      <if test="busIndeAss != null">
        #{busIndeAss,jdbcType=DECIMAL},
      </if>
      <if test="busContact != null">
        #{busContact,jdbcType=VARCHAR},
      </if>
      <if test="busContactMobile != null">
        #{busContactMobile,jdbcType=VARCHAR},
      </if>
      <if test="busContactEmail != null">
        #{busContactEmail,jdbcType=VARCHAR},
      </if>
      <if test="busContactPerson != null">
        #{busContactPerson,jdbcType=VARCHAR},
      </if>
      <if test="busRiskEmail != null">
        #{busRiskEmail,jdbcType=VARCHAR},
      </if>
      <if test="cloTaxPoint != null">
        #{cloTaxPoint,jdbcType=DECIMAL},
      </if>
      <if test="cloInvoice != null">
        #{cloInvoice,jdbcType=DECIMAL},
      </if>
      <if test="cloReceipt != null">
        #{cloReceipt,jdbcType=DECIMAL},
      </if>
      <if test="cloPayCompany != null">
        #{cloPayCompany,jdbcType=VARCHAR},
      </if>
      <if test="cloAgentColinfo != null">
        #{cloAgentColinfo,jdbcType=VARCHAR},
      </if>
      <if test="busStatus != null">
        #{busStatus,jdbcType=DECIMAL},
      </if>
      <if test="cloReviewStatus != null">
        #{cloReviewStatus,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUtime != null">
        #{cUtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="agZbh != null">
        #{agZbh,jdbcType=VARCHAR},
      </if>
      <if test="busUseOrgan != null">
        #{busUseOrgan,jdbcType=VARCHAR},
      </if>
      <if test="busScope != null">
        #{busScope,jdbcType=VARCHAR},
      </if>
      <if test="dredgeS0 != null">
        #{dredgeS0,jdbcType=DECIMAL},
      </if>
      <if test="busLoginNum != null">
        #{busLoginNum,jdbcType=VARCHAR},
      </if>
      <if test="debitRateLower != null">
        #{debitRateLower,jdbcType=VARCHAR},
      </if>
      <if test="debitCapping != null">
        #{debitCapping,jdbcType=VARCHAR},
      </if>
      <if test="debitAppearRate != null">
        #{debitAppearRate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentBusInfoExample" resultType="java.lang.Long">
    select count(*) from A_AGENT_BUSINFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.agent.AgentBusInfo">
    update A_AGENT_BUSINFO
    <set>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="busNum != null">
        BUS_NUM = #{busNum,jdbcType=VARCHAR},
      </if>
      <if test="busPlatform != null">
        BUS_PLATFORM = #{busPlatform,jdbcType=VARCHAR},
      </if>
      <if test="busType != null">
        BUS_TYPE = #{busType,jdbcType=VARCHAR},
      </if>
      <if test="busParent != null">
        BUS_PARENT = #{busParent,jdbcType=VARCHAR},
      </if>
      <if test="busRiskParent != null">
        BUS_RISK_PARENT = #{busRiskParent,jdbcType=VARCHAR},
      </if>
      <if test="busActivationParent != null">
        BUS_ACTIVATION_PARENT = #{busActivationParent,jdbcType=VARCHAR},
      </if>
      <if test="busRegion != null">
        BUS_REGION = #{busRegion,jdbcType=VARCHAR},
      </if>
      <if test="busSentDirectly != null">
        BUS_SENT_DIRECTLY = #{busSentDirectly,jdbcType=DECIMAL},
      </if>
      <if test="busDirectCashback != null">
        BUS_DIRECT_CASHBACK = #{busDirectCashback,jdbcType=DECIMAL},
      </if>
      <if test="busIndeAss != null">
        BUS_INDE_ASS = #{busIndeAss,jdbcType=DECIMAL},
      </if>
      <if test="busContact != null">
        BUS_CONTACT = #{busContact,jdbcType=VARCHAR},
      </if>
      <if test="busContactMobile != null">
        BUS_CONTACT_MOBILE = #{busContactMobile,jdbcType=VARCHAR},
      </if>
      <if test="busContactEmail != null">
        BUS_CONTACT_EMAIL = #{busContactEmail,jdbcType=VARCHAR},
      </if>
      <if test="busContactPerson != null">
        BUS_CONTACT_PERSON = #{busContactPerson,jdbcType=VARCHAR},
      </if>
      <if test="busRiskEmail != null">
        BUS_RISK_EMAIL = #{busRiskEmail,jdbcType=VARCHAR},
      </if>
      <if test="cloTaxPoint != null">
        CLO_TAX_POINT = #{cloTaxPoint,jdbcType=DECIMAL},
      </if>
      <if test="cloInvoice != null">
        CLO_INVOICE = #{cloInvoice,jdbcType=DECIMAL},
      </if>
      <if test="cloReceipt != null">
        CLO_RECEIPT = #{cloReceipt,jdbcType=DECIMAL},
      </if>
      <if test="cloPayCompany != null">
        CLO_PAY_COMPANY = #{cloPayCompany,jdbcType=VARCHAR},
      </if>
      <if test="cloAgentColinfo != null">
        CLO_AGENT_COLINFO = #{cloAgentColinfo,jdbcType=VARCHAR},
      </if>
      <if test="busStatus != null">
        BUS_STATUS = #{busStatus,jdbcType=DECIMAL},
      </if>
      <if test="cloReviewStatus != null">
        CLO_REVIEW_STATUS = #{cloReviewStatus,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUtime != null">
        C_UTIME = #{cUtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        C_USER = #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        VERSION = VERSION + 1,
      </if>
      <if test="agZbh != null">
        AG_ZBH = #{agZbh,jdbcType=VARCHAR},
      </if>
      <if test="busUseOrgan != null">
        BUS_USE_ORGAN = #{busUseOrgan,jdbcType=VARCHAR},
      </if>
      <if test="busScope != null">
        BUS_SCOPE = #{busScope,jdbcType=VARCHAR},
      </if>
      <if test="dredgeS0 != null">
        DREDGE_S0 = #{dredgeS0,jdbcType=DECIMAL},
      </if>
      <if test="busLoginNum != null">
        BUS_LOGIN_NUM = #{busLoginNum,jdbcType=VARCHAR},
      </if>
      <if test="debitRateLower != null">
        DEBIT_RATE_LOWER = #{debitRateLower,jdbcType=VARCHAR},
      </if>
      <if test="debitCapping != null">
        DEBIT_CAPPING = #{debitCapping,jdbcType=VARCHAR},
      </if>
      <if test="debitAppearRate != null">
        DEBIT_APPEAR_RATE = #{debitAppearRate,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR} and VERSION = #{version,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.agent.AgentBusInfo">
    update A_AGENT_BUSINFO
    set AGENT_ID = #{agentId,jdbcType=VARCHAR},
    BUS_NUM = #{busNum,jdbcType=VARCHAR},
    BUS_PLATFORM = #{busPlatform,jdbcType=VARCHAR},
    BUS_TYPE = #{busType,jdbcType=VARCHAR},
    BUS_PARENT = #{busParent,jdbcType=VARCHAR},
    BUS_RISK_PARENT = #{busRiskParent,jdbcType=VARCHAR},
    BUS_ACTIVATION_PARENT = #{busActivationParent,jdbcType=VARCHAR},
    BUS_REGION = #{busRegion,jdbcType=VARCHAR},
    BUS_SENT_DIRECTLY = #{busSentDirectly,jdbcType=DECIMAL},
    BUS_DIRECT_CASHBACK = #{busDirectCashback,jdbcType=DECIMAL},
    BUS_INDE_ASS = #{busIndeAss,jdbcType=DECIMAL},
    BUS_CONTACT = #{busContact,jdbcType=VARCHAR},
    BUS_CONTACT_MOBILE = #{busContactMobile,jdbcType=VARCHAR},
    BUS_CONTACT_EMAIL = #{busContactEmail,jdbcType=VARCHAR},
    BUS_CONTACT_PERSON = #{busContactPerson,jdbcType=VARCHAR},
    BUS_RISK_EMAIL = #{busRiskEmail,jdbcType=VARCHAR},
    CLO_TAX_POINT = #{cloTaxPoint,jdbcType=DECIMAL},
    CLO_INVOICE = #{cloInvoice,jdbcType=DECIMAL},
    CLO_RECEIPT = #{cloReceipt,jdbcType=DECIMAL},
    CLO_PAY_COMPANY = #{cloPayCompany,jdbcType=VARCHAR},
    CLO_AGENT_COLINFO = #{cloAgentColinfo,jdbcType=VARCHAR},
    BUS_STATUS = #{busStatus,jdbcType=DECIMAL},
    CLO_REVIEW_STATUS = #{cloReviewStatus,jdbcType=DECIMAL},
    C_TIME = #{cTime,jdbcType=TIMESTAMP},
    C_UTIME = #{cUtime,jdbcType=TIMESTAMP},
    C_USER = #{cUser,jdbcType=VARCHAR},
    STATUS = #{status,jdbcType=DECIMAL},
    VERSION = VERSION + 1,
    AG_ZBH = #{agZbh,jdbcType=VARCHAR},
    BUS_USE_ORGAN = #{busUseOrgan,jdbcType=VARCHAR},
    BUS_SCOPE = #{busScope,jdbcType=VARCHAR},
    DREDGE_S0 = #{dredgeS0,jdbcType=DECIMAL},
    BUS_LOGIN_NUM = #{busLoginNum,jdbcType=VARCHAR},
    DEBIT_RATE_LOWER = #{debitRateLower,jdbcType=VARCHAR},
    DEBIT_CAPPING = #{debitCapping,jdbcType=VARCHAR},
    DEBIT_APPEAR_RATE = #{debitAppearRate,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR} and VERSION = #{version,jdbcType=DECIMAL}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <select id="queryAgentBusList" parameterType="map" resultType="map">
      select * from (
              select a.id, a.bus_num, a.bus_platform,a.agent_id,a.bus_status,b.ag_name,b.id as agnetid,b.ag_uniq_num,a.clo_review_status,b.ag_status ,rownum as row_count
              from a_agent_businfo a left join a_agent b on a.agent_id = b.id
              <where>
                <if test="par.busPlatform!=null and par.busPlatform!='' and par.busPlatform!='null'">and a.bus_platform = #{par.busPlatform}</if>
                <if test="par.search_name!=null and par.search_name!=''"> and  b.ag_name like CONCAT(CONCAT('%',#{par.search_name}),'%')</if>
                <if test="par.clo_review_status!=null and par.clo_review_status!=''"> and a.clo_review_status = #{par.clo_review_status}</if>
                <if test="par.ag_status!=null and par.ag_status!=''">and b.ag_status = #{par.ag_status}</if>
                <if test="par.c_incom_status!=null and par.c_incom_status!=''">and b.c_incom_status  = #{par.c_incom_status}</if>
                <if test="par.bus_num!=null and par.bus_num!=''">and a.bus_num = #{par.bus_num}</if>
                <if test="1==1">and a.status = 1</if>
                <if test="1==1">and b.status = 1</if>
                <if test="par.page!=null">and rownum &lt;= #{par.page.from} + #{par.page.size}</if>
              </where>
              order by a.c_time desc
            ) datalist
            <where>
              <if test="par.page!=null"> and  datalist.row_count &gt; #{par.page.from}</if>
            </where>
  </select>
  <select id="queryAgentBusListCount" parameterType="map" resultType="int">
      select
        count(a.id)
      from a_agent_businfo a left join a_agent b on a.agent_id = b.id
      <where>
        <if test="par.busPlatform!=null and par.busPlatform!=''">and a.bus_platform = #{par.busPlatform}</if>
        <if test="par.search_name!=null and par.search_name!=''"> and  b.ag_name like CONCAT(CONCAT('%',#{par.search_name}),'%')</if>
        <if test="par.clo_review_status!=null and par.clo_review_status!=''"> and a.clo_review_status = #{par.clo_review_status}</if>
        <if test="par.ag_status!=null and par.ag_status!=''">and b.ag_status = #{par.ag_status}</if>
        <if test="par.c_incom_status!=null and par.c_incom_status!=''">and b.c_incom_status  = #{par.c_incom_status}</if>
        <if test="par.bus_num!=null and par.bus_num!=''">and a.bus_num = #{par.bus_num}</if>
        <if test="1==1">and a.status = 1</if>
        <if test="1==1">and b.status = 1</if>
      </where>
  </select>

  <select id="queryBusinessPlatformList" parameterType="map" resultType="map">
    <include refid="OracleDialectPrefix" />
    (
    select
    b.id,b.agent_id,b.bus_num,b.bus_platform,b.bus_type,a.ag_uniq_num,a.ag_name,a.ag_nature,a.ag_head,
    a.ag_head_mobile,b.bus_status,b.status,b.clo_review_status,a.ag_status,b.c_time,b.clo_pay_company,b.bus_Inde_ass,d.ag_name as risk_parent,e.name as ag_doc_pro
    from A_agent_businfo b
    left join A_agent a on b.agent_id = a.id
    left join A_agent_businfo c on c.id = b.bus_risk_parent
    left join A_agent d on d.id = c.agent_id
    left join c_organization e on e.id = a.ag_doc_pro
    where a.id=b.agent_id
    and a.ag_status = #{reqMap.agStatus}
    <if test="reqMap.agName != null and reqMap.agName != '' " >
      and a.ag_name  like CONCAT(CONCAT('%',#{reqMap.agName}),'%')
    </if>
    <if test="reqMap.agUniqNum != null and reqMap.agUniqNum != '' " >
      and a.ag_uniq_num = #{reqMap.agUniqNum}
    </if>
    <if test="reqMap.busNum != null and reqMap.busNum != '' " >
      and b.bus_num = #{reqMap.busNum}
    </if>
    <if test="reqMap.busPlatform != null and reqMap.busPlatform != '' " >
      and b.bus_platform = #{reqMap.busPlatform}
    </if>
    <if test="reqMap.cloReviewStatus != null and reqMap.cloReviewStatus != '' " >
      and b.clo_review_status = #{reqMap.cloReviewStatus}
    </if>
    <if test="reqMap.id != null and reqMap.id != '' " >
      and b.id = #{reqMap.id}
    </if>
    <if test="reqMap.busType != null and reqMap.busType != '' " >
      and b.bus_type = #{reqMap.busType}
    </if>
    <if test="reqMap.orgId!=null and reqMap.orgId!=''">
      and (a.AG_DOC_PRO = #{reqMap.orgId} or a.AG_DOC_DISTRICT = #{reqMap.orgId})
    </if>
    <if test="reqMap.isZpos != 'all'" >
      <if test="reqMap.isZpos != null" >
        and b.bus_platform = #{reqMap.platForm}
      </if>
      <if test="reqMap.isZpos == null" >
        and b.bus_platform != #{reqMap.platForm}
      </if>
    </if>
    and b.status = #{reqMap.status}
    UNION
    select
    b.id,b.agent_id,b.bus_num,b.bus_platform,b.bus_type,a.ag_uniq_num,a.ag_name,a.ag_nature,a.ag_head,
    a.ag_head_mobile,b.bus_status,b.status,b.clo_review_status,a.ag_status,b.c_time,b.clo_pay_company,b.bus_Inde_ass,d.ag_name as risk_parent,e.name as ag_doc_pro
    from A_agent_businfo b
    left join A_agent a on b.agent_id = a.id
    left join A_agent_businfo c on c.id = b.bus_risk_parent
    left join A_agent d on d.id = c.agent_id
    left join c_organization e on e.id = a.ag_doc_pro
    <where> a.id=b.agent_id
    and a.ag_status = #{reqMap.agStatus}
    <if test="reqMap.agName != null and reqMap.agName != '' " >
      and a.ag_name  like CONCAT(CONCAT('%',#{reqMap.agName}),'%')
    </if>
    <if test="reqMap.agUniqNum != null and reqMap.agUniqNum != '' " >
      and a.ag_uniq_num = #{reqMap.agUniqNum}
    </if>
    <if test="reqMap.busNum != null and reqMap.busNum != '' " >
      and b.bus_num = #{reqMap.busNum}
    </if>
    <if test="reqMap.busPlatform != null and reqMap.busPlatform != '' " >
      and b.bus_platform = #{reqMap.busPlatform}
    </if>
    <if test="reqMap.cloReviewStatus != null and reqMap.cloReviewStatus != '' " >
      and b.clo_review_status = #{reqMap.cloReviewStatus}
    </if>
    <if test="reqMap.id != null and reqMap.id != '' " >
      and b.id = #{reqMap.id}
    </if>
      <if test="reqMap.busType != null and reqMap.busType != '' " >
        and b.bus_type = #{reqMap.busType}
      </if>
    <if test="reqMap.userId!=null and reqMap.userId!=''">
      and a.C_USER = #{reqMap.userId}
    </if>
    <if test="reqMap.isZpos != 'all'" >
      <if test="reqMap.isZpos != null" >
        and b.bus_platform = #{reqMap.platForm}
      </if>
      <if test="reqMap.isZpos == null" >
        and b.bus_platform != #{reqMap.platForm}
      </if>
    </if>
    and b.status = #{reqMap.status}
    </where>
    )
    order by c_time desc
    <include refid="OracleDialectSuffix" />
  </select>


  <select id="queryBusinessPlatformCount" parameterType="map" resultType="int">
    select count(*) from(
    select
    b.id
    from A_agent_businfo b
    left join A_agent a on b.agent_id = a.id
    left join A_agent_businfo c on c.id = b.bus_risk_parent
    left join A_agent d on d.id = c.agent_id
    left join c_organization e on e.id = a.ag_doc_pro
    where a.id=b.agent_id
    and a.ag_status = #{reqMap.agStatus}
    <if test="reqMap.agName != null and reqMap.agName != '' " >
      and a.ag_name  like CONCAT(CONCAT('%',#{reqMap.agName}),'%')
    </if>
    <if test="reqMap.agUniqNum != null and reqMap.agUniqNum != '' " >
      and a.ag_uniq_num = #{reqMap.agUniqNum}
    </if>
    <if test="reqMap.busNum != null and reqMap.busNum != '' " >
      and b.bus_num = #{reqMap.busNum}
    </if>
    <if test="reqMap.busPlatform != null and reqMap.busPlatform != '' " >
      and b.bus_platform = #{reqMap.busPlatform}
    </if>
    <if test="reqMap.cloReviewStatus != null and reqMap.cloReviewStatus != '' " >
      and b.clo_review_status = #{reqMap.cloReviewStatus}
    </if>
    <if test="reqMap.id != null and reqMap.id != '' " >
      and b.id = #{reqMap.id}
    </if>
    <if test="reqMap.busType != null and reqMap.busType != '' " >
      and b.bus_type = #{reqMap.busType}
    </if>
    <if test="reqMap.orgId!=null and reqMap.orgId!=''">
      and (a.AG_DOC_PRO = #{reqMap.orgId} or a.AG_DOC_DISTRICT = #{reqMap.orgId})
    </if>
    <if test="reqMap.isZpos != 'all'" >
      <if test="reqMap.isZpos != null" >
        and b.bus_platform = #{reqMap.platForm}
      </if>
      <if test="reqMap.isZpos == null" >
        and b.bus_platform != #{reqMap.platForm}
      </if>
    </if>
    and b.status = #{reqMap.status}
    UNION
    select
    b.id
    from A_agent_businfo b
    left join A_agent a on b.agent_id = a.id
    left join A_agent_businfo c on c.id = b.bus_risk_parent
    left join A_agent d on d.id = c.agent_id
    left join c_organization e on e.id = a.ag_doc_pro
    <where> a.id=b.agent_id
      and a.ag_status = #{reqMap.agStatus}
      <if test="reqMap.agName != null and reqMap.agName != '' " >
        and a.ag_name  like CONCAT(CONCAT('%',#{reqMap.agName}),'%')
      </if>
      <if test="reqMap.agUniqNum != null and reqMap.agUniqNum != '' " >
        and a.ag_uniq_num = #{reqMap.agUniqNum}
      </if>
      <if test="reqMap.busNum != null and reqMap.busNum != '' " >
        and b.bus_num = #{reqMap.busNum}
      </if>
      <if test="reqMap.busPlatform != null and reqMap.busPlatform != '' " >
        and b.bus_platform = #{reqMap.busPlatform}
      </if>
      <if test="reqMap.cloReviewStatus != null and reqMap.cloReviewStatus != '' " >
        and b.clo_review_status = #{reqMap.cloReviewStatus}
      </if>
      <if test="reqMap.id != null and reqMap.id != '' " >
        and b.id = #{reqMap.id}
      </if>
      <if test="reqMap.busType != null and reqMap.busType != '' " >
        and b.bus_type = #{reqMap.busType}
      </if>
      <if test="reqMap.userId!=null and reqMap.userId!=''">
        and a.C_USER = #{reqMap.userId}
      </if>
      <if test="reqMap.isZpos != 'all'" >
        <if test="reqMap.isZpos != null" >
          and b.bus_platform = #{reqMap.platForm}
        </if>
        <if test="reqMap.isZpos == null" >
          and b.bus_platform != #{reqMap.platForm}
        </if>
      </if>
      and b.status = #{reqMap.status}
    </where>
    )
  </select>


  <select id="businessQuery" parameterType="string" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from A_AGENT_BUSINFO
    where AGENT_ID=#{id} and STATUS = 1
  </select>


  <sql id="agentAll" >
    agentBus.BUS_ACTIVATION_PARENT,
    agentBus.BUS_REGION,agentBus.BUS_SENT_DIRECTLY,agentBus.BUS_DIRECT_CASHBACK,agentBus.BUS_INDE_ASS,agentBus.BUS_CONTACT,agentBus.BUS_CONTACT_MOBILE,
    agentBus.BUS_CONTACT_EMAIL,agentBus.BUS_CONTACT_PERSON,agentBus.BUS_RISK_EMAIL,
    agentBus.CLO_TAX_POINT,agentBus.CLO_INVOICE,agentBus.CLO_RECEIPT,agentBus.CLO_PAY_COMPANY,agentBus.CLO_AGENT_COLINFO,agentBus.BUS_STATUS,
    agentBus.CLO_REVIEW_STATUS,agentBus.C_TIME,agentBus.C_UTIME,agentBus.C_USER,agentBus.STATUS as agentBusStatus,agent.AG_UNIQ_NUM,agent.AG_NAME,agent.AG_NATURE,agent.AG_CAPITAL,agent.AG_BUS_LIC,agent.AG_BUS_LICB,agent.AG_BUS_LICE
    ,agent.AG_LEGAL,agent.AG_LEGAL_CERTYPE,agent.AG_LEGAL_CERNUM,agent.AG_LEGAL_MOBILE,agent.AG_HEAD,agent.AG_HEAD_MOBILE,agent.AG_REG_ADD
    ,agent.AG_BUS_SCOPE,agent.CLO_TAX_POINT,agent.AG_STATUS,agent.AG_DOC_PRO,agent.AG_DOC_DISTRICT,agent.AG_REMARK,agent.C_INCOM_TIME
    ,agent.C_TIME,agent.C_UTIME,agent.C_INCOM_STATUS,agent.C_USER,agent.AG_ZBH,agent.STATUS AS agentStatus
  </sql>
  <select id="queryAgentName" parameterType="string" resultType="map">
  SELECT <include refid="agentAll"/> from A_agent_businfo agentBus left join A_agent agent on agentBus.agent_id= agent.id where 1=1 and agentBus.id=#{id}
  </select>

  <select id="queryBusInfoAndRemit" parameterType="string" resultType="map">
      select
        bus.*,pc.id as payComanyId,pc.com_name,pc.c_time,pc.c_utime,pc.remark,pc.status
      from
      A_agent_businfo bus
      left join  A_pay_comp pc on bus.clo_pay_company = pc.id
      where agent_id = #{agentId}
  </select>


  <select id="queryBusInfoAndRemitByBusId" parameterType="string" resultType="map">
    select
      bus.*,pc.id as payComanyId,pc.com_name,pc.c_time,pc.c_utime,pc.remark,pc.status
    from
    A_agent_businfo bus
    left join A_pay_comp pc on bus.clo_pay_company = pc.id
    where   bus.id = #{id}
  </select>

  <select id="queryById" parameterType="string" resultType="map">
    select
    bus.*,pc.id as payComanyId,pc.com_name,pc.c_time,pc.c_utime,pc.remark,pc.status
    from
    A_agent_businfo bus
    left join  A_pay_comp pc on bus.clo_pay_company = pc.id
    where bus.id = #{id}
  </select>


  <select id="queryTreeByBusInfo" parameterType="map" resultType="map">
    select
    A.ID,A.AGENT_ID,A.BUS_NUM,A.BUS_PLATFORM,A.BUS_TYPE,A.BUS_PARENT,
    B.AG_UNIQ_NUM,B.AG_NAME,C.PLATFORM_NAME,D.D_ITEMNAME,(C.PLATFORM_NAME) as FIELDSHOW
    from
    a_agent_businfo a
    left join a_agent b on a.agent_id=b.id
    left join a_platform c on c.platform_num = a.bus_platform
    left join d_dict d on d.d_group='AGENT' AND d.d_artifact = 'BUS_TYPE' and d.d_itemvalue = a.bus_type
      <where>
         a.status=1 and b.status=1 and (a.bus_status=1 or a.bus_status=2 <if test="busStatus!=null and busStatus!=''">  or a.bus_status=0 </if> )
        <if test="id!=null and id!=''"> and a.id=#{id}</if>
        <if test="busPlatform!=null and busPlatform!=''">and a.bus_platform =#{busPlatform}</if>
        <if test="agentId!=null and agentId!=''">and a.agent_id = #{agentId}</if>
        <if test="busParent!=null and busParent!=''">and a.bus_parent= #{busParent}</if>
      </where>
  </select>


  <select id="excelAgent" parameterType="map" resultMap="BusinessOutVo">
    (select agent.AG_UNIQ_NUM, agent.AG_NAME, agent.AG_HEAD,
    agent.AG_HEAD_MOBILE, agent.AG_REG_ADD
    ,bus.bus_platform,bus.bus_num,bus.bus_type,bus.bus_Inde_ass,
    bus.bus_scope,bus.bus_region,bus.bus_risk_email,platform.PLATFORM_NAME,
    a1.AG_NAME||businfo_1.id as busParent,
    busRiskParentbusAgent.ag_name as busRiskParent,busActivationParentbusAgent.ag_name as busActivationParent
    from A_AGENT agent
    left join A_agent_businfo bus on agent.id=bus.AGENT_ID
    left join A_PLATFORM  platform on platform.PLATFORM_NUM=bus.BUS_PLATFORM
    left join a_agent_businfo businfo_1     on businfo_1.id=bus.bus_parent
    left join a_agent a1 on a1.id=businfo_1.agent_id
    left join A_agent_businfo busRiskParentbus on bus.BUS_RISK_PARENT = busRiskParentbus.id
    left join A_AGENT busRiskParentbusAgent on busRiskParentbusAgent.id = busRiskParentbus.AGENT_ID
    left join A_agent_businfo busActivationParentbus on bus.BUS_ACTIVATION_PARENT = busActivationParentbus.id
    left join A_AGENT busActivationParentbusAgent on busActivationParentbusAgent.id = busActivationParentbus.AGENT_ID
    where 1=1 and agent.ag_status = #{reqMap.agStatus}
    <if test="reqMap.agName != null and reqMap.agName != '' ">and agent.ag_name like
      CONCAT(CONCAT('%',#{reqMap.agName}),'%')
    </if>
      <if test="reqMap.agUniqNum != null and reqMap.agUniqNum != '' ">and agent.ag_uniq_num = #{reqMap.agUniqNum}
      </if>
      <if test="reqMap.busNum != null and reqMap.busNum != '' " >and bus.bus_num = #{reqMap.busNum}
      </if>
      <if test="reqMap.busPlatform != null and reqMap.busPlatform != '' " >and bus.bus_platform =
        #{reqMap.busPlatform}
      </if>
      <if test="reqMap.cloReviewStatus != null and reqMap.cloReviewStatus != '' " >and bus.clo_review_status =
        #{reqMap.cloReviewStatus}
      </if>
      <if test="reqMap.id != null and reqMap.id != '' " >and bus.id = #{reqMap.id}
      </if>
      <if test="reqMap.orgId!=null and reqMap.orgId!=''">
      and (agent.AG_DOC_PRO = #{reqMap.orgId} or agent.AG_DOC_DISTRICT = #{reqMap.orgId})
      </if>
      <if test="reqMap.isZpos != 'null'" >
        and bus.bus_platform = #{reqMap.platForm}
      </if>
      <if test="reqMap.isZpos == 'null'" >
        and bus.bus_platform != #{reqMap.platForm}
      </if>
    and bus.status = #{reqMap.status}
    UNION
    select agent.AG_UNIQ_NUM, agent.AG_NAME, agent.AG_HEAD,
    agent.AG_HEAD_MOBILE, agent.AG_REG_ADD
    ,bus.bus_platform,bus.bus_num,bus.bus_type,bus.bus_Inde_ass,
    bus.bus_scope,bus.bus_region,bus.bus_risk_email,platform.PLATFORM_NAME,
    a1.AG_NAME||businfo_1.id as busParent,
    busRiskParentbusAgent.ag_name as busRiskParent,busActivationParentbusAgent.ag_name as busActivationParent
    from A_AGENT agent
    left join A_agent_businfo bus on agent.id=bus.AGENT_ID
    left join A_PLATFORM  platform on platform.PLATFORM_NUM=bus.BUS_PLATFORM
    left join a_agent_businfo businfo_1     on businfo_1.id=bus.bus_parent
    left join a_agent a1 on a1.id=businfo_1.agent_id
    left join A_agent_businfo busRiskParentbus on bus.BUS_RISK_PARENT = busRiskParentbus.id
    left join A_AGENT busRiskParentbusAgent on busRiskParentbusAgent.id = busRiskParentbus.AGENT_ID
    left join A_agent_businfo busActivationParentbus on bus.BUS_ACTIVATION_PARENT = busActivationParentbus.id
    left join A_AGENT busActivationParentbusAgent on busActivationParentbusAgent.id = busActivationParentbus.AGENT_ID
    where 1=1 and agent.ag_status = #{reqMap.agStatus}
    <if test="reqMap.agName != null and reqMap.agName != '' " >
      and agent.ag_name like CONCAT(CONCAT('%',#{reqMap.agName}),'%')
    </if>
    <if test="reqMap.agUniqNum != null and reqMap.agUniqNum != '' " >
      and agent.ag_uniq_num = #{reqMap.agUniqNum}
    </if>
    <if test="reqMap.busNum != null and reqMap.busNum != '' " >
      and bus.bus_num = #{reqMap.busNum}
    </if>
    <if test="reqMap.busPlatform != null and reqMap.busPlatform != '' " >
      and bus.bus_platform = #{reqMap.busPlatform}
    </if>
    <if test="reqMap.cloReviewStatus != null and reqMap.cloReviewStatus != '' " >
      and bus.clo_review_status = #{reqMap.cloReviewStatus}
    </if>
    <if test="reqMap.id != null and reqMap.id != '' " >
      and bus.id = #{reqMap.id}
    </if>
    <if test="reqMap.userId!=null and reqMap.userId!=''">
      and agent.C_USER = #{reqMap.userId}
    </if>
    <if test="reqMap.isZpos != 'null'" >
      and bus.bus_platform = #{reqMap.platForm}
    </if>
    <if test="reqMap.isZpos == 'null'" >
      and bus.bus_platform != #{reqMap.platForm}
    </if>
    and bus.status = #{reqMap.status}
   )
  </select>
  <resultMap id="BusinessOutVo" type="com.ryx.credit.pojo.admin.vo.BusinessOutVo">
    <id column="ID" property="id" jdbcType="VARCHAR"/>
    <result column="AG_UNIQ_NUM" property="agUniqNum" jdbcType="VARCHAR"/>
    <result column="AG_NAME" property="agName" jdbcType="VARCHAR"/>
    <result column="AG_HEAD" property="agHead" jdbcType="VARCHAR"/>
    <result column="AG_HEAD_MOBILE" property="agHeadMobile" jdbcType="VARCHAR"/>
    <result column="AG_REG_ADD" property="agRegAdd" jdbcType="VARCHAR"/>

    <result column="BUS_NUM" property="busNum" jdbcType="VARCHAR"/>
    <result column="BUS_PLATFORM" property="busPlatform" jdbcType="VARCHAR"/>
    <result column="PLATFORM_NAME" property="platformName" jdbcType="VARCHAR"/>
    <result column="BUS_TYPE" property="busType" jdbcType="VARCHAR"/>
    <result column="BUS_PARENT" property="busParent" jdbcType="VARCHAR"/>
    <result column="BUS_RISK_PARENT" property="busRiskParent" jdbcType="VARCHAR"/>
    <result column="BUS_ACTIVATION_PARENT" property="busActivationParent" jdbcType="VARCHAR"/>
    <result column="BUS_REGION" property="busRegion" jdbcType="VARCHAR"/>
    <result column="BUS_INDE_ASS" property="busIndeAss" jdbcType="VARCHAR"/>
    <result column="BUS_RISK_EMAIL" property="busRiskEmail" jdbcType="VARCHAR"/>
    <result column="BUS_SCOPE" property="busScope" jdbcType="VARCHAR"/>
  </resultMap>

  <!--查询业务编号和代理商信息-->
  <select id="queryAgentNameByBusId" resultType="map">
    select a.id,a.agent_id,a.bus_num,b.ag_name,b.ag_uniq_num
    from a_agent_businfo a
      left join a_agent b on b.id=a.agent_id
    where a.status=1 and b.status=1
  </select>


  <select id="queryByBusNum" parameterType="java.lang.String" resultType="map">
      select
        a.ID, a.AGENT_ID,a.BUS_NUM, a.BUS_PLATFORM, a.BUS_TYPE, a.BUS_PARENT, a.BUS_RISK_PARENT, a.BUS_ACTIVATION_PARENT,
        a.BUS_REGION, a.BUS_SENT_DIRECTLY, a.BUS_DIRECT_CASHBACK, a.BUS_INDE_ASS, a.BUS_CONTACT, a.BUS_CONTACT_MOBILE,
        a.BUS_CONTACT_EMAIL, a.BUS_CONTACT_PERSON, a.BUS_RISK_EMAIL, a.CLO_TAX_POINT, a.CLO_INVOICE,
        a.CLO_RECEIPT, a.CLO_PAY_COMPANY, a.CLO_AGENT_COLINFO, a.BUS_STATUS, a.CLO_REVIEW_STATUS, a.C_TIME,
        a.C_UTIME, a.C_USER, a.STATUS, a.VERSION, a.AG_ZBH, a.BUS_USE_ORGAN, a.BUS_SCOPE, a.DREDGE_S0, a.BUS_LOGIN_NUM,
        b.AG_NAME
      from  a_agent b,a_agent_businfo a
      <where>
         b.id = a.agent_id and
         a.bus_num = #{busNum}
      </where>
  </select>
  <!--根据代理商id查询业务类型-->
  <select id="selectByAgenId" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from A_AGENT_BUSINFO
    where AGENT_ID=#{agentId} and STATUS = 1
  </select>


  <select id="queryBusInfoParent" resultType="map" parameterType="map">
    select
    a.id as aid,a.agent_id as aagentid,aa.ag_name as aagentname,a.bus_num as abusnum,a.bus_platform as abusplatform,a.bus_type as abustype,a.bus_status as abusstatus,
    b.id as bid,b.agent_id as bagentid,bb.ag_name as bagentname,b.bus_num as bbusnum,b.bus_platform as bbusplatform,b.bus_type as bbustype,b.bus_status as bbusstatus,
    c.id as cid,c.agent_id as cagentid,cc.ag_name as cagentname,c.bus_num as cbusnum,c.bus_platform as cbusplatform,c.bus_type as cbustype,c.bus_status as cbusstatus,
    d.id as did,d.agent_id as dagentid,dd.ag_name as dagentname,d.bus_num as dbusnum,d.bus_platform as dbusplatform,d.bus_type as dbustype,d.bus_status as dbusstatus
    from a_agent_businfo a
    left join a_agent aa on aa.id = a.agent_id
    left join a_agent_businfo b on b.id = a.bus_parent and b.bus_platform = a.bus_platform and b.status=1
    left join a_agent bb on bb.id = b.agent_id
    left join a_agent_businfo c on c.id = b.bus_parent and c.bus_platform = a.bus_platform and c.status=1
    left join a_agent cc on cc.id = c.agent_id
    left join a_agent_businfo d on d.id = c.bus_parent and d.bus_platform = a.bus_platform and d.status=1
    left join a_agent dd on dd.id = d.agent_id
      <where>
        <if test="id!=null and id!=''"> and a.id = #{id}</if>
        <if test="agentId!=null and agentId!=''"> and a.agent_id = #{agentId}</if>
        <if test="busPlatform!=null and busPlatform!=''"> and a.bus_platform =#{busPlatform} </if>
      </where>

  </select>

  <select id="queryEditAgentMerge" parameterType="map" resultType="map">
    select
    A.ID,A.AGENT_ID,A.BUS_NUM,A.BUS_PLATFORM,A.BUS_TYPE,A.BUS_PARENT,
    B.AG_UNIQ_NUM,B.AG_NAME,C.PLATFORM_NAME,D.D_ITEMNAME,(C.PLATFORM_NAME) as FIELDSHOW
    from
    a_agent_businfo a
    left join a_agent b on a.agent_id=b.id
    left join a_platform c on c.platform_num = a.bus_platform
    left join d_dict d on d.d_group='AGENT' AND d.d_artifact = 'BUS_TYPE' and d.d_itemvalue = a.bus_type
    <where>
      a.status=1 and b.status=1 and (a.bus_status=1 or a.bus_status=2 or a.bus_status=3)
      <if test="id!=null and id!=''"> and a.id=#{id}</if>
      <if test="busPlatform!=null and busPlatform!=''">and a.bus_platform =#{busPlatform}</if>
      <if test="agentId!=null and agentId!=''">and a.agent_id = #{agentId}</if>
      <if test="busParent!=null and busParent!=''">and a.bus_parent= #{busParent}</if>
    </where>
  </select>

  <!--查询有重复的打款公司的代理商-->
  <select id="queryAgentHaveMutPayCompany" resultType="string">
    select  b.agent_id from (
      select  a.agent_id,a.clo_pay_company  from a_agent_businfo a group by a.agent_id,a.clo_pay_company
    )b group by b.agent_id having count(b.clo_pay_company)>1
  </select>

  <!--代理商打款公司出现不统一问题修复任务-->
  <select id="selectAgentHaveMutPayCompany" resultType="map">
   select bus.ID,col.CLO_TYPE,col.CLO_INVOICE,bus.CLO_PAY_COMPANY from
   a_agent_businfo bus  left join A_agent_colinfo col  on bus.agent_id=col.agent_id
  </select>

<!--对公开发票-->
  <select id="selectDgKfp" resultType="map" parameterType="string">
   select bus.ID,col.CLO_TYPE,col.CLO_INVOICE,bus.CLO_PAY_COMPANY
   from a_agent_businfo bus   left join A_agent_colinfo col  on
   bus.agent_id =col.agent_id and col.status=1
   where 1=1 and bus.status=1 and col.CLO_INVOICE =1
   and col.CLO_TYPE =1
   <if test="dg!=null and dg!=''">and bus.clo_pay_company != #{dg}</if>
  </select>

  <!--对公开不发票-->
  <select id="selectDgBkfp" resultType="map" >
select c.agent_id from (
 select  a.agent_id,a.clo_pay_company
 from a_agent_businfo a
 left join a_agent_colinfo b on a.agent_id = b.agent_id and a.status=1 and b.status=1
 where b.clo_type=1 and b.clo_invoice=0
 group by a.agent_id,a.clo_pay_company
 ) c group by c.agent_id having count(c.clo_pay_company)>1
union
 select c.agent_id from (
   select  a.agent_id,a.clo_pay_company
   from a_agent_businfo a
   left join a_agent_colinfo b on a.agent_id = b.agent_id and a.status=1 and b.status=1
   where b.clo_type=1 and b.clo_invoice=0
   group by a.agent_id,a.clo_pay_company
 ) c
 group by c.agent_id having count(c.clo_pay_company)=1 and sum(case when c.clo_pay_company='Q000029564' then 1 else 0 end)>=1
  </select>

<!--对私-->
  <select id="selectDs" resultType="map">
    select c.agent_id from (
    select  a.agent_id,a.clo_pay_company
    from a_agent_businfo a
    left join a_agent_colinfo b on a.agent_id = b.agent_id and a.status=1 and b.status=1
    where b.clo_type=2
    group by a.agent_id,a.clo_pay_company
    ) c group by c.agent_id having count(c.clo_pay_company)>1
    union
    select c.agent_id from (
    select  a.agent_id,a.clo_pay_company
    from a_agent_businfo a
    left join a_agent_colinfo b on a.agent_id = b.agent_id and a.status=1 and b.status=1
    where b.clo_type=2
    group by a.agent_id,a.clo_pay_company
    ) c
    group by c.agent_id having count(c.clo_pay_company)=1 and sum(case when c.clo_pay_company='Q000029564' then 1 else 0 end)>=1
  </select>

  <select id="selectComp" resultType="map" parameterType="string">
   select  pc.id as payComanyId,pc.com_name from A_agent_businfo bus
    left join A_pay_comp pc on bus.clo_pay_company = pc.id
    where bus.agent_id=#{agentId} and bus.CLO_PAY_COMPANY is not null
  </select>
</mapper>