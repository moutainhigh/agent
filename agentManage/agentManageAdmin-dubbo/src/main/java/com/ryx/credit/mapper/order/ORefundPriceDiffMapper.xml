<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.dao.order.ORefundPriceDiffMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.order.ORefundPriceDiff">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="APPLY_COMP_TYPE" jdbcType="VARCHAR" property="applyCompType" />
    <result column="APPLY_COMP_AMT" jdbcType="DECIMAL" property="applyCompAmt" />
    <result column="REL_COMP_TYPE" jdbcType="VARCHAR" property="relCompType" />
    <result column="REL_COMP_AMT" jdbcType="DECIMAL" property="relCompAmt" />
    <result column="MACH_OWE_AMT" jdbcType="DECIMAL" property="machOweAmt" />
    <result column="GATHER_TIME" jdbcType="TIMESTAMP" property="gatherTime" />
    <result column="GATHER_AMT" jdbcType="DECIMAL" property="gatherAmt" />
    <result column="REVIEW_STATUS" jdbcType="DECIMAL" property="reviewStatus" />
    <result column="S_TIME" jdbcType="TIMESTAMP" property="sTime" />
    <result column="APPLY_REMARK" jdbcType="VARCHAR" property="applyRemark" />
    <result column="DEDUCT_AMT" jdbcType="DECIMAL" property="deductAmt" />
    <result column="C_TIME" jdbcType="TIMESTAMP" property="cTime" />
    <result column="U_TIME" jdbcType="TIMESTAMP" property="uTime" />
    <result column="C_USER" jdbcType="VARCHAR" property="cUser" />
    <result column="U_USER" jdbcType="VARCHAR" property="uUser" />
    <result column="STATUS" jdbcType="DECIMAL" property="status" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="AGENT_ID" jdbcType="VARCHAR" property="agentId" />
    <result column="BELOW_PAY_AMT" jdbcType="DECIMAL" property="belowPayAmt" />
    <result column="SHARE_DEDUCT_AMT" jdbcType="DECIMAL" property="shareDeductAmt" />
    <result column="ORDER_TYPE" jdbcType="DECIMAL" property="orderType" />
    <result column="APP_TIME" jdbcType="TIMESTAMP" property="appTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, APPLY_COMP_TYPE, APPLY_COMP_AMT, REL_COMP_TYPE, REL_COMP_AMT, MACH_OWE_AMT, GATHER_TIME,
    GATHER_AMT, REVIEW_STATUS, S_TIME, APPLY_REMARK, DEDUCT_AMT, C_TIME, U_TIME, C_USER,
    U_USER, STATUS, VERSION, AGENT_ID, BELOW_PAY_AMT, SHARE_DEDUCT_AMT, ORDER_TYPE, APP_TIME
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.order.ORefundPriceDiffExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from O_REFUND_PRICE_DIFF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from O_REFUND_PRICE_DIFF
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.order.ORefundPriceDiffExample">
    delete from O_REFUND_PRICE_DIFF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.order.ORefundPriceDiff">
    insert into O_REFUND_PRICE_DIFF (ID, APPLY_COMP_TYPE, APPLY_COMP_AMT,
    REL_COMP_TYPE, REL_COMP_AMT, MACH_OWE_AMT,
    GATHER_TIME, GATHER_AMT, REVIEW_STATUS,
    S_TIME, APPLY_REMARK, DEDUCT_AMT,
    C_TIME, U_TIME, C_USER,
    U_USER, STATUS, VERSION,
    AGENT_ID, BELOW_PAY_AMT, SHARE_DEDUCT_AMT,
    ORDER_TYPE, APP_TIME)
    values (#{id,jdbcType=VARCHAR}, #{applyCompType,jdbcType=VARCHAR}, #{applyCompAmt,jdbcType=DECIMAL},
    #{relCompType,jdbcType=VARCHAR}, #{relCompAmt,jdbcType=DECIMAL}, #{machOweAmt,jdbcType=DECIMAL},
    #{gatherTime,jdbcType=TIMESTAMP}, #{gatherAmt,jdbcType=DECIMAL}, #{reviewStatus,jdbcType=DECIMAL},
    #{sTime,jdbcType=TIMESTAMP}, #{applyRemark,jdbcType=VARCHAR}, #{deductAmt,jdbcType=DECIMAL},
    #{cTime,jdbcType=TIMESTAMP}, #{uTime,jdbcType=TIMESTAMP}, #{cUser,jdbcType=VARCHAR},
    #{uUser,jdbcType=VARCHAR}, #{status,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL},
    #{agentId,jdbcType=VARCHAR}, #{belowPayAmt,jdbcType=DECIMAL}, #{shareDeductAmt,jdbcType=DECIMAL},
    #{orderType,jdbcType=DECIMAL}, #{appTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.order.ORefundPriceDiff">
    insert into O_REFUND_PRICE_DIFF
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="applyCompType != null">
        APPLY_COMP_TYPE,
      </if>
      <if test="applyCompAmt != null">
        APPLY_COMP_AMT,
      </if>
      <if test="relCompType != null">
        REL_COMP_TYPE,
      </if>
      <if test="relCompAmt != null">
        REL_COMP_AMT,
      </if>
      <if test="machOweAmt != null">
        MACH_OWE_AMT,
      </if>
      <if test="gatherTime != null">
        GATHER_TIME,
      </if>
      <if test="gatherAmt != null">
        GATHER_AMT,
      </if>
      <if test="reviewStatus != null">
        REVIEW_STATUS,
      </if>
      <if test="sTime != null">
        S_TIME,
      </if>
      <if test="applyRemark != null">
        APPLY_REMARK,
      </if>
      <if test="deductAmt != null">
        DEDUCT_AMT,
      </if>
      <if test="cTime != null">
        C_TIME,
      </if>
      <if test="uTime != null">
        U_TIME,
      </if>
      <if test="cUser != null">
        C_USER,
      </if>
      <if test="uUser != null">
        U_USER,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="belowPayAmt != null">
        BELOW_PAY_AMT,
      </if>
      <if test="shareDeductAmt != null">
        SHARE_DEDUCT_AMT,
      </if>
      <if test="orderType != null">
        ORDER_TYPE,
      </if>
      <if test="appTime != null">
        APP_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="applyCompType != null">
        #{applyCompType,jdbcType=VARCHAR},
      </if>
      <if test="applyCompAmt != null">
        #{applyCompAmt,jdbcType=DECIMAL},
      </if>
      <if test="relCompType != null">
        #{relCompType,jdbcType=VARCHAR},
      </if>
      <if test="relCompAmt != null">
        #{relCompAmt,jdbcType=DECIMAL},
      </if>
      <if test="machOweAmt != null">
        #{machOweAmt,jdbcType=DECIMAL},
      </if>
      <if test="gatherTime != null">
        #{gatherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gatherAmt != null">
        #{gatherAmt,jdbcType=DECIMAL},
      </if>
      <if test="reviewStatus != null">
        #{reviewStatus,jdbcType=DECIMAL},
      </if>
      <if test="sTime != null">
        #{sTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyRemark != null">
        #{applyRemark,jdbcType=VARCHAR},
      </if>
      <if test="deductAmt != null">
        #{deductAmt,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uTime != null">
        #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="uUser != null">
        #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="belowPayAmt != null">
        #{belowPayAmt,jdbcType=DECIMAL},
      </if>
      <if test="shareDeductAmt != null">
        #{shareDeductAmt,jdbcType=DECIMAL},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=DECIMAL},
      </if>
      <if test="appTime != null">
        #{appTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.order.ORefundPriceDiffExample" resultType="java.lang.Long">
    select count(*) from O_REFUND_PRICE_DIFF
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.order.ORefundPriceDiff">
    update O_REFUND_PRICE_DIFF
    <set>
      <if test="applyCompType != null">
        APPLY_COMP_TYPE = #{applyCompType,jdbcType=VARCHAR},
      </if>
      <if test="applyCompAmt != null">
        APPLY_COMP_AMT = #{applyCompAmt,jdbcType=DECIMAL},
      </if>
      <if test="relCompType != null">
        REL_COMP_TYPE = #{relCompType,jdbcType=VARCHAR},
      </if>
      <if test="relCompAmt != null">
        REL_COMP_AMT = #{relCompAmt,jdbcType=DECIMAL},
      </if>
      <if test="machOweAmt != null">
        MACH_OWE_AMT = #{machOweAmt,jdbcType=DECIMAL},
      </if>
      <if test="gatherTime != null">
        GATHER_TIME = #{gatherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gatherAmt != null">
        GATHER_AMT = #{gatherAmt,jdbcType=DECIMAL},
      </if>
      <if test="reviewStatus != null">
        REVIEW_STATUS = #{reviewStatus,jdbcType=DECIMAL},
      </if>
      <if test="sTime != null">
        S_TIME = #{sTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyRemark != null">
        APPLY_REMARK = #{applyRemark,jdbcType=VARCHAR},
      </if>
      <if test="deductAmt != null">
        DEDUCT_AMT = #{deductAmt,jdbcType=DECIMAL},
      </if>
      <if test="cTime != null">
        C_TIME = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uTime != null">
        U_TIME = #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null">
        C_USER = #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="uUser != null">
        U_USER = #{uUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="belowPayAmt != null">
        BELOW_PAY_AMT = #{belowPayAmt,jdbcType=DECIMAL},
      </if>
      <if test="shareDeductAmt != null">
        SHARE_DEDUCT_AMT = #{shareDeductAmt,jdbcType=DECIMAL},
      </if>
      <if test="orderType != null">
        ORDER_TYPE = #{orderType,jdbcType=DECIMAL},
      </if>
      <if test="appTime != null">
        APP_TIME = #{appTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.order.ORefundPriceDiff">
    update O_REFUND_PRICE_DIFF
    set APPLY_COMP_TYPE = #{applyCompType,jdbcType=VARCHAR},
    APPLY_COMP_AMT = #{applyCompAmt,jdbcType=DECIMAL},
    REL_COMP_TYPE = #{relCompType,jdbcType=VARCHAR},
    REL_COMP_AMT = #{relCompAmt,jdbcType=DECIMAL},
    MACH_OWE_AMT = #{machOweAmt,jdbcType=DECIMAL},
    GATHER_TIME = #{gatherTime,jdbcType=TIMESTAMP},
    GATHER_AMT = #{gatherAmt,jdbcType=DECIMAL},
    REVIEW_STATUS = #{reviewStatus,jdbcType=DECIMAL},
    S_TIME = #{sTime,jdbcType=TIMESTAMP},
    APPLY_REMARK = #{applyRemark,jdbcType=VARCHAR},
    DEDUCT_AMT = #{deductAmt,jdbcType=DECIMAL},
    C_TIME = #{cTime,jdbcType=TIMESTAMP},
    U_TIME = #{uTime,jdbcType=TIMESTAMP},
    C_USER = #{cUser,jdbcType=VARCHAR},
    U_USER = #{uUser,jdbcType=VARCHAR},
    STATUS = #{status,jdbcType=DECIMAL},
    VERSION = #{version,jdbcType=DECIMAL},
    AGENT_ID = #{agentId,jdbcType=VARCHAR},
    BELOW_PAY_AMT = #{belowPayAmt,jdbcType=DECIMAL},
    SHARE_DEDUCT_AMT = #{shareDeductAmt,jdbcType=DECIMAL},
    ORDER_TYPE = #{orderType,jdbcType=DECIMAL},
    APP_TIME = #{appTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>

  <sql id="B_Base_Column_List">
    rp.ID, rp.APPLY_COMP_TYPE, rp.APPLY_COMP_AMT, rp.REL_COMP_TYPE, rp.REL_COMP_AMT, rp.MACH_OWE_AMT, rp.GATHER_TIME,
    rp.GATHER_AMT, rp.REVIEW_STATUS, rp.S_TIME, rp.APPLY_REMARK, rp.DEDUCT_AMT, rp.C_TIME, rp.U_TIME, rp.C_USER,
    rp.U_USER, rp.STATUS, rp.VERSION, rp.AGENT_ID, rp.BELOW_PAY_AMT, rp.SHARE_DEDUCT_AMT,rp.ORDER_TYPE
  </sql>
  <sql id="D_Base_Column_List">
    rpd.ID, rpd.SUB_ORDER_ID, rpd.AGENT_ID, rpd.ACTIVITY_FRONT_ID, rpd.ACTIVITY_REAL_ID, rpd.REFUND_PRICE_DIFF_ID,
    rpd.PRO_ID, rpd.PRO_NAME, rpd.CHANGE_COUNT, rpd.ACTIVITY_NAME, rpd.ACTIVITY_WAY, rpd.ACTIVITY_RULE, rpd.FRONT_PRICE,
    rpd.PRICE, rpd.S_TIME, rpd.BEGIN_SN, rpd.END_SN, rpd.VENDER, rpd.PRO_MODEL, rpd.C_TIME, rpd.U_TIME, rpd.C_USER, rpd.U_USER,
    rpd.STATUS, rpd.VERSION, rpd.ORDER_ID
  </sql>
  <select id="selectBySnAndOrderId" parameterType="java.util.Map" resultType="java.util.Map">
    select
    <include refid="B_Base_Column_List"/>,
    <include refid="D_Base_Column_List"/>
    from o_Refund_price_diff rp, o_Refund_price_diff_detail rpd
    where rp.id = rpd.refund_price_diff_id
    and rpd.begin_sn = #{map.beginSn}
    and rpd.end_sn = #{map.endSn}
    and order_id = #{map.orderId}
    and review_status in
    <foreach item="item" index="index" open="(" separator="," close=")" collection="map.reviewStatus">
      #{item}
    </foreach>
  </select>

  <select id="selectByAgent" parameterType="java.util.Map" resultType="java.util.Map">
    <include refid="OracleDialectPrefix" />
    select
      <include refid="B_Base_Column_List"/>,
      a.AG_NAME
    from
    o_refund_price_diff rp left join a_agent a on a.id = rp.agent_id
    <include refid="selectByAgentWhere"/>
    order by rp.c_time desc
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="selectByAgentCount" parameterType="map" resultType="int">
    select count(*) from
    o_refund_price_diff rp left join a_agent a on a.id = rp.agent_id
    <include refid="selectByAgentWhere"/>
  </select>

  <sql id="selectByAgentWhere">
    <where>
       1=1 and rp.status=1
       <if test="map.reviewStatus != null">
         and rp.REVIEW_STATUS = #{map.reviewStatus,jdbcType=VARCHAR}
       </if>
       <if test="map.cUser != null">
         and rp.c_user = #{map.cUser,jdbcType=VARCHAR}
       </if>
       <if test="map.orgId!=null and map.orgId!=''">
         and (a.AG_DOC_PRO = #{map.orgId} or a.AG_DOC_DISTRICT = #{map.orgId})
       </if>
       <if test="map.applyBeginTime!=null and map.applyBeginTime!=''">
         and rp.s_time >= to_date(#{map.applyBeginTime}, 'yy-mm-dd hh24:mi:ss')
       </if>
       <if test="map.applyEndTime!=null and map.applyEndTime!=''">
         and rp.s_time &lt;= to_date(#{map.applyEndTime}, 'yy-mm-dd hh24:mi:ss')
       </if>
       <if test="map.agentId != null">
         and rp.agent_id = #{map.agentId,jdbcType=VARCHAR}
       </if>
       <if test="map.agentName != null">
         and a.ag_name = #{map.agentName,jdbcType=VARCHAR}
       </if>
    </where>
  </sql>

</mapper>