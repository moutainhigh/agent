<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ryx.credit.dao.CStrategyMapper" >
  <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.CStrategy" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="OTHER" />
    <result column="TYPE" property="type" jdbcType="DECIMAL" />
    <result column="VALUE" property="value" jdbcType="OTHER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="OPERATOR" property="operator" jdbcType="DECIMAL" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, NAME, TYPE, VALUE, CREATE_TIME, OPERATOR, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ryx.credit.pojo.admin.CStrategyExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_STRATEGY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from C_STRATEGY
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.CStrategyExample" >
    delete from C_STRATEGY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.pojo.admin.CStrategy" >
    <selectKey keyProperty="id" resultType="DECIMAL" order="BEFORE">
      select C_STRATEGY_SEQUENCE.nextval from dual
    </selectKey>
    insert into C_STRATEGY (ID, NAME, TYPE,
      VALUE, CREATE_TIME, OPERATOR, 
      UPDATE_TIME)
    values (#{id,jdbcType=DECIMAL}, #{name,jdbcType=OTHER}, #{type,jdbcType=DECIMAL}, 
      #{value,jdbcType=OTHER}, #{createTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=DECIMAL}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.CStrategy" >
    insert into C_STRATEGY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="value != null" >
        VALUE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=OTHER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=DECIMAL},
      </if>
      <if test="value != null" >
        #{value,jdbcType=OTHER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.CStrategyExample" resultType="java.lang.Integer" >
    select count(*) from C_STRATEGY
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.CStrategy" >
    update C_STRATEGY
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=OTHER},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=DECIMAL},
      </if>
      <if test="value != null" >
        VALUE = #{value,jdbcType=OTHER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.CStrategy" >
    update C_STRATEGY
    set NAME = #{name,jdbcType=OTHER},
      TYPE = #{type,jdbcType=DECIMAL},
      VALUE = #{value,jdbcType=OTHER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      OPERATOR = #{operator,jdbcType=DECIMAL},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>