<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" ><mapper namespace="com.ryx.credit.dao.agent.AgentMapper">    <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.agent.Agent">        <id column="ID" property="id" jdbcType="VARCHAR"/>        <result column="AG_UNIQ_NUM" property="agUniqNum" jdbcType="VARCHAR"/>        <result column="AG_NAME" property="agName" jdbcType="VARCHAR"/>        <result column="AG_NATURE" property="agNature" jdbcType="DECIMAL"/>        <result column="AG_CAPITAL" property="agCapital" jdbcType="DECIMAL"/>        <result column="AG_BUS_LIC" property="agBusLic" jdbcType="VARCHAR"/>        <result column="AG_BUS_LICB" property="agBusLicb" jdbcType="TIMESTAMP"/>        <result column="AG_BUS_LICE" property="agBusLice" jdbcType="TIMESTAMP"/>        <result column="AG_LEGAL" property="agLegal" jdbcType="VARCHAR"/>        <result column="AG_LEGAL_CERTYPE" property="agLegalCertype" jdbcType="DECIMAL"/>        <result column="AG_LEGAL_CERNUM" property="agLegalCernum" jdbcType="VARCHAR"/>        <result column="AG_LEGAL_MOBILE" property="agLegalMobile" jdbcType="VARCHAR"/>        <result column="AG_HEAD" property="agHead" jdbcType="VARCHAR"/>        <result column="AG_HEAD_MOBILE" property="agHeadMobile" jdbcType="VARCHAR"/>        <result column="AG_REG_ADD" property="agRegAdd" jdbcType="VARCHAR"/>        <result column="AG_BUS_SCOPE" property="agBusScope" jdbcType="VARCHAR"/>        <result column="CLO_TAX_POINT" property="cloTaxPoint" jdbcType="DECIMAL"/>        <result column="AG_STATUS" property="agStatus" jdbcType="VARCHAR"/>        <result column="AG_DOC_PRO" property="agDocPro" jdbcType="VARCHAR"/>        <result column="AG_DOC_DISTRICT" property="agDocDistrict" jdbcType="VARCHAR"/>        <result column="AG_REMARK" property="agRemark" jdbcType="VARCHAR"/>        <result column="C_INCOM_TIME" property="cIncomTime" jdbcType="TIMESTAMP"/>        <result column="C_TIME" property="cTime" jdbcType="TIMESTAMP"/>        <result column="C_UTIME" property="cUtime" jdbcType="TIMESTAMP"/>        <result column="C_INCOM_STATUS" property="cIncomStatus" jdbcType="DECIMAL"/>        <result column="C_USER" property="cUser" jdbcType="VARCHAR"/>        <result column="AG_ZBH" property="agZbh" jdbcType="VARCHAR"/>        <result column="STATUS" property="status" jdbcType="DECIMAL"/>        <result column="VERSION" property="version" jdbcType="DECIMAL"/>        <result column="CA_STATUS" property="caStatus" jdbcType="DECIMAL"/>    </resultMap>    <sql id="Example_Where_Clause">        <where>            <foreach collection="oredCriteria" item="criteria" separator="or">                <if test="criteria.valid">                    <trim prefix="(" suffix=")" prefixOverrides="and">                        <foreach collection="criteria.criteria" item="criterion">                            <choose>                                <when test="criterion.noValue">                                    and ${criterion.condition}                                </when>                                <when test="criterion.singleValue">                                    and ${criterion.condition} #{criterion.value}                                </when>                                <when test="criterion.betweenValue">                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}                                </when>                                <when test="criterion.listValue">                                    and ${criterion.condition}                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"                                             separator=",">                                        #{listItem}                                    </foreach>                                </when>                            </choose>                        </foreach>                    </trim>                </if>            </foreach>        </where>    </sql>    <sql id="Base_Column_List">    ID, AG_UNIQ_NUM, AG_NAME, AG_NATURE, AG_CAPITAL, AG_BUS_LIC, AG_BUS_LICB, AG_BUS_LICE,    AG_LEGAL, AG_LEGAL_CERTYPE, AG_LEGAL_CERNUM, AG_LEGAL_MOBILE, AG_HEAD, AG_HEAD_MOBILE,    AG_REG_ADD, AG_BUS_SCOPE, CLO_TAX_POINT, AG_STATUS, AG_DOC_PRO, AG_DOC_DISTRICT,    AG_REMARK, C_INCOM_TIME, C_TIME, C_UTIME, C_INCOM_STATUS, C_USER, AG_ZBH, STATUS,    VERSION, CA_STATUS  </sql>    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ryx.credit.pojo.admin.agent.AgentExample">        <include refid="OracleDialectPrefix"/>        select        <if test="distinct">            distinct        </if>        <include refid="Base_Column_List"/>        from A_AGENT        <if test="_parameter != null">            <include refid="Example_Where_Clause"/>        </if>        <if test="orderByClause != null">            order by ${orderByClause}        </if>        <include refid="OracleDialectSuffix"/>    </select>    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">        select        <include refid="Base_Column_List"/>        from A_AGENT        where ID = #{id,jdbcType=VARCHAR}    </select>    <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentExample">        delete from A_AGENT        <if test="_parameter != null">            <include refid="Example_Where_Clause"/>        </if>    </delete>    <insert id="insert" parameterType="com.ryx.credit.pojo.admin.agent.Agent">    insert into A_AGENT (ID, AG_UNIQ_NUM, AG_NAME,    AG_NATURE, AG_CAPITAL, AG_BUS_LIC,    AG_BUS_LICB, AG_BUS_LICE, AG_LEGAL,    AG_LEGAL_CERTYPE, AG_LEGAL_CERNUM, AG_LEGAL_MOBILE,    AG_HEAD, AG_HEAD_MOBILE, AG_REG_ADD,    AG_BUS_SCOPE, CLO_TAX_POINT, AG_STATUS,    AG_DOC_PRO, AG_DOC_DISTRICT, AG_REMARK,    C_INCOM_TIME, C_TIME, C_UTIME,    C_INCOM_STATUS, C_USER, AG_ZBH,    STATUS, VERSION, CA_STATUS    )    values (#{id,jdbcType=VARCHAR}, #{agUniqNum,jdbcType=VARCHAR}, #{agName,jdbcType=VARCHAR},    #{agNature,jdbcType=DECIMAL}, #{agCapital,jdbcType=DECIMAL}, #{agBusLic,jdbcType=VARCHAR},    #{agBusLicb,jdbcType=TIMESTAMP}, #{agBusLice,jdbcType=TIMESTAMP}, #{agLegal,jdbcType=VARCHAR},    #{agLegalCertype,jdbcType=DECIMAL}, #{agLegalCernum,jdbcType=VARCHAR}, #{agLegalMobile,jdbcType=VARCHAR},    #{agHead,jdbcType=VARCHAR}, #{agHeadMobile,jdbcType=VARCHAR}, #{agRegAdd,jdbcType=VARCHAR},    #{agBusScope,jdbcType=VARCHAR}, #{cloTaxPoint,jdbcType=DECIMAL}, #{agStatus,jdbcType=VARCHAR},    #{agDocPro,jdbcType=VARCHAR}, #{agDocDistrict,jdbcType=VARCHAR}, #{agRemark,jdbcType=VARCHAR},    #{cIncomTime,jdbcType=TIMESTAMP}, #{cTime,jdbcType=TIMESTAMP}, #{cUtime,jdbcType=TIMESTAMP},    #{cIncomStatus,jdbcType=DECIMAL}, #{cUser,jdbcType=VARCHAR}, #{agZbh,jdbcType=VARCHAR},    #{status,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL}, #{caStatus,jdbcType=DECIMAL}    )  </insert>    <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.agent.Agent">        insert into A_AGENT        <trim prefix="(" suffix=")" suffixOverrides=",">            <if test="id != null">                ID,            </if>            <if test="agUniqNum != null">                AG_UNIQ_NUM,            </if>            <if test="agName != null">                AG_NAME,            </if>            <if test="agNature != null">                AG_NATURE,            </if>            <if test="agCapital != null">                AG_CAPITAL,            </if>            <if test="agBusLic != null">                AG_BUS_LIC,            </if>            <if test="agBusLicb != null">                AG_BUS_LICB,            </if>            <if test="agBusLice != null">                AG_BUS_LICE,            </if>            <if test="agLegal != null">                AG_LEGAL,            </if>            <if test="agLegalCertype != null">                AG_LEGAL_CERTYPE,            </if>            <if test="agLegalCernum != null">                AG_LEGAL_CERNUM,            </if>            <if test="agLegalMobile != null">                AG_LEGAL_MOBILE,            </if>            <if test="agHead != null">                AG_HEAD,            </if>            <if test="agHeadMobile != null">                AG_HEAD_MOBILE,            </if>            <if test="agRegAdd != null">                AG_REG_ADD,            </if>            <if test="agBusScope != null">                AG_BUS_SCOPE,            </if>            <if test="cloTaxPoint != null">                CLO_TAX_POINT,            </if>            <if test="agStatus != null">                AG_STATUS,            </if>            <if test="agDocPro != null">                AG_DOC_PRO,            </if>            <if test="agDocDistrict != null">                AG_DOC_DISTRICT,            </if>            <if test="agRemark != null">                AG_REMARK,            </if>            <if test="cIncomTime != null">                C_INCOM_TIME,            </if>            <if test="cTime != null">                C_TIME,            </if>            <if test="cUtime != null">                C_UTIME,            </if>            <if test="cIncomStatus != null">                C_INCOM_STATUS,            </if>            <if test="cUser != null">                C_USER,            </if>            <if test="agZbh != null">                AG_ZBH,            </if>            <if test="status != null">                STATUS,            </if>            <if test="version != null">                VERSION,            </if>            <if test="caStatus != null">                CA_STATUS,            </if>        </trim>        <trim prefix="values (" suffix=")" suffixOverrides=",">            <if test="id != null">                #{id,jdbcType=VARCHAR},            </if>            <if test="agUniqNum != null">                #{agUniqNum,jdbcType=VARCHAR},            </if>            <if test="agName != null">                #{agName,jdbcType=VARCHAR},            </if>            <if test="agNature != null">                #{agNature,jdbcType=DECIMAL},            </if>            <if test="agCapital != null">                #{agCapital,jdbcType=DECIMAL},            </if>            <if test="agBusLic != null">                #{agBusLic,jdbcType=VARCHAR},            </if>            <if test="agBusLicb != null">                #{agBusLicb,jdbcType=TIMESTAMP},            </if>            <if test="agBusLice != null">                #{agBusLice,jdbcType=TIMESTAMP},            </if>            <if test="agLegal != null">                #{agLegal,jdbcType=VARCHAR},            </if>            <if test="agLegalCertype != null">                #{agLegalCertype,jdbcType=DECIMAL},            </if>            <if test="agLegalCernum != null">                #{agLegalCernum,jdbcType=VARCHAR},            </if>            <if test="agLegalMobile != null">                #{agLegalMobile,jdbcType=VARCHAR},            </if>            <if test="agHead != null">                #{agHead,jdbcType=VARCHAR},            </if>            <if test="agHeadMobile != null">                #{agHeadMobile,jdbcType=VARCHAR},            </if>            <if test="agRegAdd != null">                #{agRegAdd,jdbcType=VARCHAR},            </if>            <if test="agBusScope != null">                #{agBusScope,jdbcType=VARCHAR},            </if>            <if test="cloTaxPoint != null">                #{cloTaxPoint,jdbcType=DECIMAL},            </if>            <if test="agStatus != null">                #{agStatus,jdbcType=VARCHAR},            </if>            <if test="agDocPro != null">                #{agDocPro,jdbcType=VARCHAR},            </if>            <if test="agDocDistrict != null">                #{agDocDistrict,jdbcType=VARCHAR},            </if>            <if test="agRemark != null">                #{agRemark,jdbcType=VARCHAR},            </if>            <if test="cIncomTime != null">                #{cIncomTime,jdbcType=TIMESTAMP},            </if>            <if test="cTime != null">                #{cTime,jdbcType=TIMESTAMP},            </if>            <if test="cUtime != null">                #{cUtime,jdbcType=TIMESTAMP},            </if>            <if test="cIncomStatus != null">                #{cIncomStatus,jdbcType=DECIMAL},            </if>            <if test="cUser != null">                #{cUser,jdbcType=VARCHAR},            </if>            <if test="agZbh != null">                #{agZbh,jdbcType=VARCHAR},            </if>            <if test="status != null">                #{status,jdbcType=DECIMAL},            </if>            <if test="version != null">                #{version,jdbcType=DECIMAL},            </if>            <if test="caStatus != null">                #{caStatus,jdbcType=DECIMAL},            </if>        </trim>    </insert>    <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentExample"            resultType="java.lang.Integer">        select count(*) from A_AGENT        <if test="_parameter != null">            <include refid="Example_Where_Clause"/>        </if>    </select>    <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.agent.Agent">        update A_AGENT        <set>            <if test="agUniqNum != null">                AG_UNIQ_NUM = #{agUniqNum,jdbcType=VARCHAR},            </if>            <if test="agName != null">                AG_NAME = #{agName,jdbcType=VARCHAR},            </if>            <if test="agNature != null">                AG_NATURE = #{agNature,jdbcType=DECIMAL},            </if>            <if test="agCapital != null">                AG_CAPITAL = #{agCapital,jdbcType=DECIMAL},            </if>            <if test="agBusLic != null">                AG_BUS_LIC = #{agBusLic,jdbcType=VARCHAR},            </if>            <if test="agBusLicb != null">                AG_BUS_LICB = #{agBusLicb,jdbcType=TIMESTAMP},            </if>            <if test="agBusLice != null">                AG_BUS_LICE = #{agBusLice,jdbcType=TIMESTAMP},            </if>            <if test="agLegal != null">                AG_LEGAL = #{agLegal,jdbcType=VARCHAR},            </if>            <if test="agLegalCertype != null">                AG_LEGAL_CERTYPE = #{agLegalCertype,jdbcType=DECIMAL},            </if>            <if test="agLegalCernum != null">                AG_LEGAL_CERNUM = #{agLegalCernum,jdbcType=VARCHAR},            </if>            <if test="agLegalMobile != null">                AG_LEGAL_MOBILE = #{agLegalMobile,jdbcType=VARCHAR},            </if>            <if test="agHead != null">                AG_HEAD = #{agHead,jdbcType=VARCHAR},            </if>            <if test="agHeadMobile != null">                AG_HEAD_MOBILE = #{agHeadMobile,jdbcType=VARCHAR},            </if>            <if test="agRegAdd != null">                AG_REG_ADD = #{agRegAdd,jdbcType=VARCHAR},            </if>            <if test="agBusScope != null">                AG_BUS_SCOPE = #{agBusScope,jdbcType=VARCHAR},            </if>            <if test="cloTaxPoint != null">                CLO_TAX_POINT = #{cloTaxPoint,jdbcType=DECIMAL},            </if>            <if test="agStatus != null">                AG_STATUS = #{agStatus,jdbcType=VARCHAR},            </if>            <if test="agDocPro != null">                AG_DOC_PRO = #{agDocPro,jdbcType=VARCHAR},            </if>            <if test="agDocDistrict != null">                AG_DOC_DISTRICT = #{agDocDistrict,jdbcType=VARCHAR},            </if>            <if test="agRemark != null">                AG_REMARK = #{agRemark,jdbcType=VARCHAR},            </if>            <if test="cIncomTime != null">                C_INCOM_TIME = #{cIncomTime,jdbcType=TIMESTAMP},            </if>            <if test="cTime != null">                C_TIME = #{cTime,jdbcType=TIMESTAMP},            </if>            <if test="cUtime != null">                C_UTIME = #{cUtime,jdbcType=TIMESTAMP},            </if>            <if test="cIncomStatus != null">                C_INCOM_STATUS = #{cIncomStatus,jdbcType=DECIMAL},            </if>            <if test="cUser != null">                C_USER = #{cUser,jdbcType=VARCHAR},            </if>            <if test="agZbh != null">                AG_ZBH = #{agZbh,jdbcType=VARCHAR},            </if>            <if test="status != null">                STATUS = #{status,jdbcType=DECIMAL},            </if>            <if test="version != null">                VERSION = VERSION +1 ,            </if>            <if test="caStatus != null">                CA_STATUS = #{caStatus,jdbcType=DECIMAL},            </if>        </set>        where ID = #{id,jdbcType=VARCHAR} and VERSION = #{version,jdbcType=DECIMAL}    </update>    <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.agent.Agent">    update A_AGENT    set AG_UNIQ_NUM = #{agUniqNum,jdbcType=VARCHAR},    AG_NAME = #{agName,jdbcType=VARCHAR},    AG_NATURE = #{agNature,jdbcType=DECIMAL},    AG_CAPITAL = #{agCapital,jdbcType=DECIMAL},    AG_BUS_LIC = #{agBusLic,jdbcType=VARCHAR},    AG_BUS_LICB = #{agBusLicb,jdbcType=TIMESTAMP},    AG_BUS_LICE = #{agBusLice,jdbcType=TIMESTAMP},    AG_LEGAL = #{agLegal,jdbcType=VARCHAR},    AG_LEGAL_CERTYPE = #{agLegalCertype,jdbcType=DECIMAL},    AG_LEGAL_CERNUM = #{agLegalCernum,jdbcType=VARCHAR},    AG_LEGAL_MOBILE = #{agLegalMobile,jdbcType=VARCHAR},    AG_HEAD = #{agHead,jdbcType=VARCHAR},    AG_HEAD_MOBILE = #{agHeadMobile,jdbcType=VARCHAR},    AG_REG_ADD = #{agRegAdd,jdbcType=VARCHAR},    AG_BUS_SCOPE = #{agBusScope,jdbcType=VARCHAR},    CLO_TAX_POINT = #{cloTaxPoint,jdbcType=DECIMAL},    AG_STATUS = #{agStatus,jdbcType=VARCHAR},    AG_DOC_PRO = #{agDocPro,jdbcType=VARCHAR},    AG_DOC_DISTRICT = #{agDocDistrict,jdbcType=VARCHAR},    AG_REMARK = #{agRemark,jdbcType=VARCHAR},    C_INCOM_TIME = #{cIncomTime,jdbcType=TIMESTAMP},    C_TIME = #{cTime,jdbcType=TIMESTAMP},    C_UTIME = #{cUtime,jdbcType=TIMESTAMP},    C_INCOM_STATUS = #{cIncomStatus,jdbcType=DECIMAL},    C_USER = #{cUser,jdbcType=VARCHAR},    AG_ZBH = #{agZbh,jdbcType=VARCHAR},    STATUS = #{status,jdbcType=DECIMAL},    VERSION = = VERSION +1,    CA_STATUS = #{caStatus,jdbcType=DECIMAL}    where ID = #{id,jdbcType=VARCHAR} and VERSION = #{version,jdbcType=DECIMAL}  </update>    <sql id="OracleDialectPrefix">        <if test="page != null">            select * from ( select row_.*, rownum rownum_ from (        </if>    </sql>    <sql id="OracleDialectSuffix">        <if test="page != null">            <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>        </if>    </sql>    <sql id="deptName">agent.ID,agent.AG_UNIQ_NUM,agent.AG_NAME,agent.AG_NATURE,agent.AG_CAPITAL,agent.AG_BUS_LIC,agent.AG_BUS_LICB,agent.AG_BUS_LICE,agent.AG_LEGAL,agent.AG_LEGAL_CERTYPE,agent.AG_LEGAL_CERNUM,agent.AG_LEGAL_MOBILE,agent.AG_HEAD,agent.AG_HEAD_MOBILE,agent.AG_REG_ADD,agent.AG_BUS_SCOPE,agent.CLO_TAX_POINT,agent.AG_STATUS,agent.AG_DOC_PRO,agent.AG_DOC_DISTRICT,agent.AG_REMARK,agent.C_INCOM_TIME,agent.C_TIME,agent.C_UTIME,agent.C_INCOM_STATUS,agent.C_USER,agent.AG_ZBH,agent.STATUS,cor.NAME,cor.ADDRESS,cor.CODE,cor.ICON,cor.PID,cor.SEQ,cor.CREATE_TIME</sql>    <select id="queryDeptName" parameterType="string" resultType="map">        select        <include refid="deptName"/>        from A_AGENT agent left join C_ORGANIZATION cor on agent.AG_DOC_PRO= cor.id where cor.id=#{id}    </select>    <select id="queryDeptNameDis" parameterType="string" resultType="map">        select        <include refid="deptName"/>        from A_AGENT agent left join C_ORGANIZATION cor on agent.AG_DOC_DISTRICT= cor.id where cor.id=#{id}    </select>    <select id="excelAgent" parameterType="map" resultMap="AgentoutVo">        select * from(        select agent.ID,agent.AG_NAME,agent.AG_UNIQ_NUM,agent.AG_HEAD,bus.AGENT_ID,agent.AG_STATUS,agent.c_utime,        bus.BUS_PLATFORM,bus.BUS_NUM,bus.BUS_TYPE,bus.BUS_PARENT,busRiskParentbusAgent.ag_name as busRiskParent,busActivationParentbusAgent.ag_name as busActivationParent,        DECODE(bus.BUS_SENT_DIRECTLY,'1','是','0','否') as bus_sent_directly,DECODE(bus.bus_Inde_ass,'1','是','0','否') as        bus_Inde_ass,bus.BUS_SCOPE,bus.BUS_REGION,bus.CLO_PAY_COMPANY,        col.CLO_TYPE,col.CLO_REALNAME,col.CLO_BANK_ACCOUNT,col.CLO_BANK,col.BANK_REGION,col.CLO_BANK_BRANCH,        col.ALL_LINE_NUM,col.BRANCH_LINE_NUM,col.CLO_TAX_POINT,col.CLO_INVOICE,platform.PLATFORM_NAME, comp.COM_NAME,        businfo_1.id as  busParent ,        businfo_2.id as twoParentId,        businfo_3.id as threeParentId,        a1.AG_NAME||businfo_1.id as busParentId,        a2.AG_NAME||businfo_2.id as twoParentName,        a3.AG_NAME||businfo_3.id as threeParentName        from A_AGENT agent        left join A_agent_businfo bus on (agent.id=bus.AGENT_ID )        left join A_agent_businfo busRiskParentbus on bus.BUS_RISK_PARENT = busRiskParentbus.id        left join A_AGENT busRiskParentbusAgent on busRiskParentbusAgent.id = busRiskParentbus.AGENT_ID        left join A_agent_businfo busActivationParentbus on bus.BUS_ACTIVATION_PARENT = busActivationParentbus.id        left join A_AGENT busActivationParentbusAgent on busActivationParentbusAgent.id = busActivationParentbus.AGENT_ID        left join A_AGENT_COLINFO col on(agent.id=col.AGENT_ID)        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        left join A_PLATFORM  platform on platform.PLATFORM_NUM=bus.BUS_PLATFORM        left join A_PAY_COMP comp on comp.id=bus.CLO_PAY_COMPANY  and comp.status=1        left join a_agent_businfo businfo_1     on businfo_1.id=bus.bus_parent        left join a_agent_businfo businfo_2     on businfo_1.bus_parent=businfo_2.id        left join a_agent_businfo businfo_3     on businfo_2.bus_parent=businfo_3.id        left join a_agent a1 on a1.id=businfo_1.agent_id        left join a_agent a2 on a2.id=businfo_2.agent_id        left join a_agent a3 on a3.id=businfo_3.agent_id        <where>            1=1 and  agent.status=1            <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>            <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>            <if test="map.agStatus!=null and map.agStatus!=''">and agent.AG_STATUS = #{map.agStatus}</if>            <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>            <if test="map.busNum!=null and map.busNum!=''">and bus.BUS_NUM=#{map.busNum}</if>            <if test="map.busPlatform!=null and map.busPlatform!=''">AND bus.BUS_PLATFORM=#{map.busPlatform}</if>            <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">                and (agent.AG_DOC_PRO = #{map.agDocDistrict} or agent.AG_DOC_DISTRICT = #{map.agDocDistrict})            </if>            <if test="map.orgId!=null and map.orgId!=''">                and (agent.AG_DOC_PRO = #{map.orgId} or agent.AG_DOC_DISTRICT = #{map.orgId})            </if>            <if test="map.isZpos!=null and map.isZpos!=''">                and bus.BUS_PLATFORM = #{map.platForm}            </if>        </where>        UNION        select agent.ID,agent.AG_NAME,agent.AG_UNIQ_NUM,agent.AG_HEAD,bus.AGENT_ID,agent.AG_STATUS,agent.c_utime,        bus.BUS_PLATFORM,bus.BUS_NUM,bus.BUS_TYPE,bus.BUS_PARENT,busRiskParentbusAgent.ag_name as busRiskParent,busActivationParentbusAgent.ag_name as busActivationParent,        DECODE(bus.BUS_SENT_DIRECTLY,'1','是','0','否') as bus_sent_directly,DECODE(bus.bus_Inde_ass,'1','是','0','否') as        bus_Inde_ass,bus.BUS_SCOPE,bus.BUS_REGION,bus.CLO_PAY_COMPANY,        col.CLO_TYPE,col.CLO_REALNAME,col.CLO_BANK_ACCOUNT,col.CLO_BANK,col.BANK_REGION,col.CLO_BANK_BRANCH,        col.ALL_LINE_NUM,col.BRANCH_LINE_NUM,col.CLO_TAX_POINT,col.CLO_INVOICE,platform.PLATFORM_NAME, comp.COM_NAME,        businfo_1.id as  busParent ,        businfo_2.id as twoParentId,        businfo_3.id as threeParentId,        a1.AG_NAME||businfo_1.id as busParentId,        a2.AG_NAME||businfo_2.id as twoParentName,        a3.AG_NAME||businfo_3.id as threeParentName        from A_AGENT agent        left join A_agent_businfo bus on (agent.id=bus.AGENT_ID )        left join A_agent_businfo busRiskParentbus on bus.BUS_RISK_PARENT = busRiskParentbus.id        left join A_AGENT busRiskParentbusAgent on busRiskParentbusAgent.id = busRiskParentbus.AGENT_ID        left join A_agent_businfo busActivationParentbus on bus.BUS_ACTIVATION_PARENT = busActivationParentbus.id        left join A_AGENT busActivationParentbusAgent on busActivationParentbusAgent.id = busActivationParentbus.AGENT_ID        left join A_AGENT_COLINFO col on(agent.id=col.AGENT_ID)        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        left join A_PLATFORM  platform on platform.PLATFORM_NUM=bus.BUS_PLATFORM        left join A_PAY_COMP comp on comp.id=bus.CLO_PAY_COMPANY  and comp.status=1        left join a_agent_businfo businfo_1     on businfo_1.id=bus.bus_parent        left join a_agent_businfo businfo_2     on businfo_1.bus_parent=businfo_2.id        left join a_agent_businfo businfo_3     on businfo_2.bus_parent=businfo_3.id        left join a_agent a1 on a1.id=businfo_1.agent_id        left join a_agent a2 on a2.id=businfo_2.agent_id        left join a_agent a3 on a3.id=businfo_3.agent_id        <where>            1=1 and  agent.status=1            <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>            <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>            <if test="map.agStatus!=null and map.agStatus!=''">and agent.AG_STATUS = #{map.agStatus}</if>            <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>            <if test="map.busNum!=null and map.busNum!=''">and bus.BUS_NUM=#{map.busNum}</if>            <if test="map.busPlatform!=null and map.busPlatform!=''">AND bus.BUS_PLATFORM=#{map.busPlatform}</if>            <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">                and (agent.AG_DOC_PRO = #{map.agDocDistrict} or agent.AG_DOC_DISTRICT = #{map.agDocDistrict})            </if>            <if test="map.userId!=null and map.userId!=''">                and agent.C_USER = #{map.userId}            </if>            <if test="map.isZpos!=null and map.isZpos!=''">                and bus.BUS_PLATFORM = #{map.platForm}            </if>        </where>)        a order by decode(AG_STATUS,'Create',1,'Approving',2,'Approved',3,'Refuse',4,'Reject',5),c_utime desc    </select>    <resultMap id="AgentoutVo" type="com.ryx.credit.pojo.admin.vo.AgentoutVo">        <id column="ID" property="id" jdbcType="VARCHAR"/>        <result column="AG_UNIQ_NUM" property="agUniqNum" jdbcType="VARCHAR"/>        <result column="AG_NAME" property="agName" jdbcType="VARCHAR"/>        <result column="AG_HEAD" property="agHead" jdbcType="VARCHAR"/>        <result column="BUS_NUM" property="busNum" jdbcType="VARCHAR"/>        <result column="BUS_PLATFORM" property="busPlatform" jdbcType="VARCHAR"/>        <result column="PLATFORM_NAME" property="platformName" jdbcType="VARCHAR"/>        <result column="BUS_TYPE" property="busType" jdbcType="VARCHAR"/>        <result column="BUS_PARENT" property="busParent" jdbcType="VARCHAR"/>        <result column="BUS_REGION" property="busRegion" jdbcType="VARCHAR"/>        <result column="BUS_INDE_ASS" property="busIndeAss" jdbcType="VARCHAR"/>        <result column="BUS_RISK_EMAIL" property="busRiskEmail" jdbcType="VARCHAR"/>        <result column="BUS_SCOPE" property="busScope" jdbcType="VARCHAR"/>        <result column="BUS_SENT_DIRECTLY" property="busSentDirectly" jdbcType="VARCHAR"/>        <result column="CLO_PAY_COMPANY" property="cloPayCompany" jdbcType="VARCHAR"/>        <result column="COM_NAME" property="comName" jdbcType="VARCHAR"/>        <result column="AGENT_ID" property="agentId" jdbcType="VARCHAR"/>        <result column="CLO_TYPE" property="cloType" jdbcType="DECIMAL"/>        <result column="CLO_REALNAME" property="cloRealname" jdbcType="VARCHAR"/>        <result column="CLO_BANK_ACCOUNT" property="cloBankAccount" jdbcType="VARCHAR"/>        <result column="CLO_BANK" property="cloBank" jdbcType="VARCHAR"/>        <result column="BANK_REGION" property="bankRegion" jdbcType="VARCHAR"/>        <result column="CLO_BANK_BRANCH" property="cloBankBranch" jdbcType="VARCHAR"/>        <result column="ALL_LINE_NUM" property="allLineNum" jdbcType="VARCHAR"/>        <result column="BRANCH_LINE_NUM" property="branchLineNum" jdbcType="VARCHAR"/>        <result column="CLO_TAX_POINT" property="cloTaxPoint" jdbcType="DECIMAL"/>        <result column="CLO_INVOICE" property="cloInvoice" jdbcType="DECIMAL"/>    </resultMap>    <select id="queryAgentListViewCount" parameterType="map" resultType="int">        select count(id) from(        select agent.id from A_AGENT agent        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        where 1=1 and agent.status=1        <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>        <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>        <if test="map.agStatus!=null and map.agStatus!=''">and agent.AG_STATUS = #{map.agStatus}</if>        <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>        <if test="map.busPlatform!=null and map.busPlatform!=''">and EXISTS(select * from A_AGENT_BUSINFO where status=1            and BUS_PLATFORM=#{map.busPlatform} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!=''">and EXISTS(select * from A_AGENT_BUSINFO where status=1            and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!='' and map.busPlatform!=null and map.busPlatform!=''">and            EXISTS(select * from            A_AGENT_BUSINFO where status=1 and            BUS_PLATFORM=#{map.busPlatform} and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">            and (agent.AG_DOC_PRO = #{map.agDocDistrict} or agent.AG_DOC_DISTRICT = #{map.agDocDistrict})        </if>        <if test="map.orgId!=null and map.orgId!=''">            and (agent.AG_DOC_PRO = #{map.orgId} or agent.AG_DOC_DISTRICT = #{map.orgId})        </if>        <if test="map.isZpos!=null and map.isZpos!=''">            and EXISTS(select id from A_AGENT_BUSINFO where agent.id=agent_id and BUS_PLATFORM=#{map.platForm} )        </if>        UNION        select agent.id from A_AGENT agent        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        where 1=1 and agent.status=1        <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>        <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>        <if test="map.agStatus!=null and map.agStatus!=''">and agent.AG_STATUS = #{map.agStatus}</if>        <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>        <if test="map.busPlatform!=null and map.busPlatform!=''">and EXISTS(select * from A_AGENT_BUSINFO where status=1            and BUS_PLATFORM=#{map.busPlatform} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!=''">and EXISTS(select * from A_AGENT_BUSINFO where status=1            and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!='' and map.busPlatform!=null and map.busPlatform!=''">and            EXISTS(select * from            A_AGENT_BUSINFO where status=1 and            BUS_PLATFORM=#{map.busPlatform} and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">            and (agent.AG_DOC_PRO = #{map.agDocDistrict} or agent.AG_DOC_DISTRICT = #{map.agDocDistrict})        </if>        <if test="map.userId!=null and map.userId!=''">            and agent.C_USER = #{map.userId}        </if>        <if test="map.isZpos!=null and map.isZpos!=''">            and EXISTS(select id from A_AGENT_BUSINFO where agent.id=agent_id and BUS_PLATFORM=#{map.platForm} )        </if>        )    </select>    <select id="queryAgentListView" parameterType="map" resultType="map">        <include refid="OracleDialectPrefix"/>        (        select * from(        select agent.ID ,agent.AG_NAME ,agent.AG_UNIQ_NUM ,agent.AG_HEAD ,        agent.AG_HEAD_MOBILE ,agent.AG_REG_ADD ,        agent.AG_STATUS ,agent.AG_REMARK ,agent.C_INCOM_STATUS,        agent.C_TIME,b.name as AG_DOC_DISTRICT,a.name as AG_DOC_PRO,agent.C_UTIME        from A_AGENT agent        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        where 1=1 and agent.status=1        <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>        <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>        <if test="map.agStatus!=null and map.agStatus!=''">and agent.AG_STATUS = #{map.agStatus}</if>        <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>        <if test="map.busPlatform!=null and map.busPlatform!=''">and EXISTS(select CLO_REVIEW_STATUS from            A_AGENT_BUSINFO where            status=1 and            BUS_PLATFORM=#{map.busPlatform} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!=''">and EXISTS(select CLO_REVIEW_STATUS from A_AGENT_BUSINFO where            status=1            and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!='' and map.busPlatform!=null and map.busPlatform!=''">and            EXISTS(select            CLO_REVIEW_STATUS from            A_AGENT_BUSINFO where status=1 and            BUS_PLATFORM=#{map.busPlatform} and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">            and (agent.AG_DOC_PRO = #{map.agDocDistrict} or agent.AG_DOC_DISTRICT = #{map.agDocDistrict})        </if>        <if test="map.orgId!=null and map.orgId!=''">            and (agent.AG_DOC_PRO = #{map.orgId} or agent.AG_DOC_DISTRICT = #{map.orgId})        </if>        <if test="map.isZpos!=null and map.isZpos!=''">            and EXISTS(select id from A_AGENT_BUSINFO where agent.id=agent_id and BUS_PLATFORM=#{map.platForm} )        </if>        UNION        select agent.ID ,agent.AG_NAME ,agent.AG_UNIQ_NUM ,agent.AG_HEAD ,        agent.AG_HEAD_MOBILE ,agent.AG_REG_ADD ,        agent.AG_STATUS ,agent.AG_REMARK ,agent.C_INCOM_STATUS,        agent.C_TIME,b.name as AG_DOC_DISTRICT,a.name as AG_DOC_PRO,agent.C_UTIME        from A_AGENT agent        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        where 1=1 and agent.status=1        <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>        <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>        <if test="map.agStatus!=null and map.agStatus!=''">and agent.AG_STATUS = #{map.agStatus}</if>        <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>        <if test="map.busPlatform!=null and map.busPlatform!=''">and EXISTS(select CLO_REVIEW_STATUS from            A_AGENT_BUSINFO where            status=1 and            BUS_PLATFORM=#{map.busPlatform} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!=''">and EXISTS(select CLO_REVIEW_STATUS from A_AGENT_BUSINFO where            status=1            and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!='' and map.busPlatform!=null and map.busPlatform!=''">and            EXISTS(select            CLO_REVIEW_STATUS from            A_AGENT_BUSINFO where status=1 and            BUS_PLATFORM=#{map.busPlatform} and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">            and (agent.AG_DOC_PRO = #{map.agDocDistrict} or agent.AG_DOC_DISTRICT = #{map.agDocDistrict})        </if>        <if test="map.userId!=null and map.userId!=''">            and agent.C_USER = #{map.userId}        </if>        <if test="map.isZpos!=null and map.isZpos!=''">            and EXISTS(select id from A_AGENT_BUSINFO where agent.id=agent_id and BUS_PLATFORM=#{map.platForm} )        </if>        )        a order by decode(AG_STATUS,'Create',1,'Approving',2,'Approved',3,'Refuse',4,'Reject',5),c_utime desc        )        <include refid="OracleDialectSuffix"/>    </select></mapper>