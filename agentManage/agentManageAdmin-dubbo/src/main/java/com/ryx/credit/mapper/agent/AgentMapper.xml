<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.ryx.credit.dao.agent.AgentMapper">    <resultMap id="BaseResultMap" type="com.ryx.credit.pojo.admin.agent.Agent">        <id column="ID" jdbcType="VARCHAR" property="id" />        <result column="AG_UNIQ_NUM" jdbcType="VARCHAR" property="agUniqNum" />        <result column="AG_NAME" jdbcType="VARCHAR" property="agName" />        <result column="AG_NATURE" jdbcType="DECIMAL" property="agNature" />        <result column="AG_CAPITAL" jdbcType="DECIMAL" property="agCapital" />        <result column="AG_BUS_LIC" jdbcType="VARCHAR" property="agBusLic" />        <result column="AG_BUS_LICB" jdbcType="TIMESTAMP" property="agBusLicb" />        <result column="AG_BUS_LICE" jdbcType="TIMESTAMP" property="agBusLice" />        <result column="AG_LEGAL" jdbcType="VARCHAR" property="agLegal" />        <result column="AG_LEGAL_CERTYPE" jdbcType="DECIMAL" property="agLegalCertype" />        <result column="AG_LEGAL_CERNUM" jdbcType="VARCHAR" property="agLegalCernum" />        <result column="AG_LEGAL_MOBILE" jdbcType="VARCHAR" property="agLegalMobile" />        <result column="AG_HEAD" jdbcType="VARCHAR" property="agHead" />        <result column="AG_HEAD_MOBILE" jdbcType="VARCHAR" property="agHeadMobile" />        <result column="AG_REG_ADD" jdbcType="VARCHAR" property="agRegAdd" />        <result column="AG_BUS_SCOPE" jdbcType="VARCHAR" property="agBusScope" />        <result column="CLO_TAX_POINT" jdbcType="DECIMAL" property="cloTaxPoint" />        <result column="AG_STATUS" jdbcType="VARCHAR" property="agStatus" />        <result column="AG_DOC_PRO" jdbcType="VARCHAR" property="agDocPro" />        <result column="AG_DOC_DISTRICT" jdbcType="VARCHAR" property="agDocDistrict" />        <result column="AG_REMARK" jdbcType="VARCHAR" property="agRemark" />        <result column="C_INCOM_TIME" jdbcType="TIMESTAMP" property="cIncomTime" />        <result column="C_TIME" jdbcType="TIMESTAMP" property="cTime" />        <result column="C_UTIME" jdbcType="TIMESTAMP" property="cUtime" />        <result column="C_INCOM_STATUS" jdbcType="DECIMAL" property="cIncomStatus" />        <result column="C_USER" jdbcType="VARCHAR" property="cUser" />        <result column="AG_ZBH" jdbcType="VARCHAR" property="agZbh" />        <result column="STATUS" jdbcType="DECIMAL" property="status" />        <result column="VERSION" jdbcType="DECIMAL" property="version" />        <result column="CA_STATUS" jdbcType="DECIMAL" property="caStatus" />        <result column="AG_REG_AREA" jdbcType="VARCHAR" property="agRegArea" />        <result column="FREESTATUS" jdbcType="DECIMAL" property="freestatus" />        <result column="BUS_RISK_EMAIL" jdbcType="VARCHAR" property="busRiskEmail" />        <result column="BUS_CONTACT_EMAIL" jdbcType="VARCHAR" property="busContactEmail" />        <result column="REPORT_STATUS" jdbcType="DECIMAL" property="reportStatus" />        <result column="REPORT_TIME" jdbcType="TIMESTAMP" property="reportTime" />    </resultMap>    <sql id="Example_Where_Clause">        <where>            <foreach collection="oredCriteria" item="criteria" separator="or">                <if test="criteria.valid">                    <trim prefix="(" prefixOverrides="and" suffix=")">                        <foreach collection="criteria.criteria" item="criterion">                            <choose>                                <when test="criterion.noValue">                                    and ${criterion.condition}                                </when>                                <when test="criterion.singleValue">                                    and ${criterion.condition} #{criterion.value}                                </when>                                <when test="criterion.betweenValue">                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}                                </when>                                <when test="criterion.listValue">                                    and ${criterion.condition}                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">                                        #{listItem}                                    </foreach>                                </when>                            </choose>                        </foreach>                    </trim>                </if>            </foreach>        </where>    </sql>    <sql id="Base_Column_List">        ID, AG_UNIQ_NUM, AG_NAME, AG_NATURE, AG_CAPITAL, AG_BUS_LIC, AG_BUS_LICB, AG_BUS_LICE,        AG_LEGAL, AG_LEGAL_CERTYPE, AG_LEGAL_CERNUM, AG_LEGAL_MOBILE, AG_HEAD, AG_HEAD_MOBILE,        AG_REG_ADD, AG_BUS_SCOPE, CLO_TAX_POINT, AG_STATUS, AG_DOC_PRO, AG_DOC_DISTRICT,        AG_REMARK, C_INCOM_TIME, C_TIME, C_UTIME, C_INCOM_STATUS, C_USER, AG_ZBH, STATUS,        VERSION, CA_STATUS, AG_REG_AREA, FREESTATUS, BUS_RISK_EMAIL, BUS_CONTACT_EMAIL, REPORT_STATUS,        REPORT_TIME    </sql>    <select id="selectByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentExample" resultMap="BaseResultMap">        <include refid="OracleDialectPrefix" />        select        <if test="distinct">            distinct        </if>        <include refid="Base_Column_List" />        from A_AGENT        <if test="_parameter != null">            <include refid="Example_Where_Clause" />        </if>        <if test="orderByClause != null">            order by ${orderByClause}        </if>        <include refid="OracleDialectSuffix" />    </select>    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">        select        <include refid="Base_Column_List" />        from A_AGENT        where ID = #{id,jdbcType=VARCHAR}    </select>    <select id="selectByPrimaryKeys" parameterType="map" resultMap="BaseResultMap">        select        <include refid="Base_Column_List" />        from A_AGENT        where ID in        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">            #{id}        </foreach>    </select>    <delete id="deleteByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentExample">        delete from A_AGENT        <if test="_parameter != null">            <include refid="Example_Where_Clause" />        </if>    </delete>    <insert id="insert" parameterType="com.ryx.credit.pojo.admin.agent.Agent">        insert into A_AGENT (ID, AG_UNIQ_NUM, AG_NAME,        AG_NATURE, AG_CAPITAL, AG_BUS_LIC,        AG_BUS_LICB, AG_BUS_LICE, AG_LEGAL,        AG_LEGAL_CERTYPE, AG_LEGAL_CERNUM, AG_LEGAL_MOBILE,        AG_HEAD, AG_HEAD_MOBILE, AG_REG_ADD,        AG_BUS_SCOPE, CLO_TAX_POINT, AG_STATUS,        AG_DOC_PRO, AG_DOC_DISTRICT, AG_REMARK,        C_INCOM_TIME, C_TIME, C_UTIME,        C_INCOM_STATUS, C_USER, AG_ZBH,        STATUS, VERSION, CA_STATUS,        AG_REG_AREA, FREESTATUS, BUS_RISK_EMAIL,        BUS_CONTACT_EMAIL, REPORT_STATUS, REPORT_TIME        )        values (#{id,jdbcType=VARCHAR}, #{agUniqNum,jdbcType=VARCHAR}, #{agName,jdbcType=VARCHAR},        #{agNature,jdbcType=DECIMAL}, #{agCapital,jdbcType=DECIMAL}, #{agBusLic,jdbcType=VARCHAR},        #{agBusLicb,jdbcType=TIMESTAMP}, #{agBusLice,jdbcType=TIMESTAMP}, #{agLegal,jdbcType=VARCHAR},        #{agLegalCertype,jdbcType=DECIMAL}, #{agLegalCernum,jdbcType=VARCHAR}, #{agLegalMobile,jdbcType=VARCHAR},        #{agHead,jdbcType=VARCHAR}, #{agHeadMobile,jdbcType=VARCHAR}, #{agRegAdd,jdbcType=VARCHAR},        #{agBusScope,jdbcType=VARCHAR}, #{cloTaxPoint,jdbcType=DECIMAL}, #{agStatus,jdbcType=VARCHAR},        #{agDocPro,jdbcType=VARCHAR}, #{agDocDistrict,jdbcType=VARCHAR}, #{agRemark,jdbcType=VARCHAR},        #{cIncomTime,jdbcType=TIMESTAMP}, #{cTime,jdbcType=TIMESTAMP}, #{cUtime,jdbcType=TIMESTAMP},        #{cIncomStatus,jdbcType=DECIMAL}, #{cUser,jdbcType=VARCHAR}, #{agZbh,jdbcType=VARCHAR},        #{status,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL}, #{caStatus,jdbcType=DECIMAL},        #{agRegArea,jdbcType=VARCHAR}, #{freestatus,jdbcType=DECIMAL}, #{busRiskEmail,jdbcType=VARCHAR},        #{busContactEmail,jdbcType=VARCHAR}, #{reportStatus,jdbcType=DECIMAL}, #{reportTime,jdbcType=TIMESTAMP}        )    </insert>    <insert id="insertSelective" parameterType="com.ryx.credit.pojo.admin.agent.Agent">        insert into A_AGENT        <trim prefix="(" suffix=")" suffixOverrides=",">            <if test="id != null">                ID,            </if>            <if test="agUniqNum != null">                AG_UNIQ_NUM,            </if>            <if test="agName != null">                AG_NAME,            </if>            <if test="agNature != null">                AG_NATURE,            </if>            <if test="agCapital != null">                AG_CAPITAL,            </if>            <if test="agBusLic != null">                AG_BUS_LIC,            </if>            <if test="agBusLicb != null">                AG_BUS_LICB,            </if>            <if test="agBusLice != null">                AG_BUS_LICE,            </if>            <if test="agLegal != null">                AG_LEGAL,            </if>            <if test="agLegalCertype != null">                AG_LEGAL_CERTYPE,            </if>            <if test="agLegalCernum != null">                AG_LEGAL_CERNUM,            </if>            <if test="agLegalMobile != null">                AG_LEGAL_MOBILE,            </if>            <if test="agHead != null">                AG_HEAD,            </if>            <if test="agHeadMobile != null">                AG_HEAD_MOBILE,            </if>            <if test="agRegAdd != null">                AG_REG_ADD,            </if>            <if test="agBusScope != null">                AG_BUS_SCOPE,            </if>            <if test="cloTaxPoint != null">                CLO_TAX_POINT,            </if>            <if test="agStatus != null">                AG_STATUS,            </if>            <if test="agDocPro != null">                AG_DOC_PRO,            </if>            <if test="agDocDistrict != null">                AG_DOC_DISTRICT,            </if>            <if test="agRemark != null">                AG_REMARK,            </if>            <if test="cIncomTime != null">                C_INCOM_TIME,            </if>            <if test="cTime != null">                C_TIME,            </if>            <if test="cUtime != null">                C_UTIME,            </if>            <if test="cIncomStatus != null">                C_INCOM_STATUS,            </if>            <if test="cUser != null">                C_USER,            </if>            <if test="agZbh != null">                AG_ZBH,            </if>            <if test="status != null">                STATUS,            </if>            <if test="version != null">                VERSION,            </if>            <if test="caStatus != null">                CA_STATUS,            </if>            <if test="agRegArea != null">                AG_REG_AREA,            </if>            <if test="freestatus != null">                FREESTATUS,            </if>            <if test="busRiskEmail != null">                BUS_RISK_EMAIL,            </if>            <if test="busContactEmail != null">                BUS_CONTACT_EMAIL,            </if>            <if test="reportStatus != null">                REPORT_STATUS,            </if>            <if test="reportTime != null">                REPORT_TIME,            </if>        </trim>        <trim prefix="values (" suffix=")" suffixOverrides=",">            <if test="id != null">                #{id,jdbcType=VARCHAR},            </if>            <if test="agUniqNum != null">                #{agUniqNum,jdbcType=VARCHAR},            </if>            <if test="agName != null">                #{agName,jdbcType=VARCHAR},            </if>            <if test="agNature != null">                #{agNature,jdbcType=DECIMAL},            </if>            <if test="agCapital != null">                #{agCapital,jdbcType=DECIMAL},            </if>            <if test="agBusLic != null">                #{agBusLic,jdbcType=VARCHAR},            </if>            <if test="agBusLicb != null">                #{agBusLicb,jdbcType=TIMESTAMP},            </if>            <if test="agBusLice != null">                #{agBusLice,jdbcType=TIMESTAMP},            </if>            <if test="agLegal != null">                #{agLegal,jdbcType=VARCHAR},            </if>            <if test="agLegalCertype != null">                #{agLegalCertype,jdbcType=DECIMAL},            </if>            <if test="agLegalCernum != null">                #{agLegalCernum,jdbcType=VARCHAR},            </if>            <if test="agLegalMobile != null">                #{agLegalMobile,jdbcType=VARCHAR},            </if>            <if test="agHead != null">                #{agHead,jdbcType=VARCHAR},            </if>            <if test="agHeadMobile != null">                #{agHeadMobile,jdbcType=VARCHAR},            </if>            <if test="agRegAdd != null">                #{agRegAdd,jdbcType=VARCHAR},            </if>            <if test="agBusScope != null">                #{agBusScope,jdbcType=VARCHAR},            </if>            <if test="cloTaxPoint != null">                #{cloTaxPoint,jdbcType=DECIMAL},            </if>            <if test="agStatus != null">                #{agStatus,jdbcType=VARCHAR},            </if>            <if test="agDocPro != null">                #{agDocPro,jdbcType=VARCHAR},            </if>            <if test="agDocDistrict != null">                #{agDocDistrict,jdbcType=VARCHAR},            </if>            <if test="agRemark != null">                #{agRemark,jdbcType=VARCHAR},            </if>            <if test="cIncomTime != null">                #{cIncomTime,jdbcType=TIMESTAMP},            </if>            <if test="cTime != null">                #{cTime,jdbcType=TIMESTAMP},            </if>            <if test="cUtime != null">                #{cUtime,jdbcType=TIMESTAMP},            </if>            <if test="cIncomStatus != null">                #{cIncomStatus,jdbcType=DECIMAL},            </if>            <if test="cUser != null">                #{cUser,jdbcType=VARCHAR},            </if>            <if test="agZbh != null">                #{agZbh,jdbcType=VARCHAR},            </if>            <if test="status != null">                #{status,jdbcType=DECIMAL},            </if>            <if test="version != null">                #{version,jdbcType=DECIMAL},            </if>            <if test="caStatus != null">                #{caStatus,jdbcType=DECIMAL},            </if>            <if test="agRegArea != null">                #{agRegArea,jdbcType=VARCHAR},            </if>            <if test="freestatus != null">                #{freestatus,jdbcType=DECIMAL},            </if>            <if test="busRiskEmail != null">                #{busRiskEmail,jdbcType=VARCHAR},            </if>            <if test="busContactEmail != null">                #{busContactEmail,jdbcType=VARCHAR},            </if>            <if test="reportStatus != null">                #{reportStatus,jdbcType=DECIMAL},            </if>            <if test="reportTime != null">                #{reportTime,jdbcType=TIMESTAMP},            </if>        </trim>    </insert>    <select id="countByExample" parameterType="com.ryx.credit.pojo.admin.agent.AgentExample" resultType="java.lang.Long">        select count(*) from A_AGENT        <if test="_parameter != null">            <include refid="Example_Where_Clause" />        </if>    </select>    <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.pojo.admin.agent.Agent">        update A_AGENT        <set>            <if test="agUniqNum != null">                AG_UNIQ_NUM = #{agUniqNum,jdbcType=VARCHAR},            </if>            <if test="agName != null">                AG_NAME = #{agName,jdbcType=VARCHAR},            </if>            <if test="agNature != null">                AG_NATURE = #{agNature,jdbcType=DECIMAL},            </if>            <if test="agCapital != null">                AG_CAPITAL = #{agCapital,jdbcType=DECIMAL},            </if>            <if test="agBusLic != null">                AG_BUS_LIC = #{agBusLic,jdbcType=VARCHAR},            </if>            <if test="agBusLicb != null">                AG_BUS_LICB = #{agBusLicb,jdbcType=TIMESTAMP},            </if>            <if test="agBusLice != null">                AG_BUS_LICE = #{agBusLice,jdbcType=TIMESTAMP},            </if>            <if test="agLegal != null">                AG_LEGAL = #{agLegal,jdbcType=VARCHAR},            </if>            <if test="agLegalCertype != null">                AG_LEGAL_CERTYPE = #{agLegalCertype,jdbcType=DECIMAL},            </if>            <if test="agLegalCernum != null">                AG_LEGAL_CERNUM = #{agLegalCernum,jdbcType=VARCHAR},            </if>            <if test="agLegalMobile != null">                AG_LEGAL_MOBILE = #{agLegalMobile,jdbcType=VARCHAR},            </if>            <if test="agHead != null">                AG_HEAD = #{agHead,jdbcType=VARCHAR},            </if>            <if test="agHeadMobile != null">                AG_HEAD_MOBILE = #{agHeadMobile,jdbcType=VARCHAR},            </if>            <if test="agRegAdd != null">                AG_REG_ADD = #{agRegAdd,jdbcType=VARCHAR},            </if>            <if test="agBusScope != null">                AG_BUS_SCOPE = #{agBusScope,jdbcType=VARCHAR},            </if>            <if test="cloTaxPoint != null">                CLO_TAX_POINT = #{cloTaxPoint,jdbcType=DECIMAL},            </if>            <if test="agStatus != null">                AG_STATUS = #{agStatus,jdbcType=VARCHAR},            </if>            <if test="agDocPro != null">                AG_DOC_PRO = #{agDocPro,jdbcType=VARCHAR},            </if>            <if test="agDocDistrict != null">                AG_DOC_DISTRICT = #{agDocDistrict,jdbcType=VARCHAR},            </if>            <if test="agRemark != null">                AG_REMARK = #{agRemark,jdbcType=VARCHAR},            </if>            <if test="cIncomTime != null">                C_INCOM_TIME = #{cIncomTime,jdbcType=TIMESTAMP},            </if>            <if test="cTime != null">                C_TIME = #{cTime,jdbcType=TIMESTAMP},            </if>            <if test="cUtime != null">                C_UTIME = #{cUtime,jdbcType=TIMESTAMP},            </if>            <if test="cIncomStatus != null">                C_INCOM_STATUS = #{cIncomStatus,jdbcType=DECIMAL},            </if>            <if test="cUser != null">                C_USER = #{cUser,jdbcType=VARCHAR},            </if>            <if test="agZbh != null">                AG_ZBH = #{agZbh,jdbcType=VARCHAR},            </if>            <if test="status != null">                STATUS = #{status,jdbcType=DECIMAL},            </if>            <if test="version != null">                VERSION = VERSION +1 ,            </if>            <if test="caStatus != null">                CA_STATUS = #{caStatus,jdbcType=DECIMAL},            </if>            <if test="agRegArea != null">                AG_REG_AREA = #{agRegArea,jdbcType=VARCHAR},            </if>            <if test="freestatus != null">                FREESTATUS = #{freestatus,jdbcType=DECIMAL},            </if>            <if test="busRiskEmail != null">                BUS_RISK_EMAIL = #{busRiskEmail,jdbcType=VARCHAR},            </if>            <if test="busContactEmail != null">                BUS_CONTACT_EMAIL = #{busContactEmail,jdbcType=VARCHAR},            </if>            <if test="reportStatus != null">                REPORT_STATUS = #{reportStatus,jdbcType=DECIMAL},            </if>            <if test="reportTime != null">                REPORT_TIME = #{reportTime,jdbcType=TIMESTAMP},            </if>        </set>        where ID = #{id,jdbcType=VARCHAR} and VERSION = #{version,jdbcType=DECIMAL}    </update>    <update id="updateByPrimaryKey" parameterType="com.ryx.credit.pojo.admin.agent.Agent">        update A_AGENT        set AG_UNIQ_NUM = #{agUniqNum,jdbcType=VARCHAR},        AG_NAME = #{agName,jdbcType=VARCHAR},        AG_NATURE = #{agNature,jdbcType=DECIMAL},        AG_CAPITAL = #{agCapital,jdbcType=DECIMAL},        AG_BUS_LIC = #{agBusLic,jdbcType=VARCHAR},        AG_BUS_LICB = #{agBusLicb,jdbcType=TIMESTAMP},        AG_BUS_LICE = #{agBusLice,jdbcType=TIMESTAMP},        AG_LEGAL = #{agLegal,jdbcType=VARCHAR},        AG_LEGAL_CERTYPE = #{agLegalCertype,jdbcType=DECIMAL},        AG_LEGAL_CERNUM = #{agLegalCernum,jdbcType=VARCHAR},        AG_LEGAL_MOBILE = #{agLegalMobile,jdbcType=VARCHAR},        AG_HEAD = #{agHead,jdbcType=VARCHAR},        AG_HEAD_MOBILE = #{agHeadMobile,jdbcType=VARCHAR},        AG_REG_ADD = #{agRegAdd,jdbcType=VARCHAR},        AG_BUS_SCOPE = #{agBusScope,jdbcType=VARCHAR},        CLO_TAX_POINT = #{cloTaxPoint,jdbcType=DECIMAL},        AG_STATUS = #{agStatus,jdbcType=VARCHAR},        AG_DOC_PRO = #{agDocPro,jdbcType=VARCHAR},        AG_DOC_DISTRICT = #{agDocDistrict,jdbcType=VARCHAR},        AG_REMARK = #{agRemark,jdbcType=VARCHAR},        C_INCOM_TIME = #{cIncomTime,jdbcType=TIMESTAMP},        C_TIME = #{cTime,jdbcType=TIMESTAMP},        C_UTIME = #{cUtime,jdbcType=TIMESTAMP},        C_INCOM_STATUS = #{cIncomStatus,jdbcType=DECIMAL},        C_USER = #{cUser,jdbcType=VARCHAR},        AG_ZBH = #{agZbh,jdbcType=VARCHAR},        STATUS = #{status,jdbcType=DECIMAL},        VERSION = VERSION +1,        CA_STATUS = #{caStatus,jdbcType=DECIMAL},        AG_REG_AREA = #{agRegArea,jdbcType=VARCHAR},        FREESTATUS = #{freestatus,jdbcType=DECIMAL},        BUS_RISK_EMAIL = #{busRiskEmail,jdbcType=VARCHAR},        BUS_CONTACT_EMAIL = #{busContactEmail,jdbcType=VARCHAR},        REPORT_STATUS = #{reportStatus,jdbcType=DECIMAL},        REPORT_TIME = #{reportTime,jdbcType=TIMESTAMP}          where ID = #{id,jdbcType=VARCHAR} and VERSION = #{version,jdbcType=DECIMAL}    </update>    <sql id="OracleDialectPrefix">        <if test="page != null">            select * from ( select row_.*, rownum rownum_ from (        </if>    </sql>    <sql id="OracleDialectSuffix">        <if test="page != null">            <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>        </if>    </sql>    <sql id="deptName">agent.ID,agent.AG_UNIQ_NUM,agent.AG_NAME,agent.AG_NATURE,agent.AG_CAPITAL,agent.AG_BUS_LIC,agent.AG_BUS_LICB,agent.AG_BUS_LICE,agent.AG_LEGAL,agent.AG_LEGAL_CERTYPE,agent.AG_LEGAL_CERNUM,agent.AG_LEGAL_MOBILE,agent.AG_HEAD,agent.AG_HEAD_MOBILE,agent.AG_REG_ADD,agent.AG_BUS_SCOPE,agent.CLO_TAX_POINT,agent.AG_STATUS,agent.AG_DOC_PRO,agent.AG_DOC_DISTRICT,agent.AG_REMARK,agent.C_INCOM_TIME,agent.C_TIME,agent.C_UTIME,agent.C_INCOM_STATUS,agent.C_USER,agent.AG_ZBH,agent.STATUS,cor.NAME,cor.ADDRESS,cor.CODE,cor.ICON,cor.PID,cor.SEQ,cor.CREATE_TIME</sql>    <select id="queryDeptName" parameterType="string" resultType="map">        select        <include refid="deptName"/>        from A_AGENT agent left join C_ORGANIZATION cor on agent.AG_DOC_PRO= cor.id where cor.id=#{id}    </select>    <select id="queryDeptNameDis" parameterType="string" resultType="map">        select        <include refid="deptName"/>        from A_AGENT agent left join C_ORGANIZATION cor on agent.AG_DOC_DISTRICT= cor.id where cor.id=#{id}    </select>    <select id="excelAgent" parameterType="map" resultMap="AgentoutVo">        select * from(        select agent.ID,agent.AG_NAME,agent.AG_UNIQ_NUM,agent.AG_HEAD,bus.AGENT_ID,agent.AG_STATUS,agent.c_utime,        bus.BUS_PLATFORM,bus.BUS_NUM,bus.BUS_TYPE,bus.BUS_PARENT,        busRiskParentbusAgent.ag_name as busRiskParent,        busActivationParentbusAgent.ag_name as busActivationParent,        DECODE(bus.BUS_SENT_DIRECTLY,'1','是','0','否') as bus_sent_directly,DECODE(bus.bus_Inde_ass,'1','是','0','否') as        bus_Inde_ass,bus.BUS_SCOPE,bus.BUS_REGION,bus.CLO_PAY_COMPANY,        col.CLO_TYPE,        col.CLO_REALNAME,        col.CLO_BANK_ACCOUNT,        col.CLO_BANK,        col.BANK_REGION,        col.CLO_BANK_BRANCH,        col.ALL_LINE_NUM,col.BRANCH_LINE_NUM,col.CLO_TAX_POINT,col.CLO_INVOICE,platform.PLATFORM_NAME, comp.COM_NAME,        businfo_1.id as  busParent ,        businfo_2.id as twoParentId,        businfo_3.id as threeParentId,        a1.AG_NAME||businfo_1.id as busParentId,        a2.AG_NAME||businfo_2.id as twoParentName,        a3.AG_NAME||businfo_3.id as threeParentName,        agent.REPORT_STATUS,agent.REPORT_TIME,        agent.FREESTATUS        from A_AGENT agent        left join A_agent_businfo bus on (agent.id=bus.AGENT_ID )        left join A_agent_businfo busRiskParentbus on bus.BUS_RISK_PARENT = busRiskParentbus.id        left join A_AGENT busRiskParentbusAgent on busRiskParentbusAgent.id = busRiskParentbus.AGENT_ID        left join A_agent_businfo busActivationParentbus on bus.BUS_ACTIVATION_PARENT = busActivationParentbus.id        left join A_AGENT busActivationParentbusAgent on busActivationParentbusAgent.id = busActivationParentbus.AGENT_ID        left join A_AGENT_COLINFO col on(agent.id=col.AGENT_ID and col.status=1 )        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        left join A_PLATFORM  platform on platform.PLATFORM_NUM=bus.BUS_PLATFORM        left join A_PAY_COMP comp on comp.id=bus.CLO_PAY_COMPANY  and comp.status=1        left join a_agent_businfo businfo_1     on businfo_1.id=bus.bus_parent        left join a_agent_businfo businfo_2     on businfo_1.bus_parent=businfo_2.id        left join a_agent_businfo businfo_3     on businfo_2.bus_parent=businfo_3.id        left join a_agent a1 on a1.id=businfo_1.agent_id        left join a_agent a2 on a2.id=businfo_2.agent_id        left join a_agent a3 on a3.id=businfo_3.agent_id        <where>            1=1 and  agent.status=1            <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>            <if test="map.reportStatus!=null and map.reportStatus!=''">and agent.REPORT_STATUS = #{map.reportStatus}</if>            <if test="map.freeStatus!=null and map.freeStatus!=''">and agent.FREESTATUS = #{map.freeStatus}</if>            <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>            <if test="map.agStatusList!=null and map.agStatusList.size > 0">                and agent.AG_STATUS                <foreach collection="map.agStatusList" item="agStatus" open=" in(" close=")" separator=",">                    #{agStatus}                </foreach>            </if>            <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>            <if test="map.busPlatformList!=null and map.busPlatformList.size > 0"> and EXISTS(select CLO_REVIEW_STATUS from                A_AGENT_BUSINFO where                status=1 and                BUS_PLATFORM                <foreach collection="map.busPlatformList" item="BUS_PLATFORM" open=" in(" close=")" separator=",">                    #{BUS_PLATFORM}                </foreach>                and agent.id=agent_id)            </if>            <if test="map.busNum!=null and map.busNum!=''">and EXISTS(select CLO_REVIEW_STATUS from A_AGENT_BUSINFO where                status=1                and BUS_NUM=#{map.busNum} and agent.id=agent_id)            </if>            <if test="map.busNum!=null and map.busNum!='' and map.busPlatform!=null and map.busPlatform!=''">and                EXISTS(select                CLO_REVIEW_STATUS from                A_AGENT_BUSINFO where status=1 and                BUS_PLATFORM=#{map.busPlatform} and BUS_NUM=#{map.busNum} and agent.id=agent_id)            </if>            <if test="map.platfromPerm!=null and map.platfromPerm.size>0">                 and bus.BUS_PLATFORM in                <foreach collection="map.platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >                    #{platfromPermItem.PLATFORM_NUM}                </foreach>                <if test="map.organizationCode!=null and map.organizationCode!=''">                    and (oa.CODE like concat(#{map.organizationCode},'%') or ob.CODE like concat(#{map.organizationCode},'%') )                </if>                <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">                    and (bus.AG_DOC_PRO = #{map.agDocDistrict} or bus.AG_DOC_DISTRICT = #{map.agDocDistrict})                </if>            </if>            <if test="map.platfromPerm==null or map.platfromPerm.size==0">                and  1=-1            </if>        </where>        UNION        select agent.ID,agent.AG_NAME,agent.AG_UNIQ_NUM,agent.AG_HEAD,bus.AGENT_ID,agent.AG_STATUS,agent.c_utime,        bus.BUS_PLATFORM,bus.BUS_NUM,bus.BUS_TYPE,bus.BUS_PARENT,busRiskParentbusAgent.ag_name as busRiskParent,busActivationParentbusAgent.ag_name as busActivationParent,        DECODE(bus.BUS_SENT_DIRECTLY,'1','是','0','否') as bus_sent_directly,DECODE(bus.bus_Inde_ass,'1','是','0','否') as        bus_Inde_ass,bus.BUS_SCOPE,bus.BUS_REGION,bus.CLO_PAY_COMPANY,        col.CLO_TYPE,col.CLO_REALNAME,col.CLO_BANK_ACCOUNT,col.CLO_BANK,col.BANK_REGION,col.CLO_BANK_BRANCH,        col.ALL_LINE_NUM,col.BRANCH_LINE_NUM,col.CLO_TAX_POINT,col.CLO_INVOICE,platform.PLATFORM_NAME, comp.COM_NAME,        businfo_1.id as  busParent ,        businfo_2.id as twoParentId,        businfo_3.id as threeParentId,        a1.AG_NAME||businfo_1.id as busParentId,        a2.AG_NAME||businfo_2.id as twoParentName,        a3.AG_NAME||businfo_3.id as threeParentName,        agent.REPORT_STATUS,agent.REPORT_TIME,        agent.FREESTATUS        from A_AGENT agent        left join A_agent_businfo bus on (agent.id=bus.AGENT_ID )        left join A_agent_businfo busRiskParentbus on bus.BUS_RISK_PARENT = busRiskParentbus.id        left join A_AGENT busRiskParentbusAgent on busRiskParentbusAgent.id = busRiskParentbus.AGENT_ID        left join A_agent_businfo busActivationParentbus on bus.BUS_ACTIVATION_PARENT = busActivationParentbus.id        left join A_AGENT busActivationParentbusAgent on busActivationParentbusAgent.id = busActivationParentbus.AGENT_ID        left join A_AGENT_COLINFO col on(agent.id=col.AGENT_ID)        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        left join A_PLATFORM  platform on platform.PLATFORM_NUM=bus.BUS_PLATFORM        left join A_PAY_COMP comp on comp.id=bus.CLO_PAY_COMPANY  and comp.status=1        left join a_agent_businfo businfo_1     on businfo_1.id=bus.bus_parent        left join a_agent_businfo businfo_2     on businfo_1.bus_parent=businfo_2.id        left join a_agent_businfo businfo_3     on businfo_2.bus_parent=businfo_3.id        left join a_agent a1 on a1.id=businfo_1.agent_id        left join a_agent a2 on a2.id=businfo_2.agent_id        left join a_agent a3 on a3.id=businfo_3.agent_id        <where>            1=1 and  agent.status=1            <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>            <if test="map.reportStatus!=null and map.reportStatus!=''">and agent.REPORT_STATUS = #{map.reportStatus}</if>            <if test="map.freeStatus!=null and map.freeStatus!=''">and agent.FREESTATUS = #{map.freeStatus}</if>            <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>            <if test="map.agStatusList!=null and map.agStatusList.size > 0">                and agent.AG_STATUS                <foreach collection="map.agStatusList" item="agStatus" open=" in(" close=")" separator=",">                    #{agStatus}                </foreach>            </if>            <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>            <if test="map.busPlatformList!=null and map.busPlatformList.size > 0"> and EXISTS(select CLO_REVIEW_STATUS from                A_AGENT_BUSINFO where                status=1 and                BUS_PLATFORM                <foreach collection="map.busPlatformList" item="BUS_PLATFORM" open=" in(" close=")" separator=",">                    #{BUS_PLATFORM}                </foreach>                and agent.id=agent_id)            </if>            <if test="map.busNum!=null and map.busNum!=''">and EXISTS(select CLO_REVIEW_STATUS from A_AGENT_BUSINFO where                status=1                and BUS_NUM=#{map.busNum} and agent.id=agent_id)            </if>            <if test="map.busNum!=null and map.busNum!='' and map.busPlatform!=null and map.busPlatform!=''">and                EXISTS(select                CLO_REVIEW_STATUS from                A_AGENT_BUSINFO where status=1 and                BUS_PLATFORM=#{map.busPlatform} and BUS_NUM=#{map.busNum} and agent.id=agent_id)            </if>            <if test="map.userId!=null and map.userId!=''">                and agent.C_USER = #{map.userId}            </if>            <if test="map.platfromPerm!=null and map.platfromPerm.size>0">                and bus.BUS_PLATFORM in                <foreach collection="map.platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >                    #{platfromPermItem.PLATFORM_NUM}                </foreach>                <if test="map.organizationCode!=null and map.organizationCode!=''">                    and (oa.CODE like concat(#{map.organizationCode},'%') or ob.CODE like concat(#{map.organizationCode},'%') )                </if>                <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">                    and (bus.AG_DOC_PRO = #{map.agDocDistrict} or bus.AG_DOC_DISTRICT = #{map.agDocDistrict})                </if>            </if>            <if test="map.platfromPerm==null or map.platfromPerm.size==0">                and   1=-1            </if>        </where>)        a order by decode(AG_STATUS,'Create',1,'Approving',2,'Approved',3,'Refuse',4,'Reject',5),c_utime desc    </select>    <resultMap id="AgentoutVo" type="com.ryx.credit.pojo.admin.vo.AgentoutVo">        <id column="ID" property="id" jdbcType="VARCHAR"/>        <result column="AG_UNIQ_NUM" property="agUniqNum" jdbcType="VARCHAR"/>        <result column="AG_NAME" property="agName" jdbcType="VARCHAR"/>        <result column="AG_HEAD" property="agHead" jdbcType="VARCHAR"/>        <result column="BUS_NUM" property="busNum" jdbcType="VARCHAR"/>        <result column="BUS_PLATFORM" property="busPlatform" jdbcType="VARCHAR"/>        <result column="PLATFORM_NAME" property="platformName" jdbcType="VARCHAR"/>        <result column="BUS_TYPE" property="busType" jdbcType="VARCHAR"/>        <result column="BUS_PARENT" property="busParent" jdbcType="VARCHAR"/>        <result column="BUS_REGION" property="busRegion" jdbcType="VARCHAR"/>        <result column="BUS_INDE_ASS" property="busIndeAss" jdbcType="VARCHAR"/>        <result column="BUS_RISK_EMAIL" property="busRiskEmail" jdbcType="VARCHAR"/>        <result column="BUS_SCOPE" property="busScope" jdbcType="VARCHAR"/>        <result column="BUS_SENT_DIRECTLY" property="busSentDirectly" jdbcType="VARCHAR"/>        <result column="CLO_PAY_COMPANY" property="cloPayCompany" jdbcType="VARCHAR"/>        <result column="COM_NAME" property="comName" jdbcType="VARCHAR"/>        <result column="AGENT_ID" property="agentId" jdbcType="VARCHAR"/>        <result column="CLO_TYPE" property="cloType" jdbcType="DECIMAL"/>        <result column="CLO_REALNAME" property="cloRealname" jdbcType="VARCHAR"/>        <result column="CLO_BANK_ACCOUNT" property="cloBankAccount" jdbcType="VARCHAR"/>        <result column="CLO_BANK" property="cloBank" jdbcType="VARCHAR"/>        <result column="BANK_REGION" property="bankRegion" jdbcType="VARCHAR"/>        <result column="CLO_BANK_BRANCH" property="cloBankBranch" jdbcType="VARCHAR"/>        <result column="ALL_LINE_NUM" property="allLineNum" jdbcType="VARCHAR"/>        <result column="BRANCH_LINE_NUM" property="branchLineNum" jdbcType="VARCHAR"/>        <result column="CLO_TAX_POINT" property="cloTaxPoint" jdbcType="DECIMAL"/>        <result column="CLO_INVOICE" property="cloInvoice" jdbcType="DECIMAL"/>        <result column="REPORT_STATUS" property="reportStatus" jdbcType="DECIMAL" />        <result column="REPORT_TIME"  property="reportTime" jdbcType="TIMESTAMP"/>        <result column="FREESTATUS"  property="freeStatus" jdbcType="TIMESTAMP"/>    </resultMap>    <select id="queryAgentListViewCount" parameterType="map" resultType="int">        select count(id) from(        <include refid="queryAgentListSql"/>        )    </select>    <select id="queryAgentListView" parameterType="map" resultType="map">        <include refid="OracleDialectPrefix"/>        <include refid="queryAgentListSql"/>        <include refid="OracleDialectSuffix"/>    </select>    <sql id="queryAgentListSql">        select * from(        select agent.ID ,agent.AG_NAME ,agent.AG_UNIQ_NUM ,agent.AG_HEAD ,        agent.AG_HEAD_MOBILE ,agent.AG_REG_ADD ,        agent.AG_STATUS ,agent.AG_REMARK ,agent.C_INCOM_STATUS,        agent.C_TIME,b.name as AG_DOC_DISTRICT,a.name as AG_DOC_PRO,agent.C_UTIME, agent.FREESTATUS,to_char(agent.C_INCOM_TIME,'yyyy-MM-dd hh24:mi:ss') as C_INCOM_TIME        ,agent.REPORT_STATUS,to_char(agent.REPORT_TIME,'yyyy-MM-dd') as REPORT_TIME        from A_AGENT agent        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        where  agent.status=1        <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>        <if test="map.reportStatus!=null and map.reportStatus!=''">and agent.REPORT_STATUS = #{map.reportStatus}</if>        <if test="map.freestatus!=null and map.freestatus!=''">and agent.FREESTATUS = #{map.freestatus}</if>        <if test="map.cIncomStatus!=null and map.cIncomStatus!=''">and agent.C_INCOM_STATUS = #{map.cIncomStatus}</if>        <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>        <if test="map.agStatusList!=null and map.agStatusList.size > 0">            and agent.AG_STATUS            <foreach collection="map.agStatusList" item="agStatus" open=" in(" close=")" separator=",">                #{agStatus}            </foreach>        </if>        <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>        <if test="map.busPlatformList!=null and map.busPlatformList.size > 0"> and EXISTS(select CLO_REVIEW_STATUS from            A_AGENT_BUSINFO where            status=1 and            BUS_PLATFORM            <foreach collection="map.busPlatformList" item="BUS_PLATFORM" open=" in(" close=")" separator=",">                #{BUS_PLATFORM}            </foreach>            and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!=''">and EXISTS(select CLO_REVIEW_STATUS from A_AGENT_BUSINFO where            status=1            and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!='' and map.busPlatform!=null and map.busPlatform!=''">and            EXISTS(select            CLO_REVIEW_STATUS from            A_AGENT_BUSINFO where status=1 and            BUS_PLATFORM=#{map.busPlatform} and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.platfromPerm!=null and map.platfromPerm.size>0">            and EXISTS(            select A_AGENT_BUSINFO.ID from A_AGENT_BUSINFO            left join C_ORGANIZATION oa on oa.id=A_AGENT_BUSINFO.ag_doc_pro            left join C_ORGANIZATION ob on ob.id=A_AGENT_BUSINFO.AG_DOC_DISTRICT            where agent.id=A_AGENT_BUSINFO.AGENT_ID and A_AGENT_BUSINFO.BUS_PLATFORM in            <foreach collection="map.platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >                #{platfromPermItem.PLATFORM_NUM}            </foreach>            <if test="map.organizationCode!=null and map.organizationCode!=''">                and (oa.CODE like concat(#{map.organizationCode},'%') or ob.CODE like concat(#{map.organizationCode},'%') )            </if>            <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">                and (A_AGENT_BUSINFO.AG_DOC_PRO = #{map.agDocDistrict} or A_AGENT_BUSINFO.AG_DOC_DISTRICT = #{map.agDocDistrict})            </if>            )        </if>        <if test="map.platfromPerm==null or map.platfromPerm.size==0">            and  1=-1        </if>        UNION        select agent.ID ,agent.AG_NAME ,agent.AG_UNIQ_NUM ,agent.AG_HEAD ,        agent.AG_HEAD_MOBILE ,agent.AG_REG_ADD ,        agent.AG_STATUS ,agent.AG_REMARK ,agent.C_INCOM_STATUS,        agent.C_TIME,b.name as AG_DOC_DISTRICT,a.name as AG_DOC_PRO,agent.C_UTIME, agent.FREESTATUS,to_char(agent.C_INCOM_TIME,'yyyy-MM-dd hh24:mi:ss') as C_INCOM_TIME        ,agent.REPORT_STATUS,to_char(agent.REPORT_TIME,'yyyy-MM-dd') as REPORT_TIME        from A_AGENT agent        left join C_ORGANIZATION a on a.id=agent.ag_doc_pro        left join C_ORGANIZATION b on b.id=agent.AG_DOC_DISTRICT        where  agent.status=1        <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>        <if test="map.reportStatus!=null and map.reportStatus!=''">and agent.REPORT_STATUS = #{map.reportStatus}</if>        <if test="map.freestatus!=null and map.freestatus!=''">and agent.FREESTATUS = #{map.freestatus}</if>        <if test="map.cIncomStatus!=null and map.cIncomStatus!=''">and agent.C_INCOM_STATUS = #{map.cIncomStatus}</if>        <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>        <if test="map.agStatusList!=null and map.agStatusList.size > 0">            and agent.AG_STATUS            <foreach collection="map.agStatusList" item="agStatus" open=" in(" close=")" separator=",">                #{agStatus}            </foreach>        </if>        <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>        <if test="map.busPlatformList!=null and map.busPlatformList.size > 0"> and EXISTS(select CLO_REVIEW_STATUS from            A_AGENT_BUSINFO where            status=1 and            BUS_PLATFORM            <foreach collection="map.busPlatformList" item="BUS_PLATFORM" open=" in(" close=")" separator=",">                #{BUS_PLATFORM}            </foreach>            and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!=''">and EXISTS(select CLO_REVIEW_STATUS from A_AGENT_BUSINFO where            status=1            and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.busNum!=null and map.busNum!='' and map.busPlatform!=null and map.busPlatform!=''">and            EXISTS(select            CLO_REVIEW_STATUS from            A_AGENT_BUSINFO where status=1 and            BUS_PLATFORM=#{map.busPlatform} and BUS_NUM=#{map.busNum} and agent.id=agent_id)        </if>        <if test="map.userId!=null and map.userId!=''">            and agent.C_USER = #{map.userId}        </if>        <if test="map.platfromPerm!=null and map.platfromPerm.size>0">            and EXISTS(            select A_AGENT_BUSINFO.ID from A_AGENT_BUSINFO            left join C_ORGANIZATION oa on oa.id=A_AGENT_BUSINFO.ag_doc_pro            left join C_ORGANIZATION ob on ob.id=A_AGENT_BUSINFO.AG_DOC_DISTRICT            where agent.id=A_AGENT_BUSINFO.AGENT_ID and A_AGENT_BUSINFO.BUS_PLATFORM in            <foreach collection="map.platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >                #{platfromPermItem.PLATFORM_NUM}            </foreach>            <if test="map.organizationCode!=null and map.organizationCode!=''">                and (oa.CODE like concat(#{map.organizationCode},'%') or ob.CODE like concat(#{map.organizationCode},'%') )            </if>            <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">                and (A_AGENT_BUSINFO.AG_DOC_PRO = #{map.agDocDistrict} or A_AGENT_BUSINFO.AG_DOC_DISTRICT = #{map.agDocDistrict})            </if>            )        </if>        <if test="map.platfromPerm==null or map.platfromPerm.size==0">            and   1=-1        </if>        )        a order by decode(AG_STATUS,'Create',1,'Approving',2,'Approved',3,'Refuse',4,'Reject',5),C_INCOM_TIME desc nulls last    </sql>    <!--附代理信息-->    <select id="countByExampleT" parameterType="com.ryx.credit.pojo.admin.agent.AgentExample"            resultType="java.lang.Integer">        select count(*) from A_AGENT        <if test="_parameter != null">            <include refid="Example_Where_Clause"/>        </if>    </select>    <!--附代理商信息-->    <select id="selectByExampleT" resultMap="BaseResultMap" parameterType="com.ryx.credit.pojo.admin.agent.AgentExample">        <include refid="OracleDialectPrefix"/>        select        <if test="distinct">            distinct        </if>        <include refid="Base_Column_List"/>        from A_AGENT        <if test="_parameter != null">            <include refid="Example_Where_Clause"/>        </if>        <if test="orderByClause != null">            order by ${orderByClause}        </if>        <include refid="OracleDialectSuffix"/>    </select>    <select id="queryAgentTierList" resultMap="BaseResultMap" parameterType="map">        <include refid="OracleDialectPrefix"/>        select        <include refid="Base_Column_List"/>        from A_AGENT        <include refid="queryAgentTierListWhere"/>        order by c_time desc        <include refid="OracleDialectSuffix"/>    </select>    <select id="queryAgentTierCount" resultType="java.lang.Integer" parameterType="map">        select count(*) from A_AGENT        <include refid="queryAgentTierListWhere"/>    </select>    <sql id="queryAgentTierListWhere">        <where>            status = #{map.status}            and ag_status in            <foreach collection="map.agStatusList" index="index" item="agStatus" open="(" separator="," close=")">                #{agStatus}            </foreach>            <if test="map.agUniqNum!=null and map.agUniqNum!=''">                and ag_uniq_num = #{map.agUniqNum}            </if>            <if test="map.agName!=null and map.agName!=''">                and ag_name LIKE CONCAT(CONCAT('%',#{map.agName}),'%')            </if>            <if test="map.platfromPerm!=null and map.platfromPerm.size>0">                and EXISTS(                select A_AGENT_BUSINFO.ID from A_AGENT_BUSINFO                left join C_ORGANIZATION oa on oa.id=A_AGENT_BUSINFO.ag_doc_pro                left join C_ORGANIZATION ob on ob.id=A_AGENT_BUSINFO.AG_DOC_DISTRICT                where A_AGENT.id=A_AGENT_BUSINFO.AGENT_ID and A_AGENT_BUSINFO.BUS_PLATFORM in                <foreach collection="map.platfromPerm" item="platfromPermItem" open="(" separator="," close=")" >                    #{platfromPermItem.PLATFORM_NUM}                </foreach>                <if test="map.organizationCode!=null and map.organizationCode!=''">                    and (oa.CODE like concat(#{map.organizationCode},'%') or ob.CODE like concat(#{map.organizationCode},'%') )                </if>                )            </if>            <if test="map.platfromPerm==null or map.platfromPerm.size==0">                1=-1            </if>        </where>    </sql>    <!-- 通过OrganizationID查询agent -->    <select id="selectAgentByOrgId" resultType="map" parameterType="map">        SELECT            A.STATUS AS "agentStatus", A.AG_STATUS AS "agentAGStatus", CUA.STATUS AS "cuaStatus", CU.STATUS AS "userStatus"        FROM            A_AGENT A, C_USER_AGENT CUA, C_USER CU        WHERE            CU.ID = CUA.USERID AND            CUA.AGENTID = A.ID AND            CU.ID = #{map.ID, jdbcType=VARCHAR} AND            CU.ORGANIZATION_ID = #{map.orgId, jdbcType=VARCHAR}    </select>    <sql id="queryCaManagerListSql">        SELECT        <include refid="Base_Column_List"/>,        b.CER_SUCCESS_TM        FROM A_AGENT AGENT        left join (select * from  (select t.CER_PRO_STAT,        t.Agent_Id,        t.req_cer_tm,        t.CER_SUCCESS_TM,        row_number() OVER(PARTITION BY t.agent_id ORDER BY t.agent_id, t.req_cer_tm desc) as row_flg        from a_agent_certification t ) AGENTCER  where AGENTCER.row_flg = '1'        and AGENTCER.CER_PRO_STAT = 2) b        on AGENT.Ag_Uniq_Num = b.Agent_Id        WHERE AGENT.STATUS = 1 and AGENT.AG_UNIQ_NUM is not null        <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>        <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>        <if test="map.time!=null and map.time!=''">and to_char(agent.C_INCOM_TIME,'YYYY-MM-dd')=#{map.time}</if>        <if test="map.caStatus!=null and map.caStatus!=''">and agent.CA_STATUS = #{map.caStatus}</if>        <if test="map.agBusLic!=null and map.agBusLic!=''">and agent.AG_BUS_LIC = #{map.agBusLic}</if>        <if test="map.agBusLicb!=null and map.agBusLicb!=''">and to_char(agent.AG_BUS_LICB,'YYYY-MM-dd')=#{map.agBusLicb}</if>        <if test="map.agBusLice!=null and map.agBusLice!=''">and to_char(agent.AG_BUS_LICE,'YYYY-MM-dd')=#{map.agBusLice}</if>    </sql>    <select id="queryCaManagerList" resultType="map" parameterType="map">        <include refid="OracleDialectPrefix"/>        <include refid="queryCaManagerListSql"/>        <include refid="OracleDialectSuffix"/>    </select>    <select id="queryCaManagerListCount" parameterType="map" resultType="int">        select count(id) from(        <include refid="queryCaManagerListSql"/>        )    </select>    <select id="expoerCaList" resultMap="AgentCaVoMap" parameterType="map">        <include refid="queryCaManagerListSql"/>    </select>    <resultMap id="AgentCaVoMap" type="com.ryx.credit.pojo.admin.vo.AgentCaVo">        <id column="ID" jdbcType="VARCHAR" property="id" />        <result column="AG_UNIQ_NUM" jdbcType="VARCHAR" property="agUniqNum" />        <result column="AG_NAME" jdbcType="VARCHAR" property="agName" />        <result column="AG_NATURE" jdbcType="DECIMAL" property="agNature" />        <result column="AG_CAPITAL" jdbcType="DECIMAL" property="agCapital" />        <result column="AG_BUS_LIC" jdbcType="VARCHAR" property="agBusLic" />        <result column="AG_BUS_LICB" jdbcType="VARCHAR" property="agBusLicb" />        <result column="AG_BUS_LICE" jdbcType="VARCHAR" property="agBusLice" />        <result column="AG_LEGAL" jdbcType="VARCHAR" property="agLegal" />        <result column="AG_LEGAL_CERTYPE" jdbcType="DECIMAL" property="agLegalCertype" />        <result column="AG_LEGAL_CERNUM" jdbcType="VARCHAR" property="agLegalCernum" />        <result column="AG_LEGAL_MOBILE" jdbcType="VARCHAR" property="agLegalMobile" />        <result column="AG_HEAD" jdbcType="VARCHAR" property="agHead" />        <result column="AG_HEAD_MOBILE" jdbcType="VARCHAR" property="agHeadMobile" />        <result column="AG_REG_ADD" jdbcType="VARCHAR" property="agRegAdd" />        <result column="AG_BUS_SCOPE" jdbcType="VARCHAR" property="agBusScope" />        <result column="CLO_TAX_POINT" jdbcType="DECIMAL" property="cloTaxPoint" />        <result column="AG_STATUS" jdbcType="VARCHAR" property="agStatus" />        <result column="AG_DOC_PRO" jdbcType="VARCHAR" property="agDocPro" />        <result column="AG_DOC_DISTRICT" jdbcType="VARCHAR" property="agDocDistrict" />        <result column="AG_REMARK" jdbcType="VARCHAR" property="agRemark" />        <result column="C_INCOM_TIME" jdbcType="VARCHAR" property="cIncomTime" />        <result column="C_TIME" jdbcType="VARCHAR" property="cTime" />        <result column="C_UTIME" jdbcType="VARCHAR" property="cUtime" />        <result column="C_INCOM_STATUS" jdbcType="DECIMAL" property="cIncomStatus" />        <result column="C_USER" jdbcType="VARCHAR" property="cUser" />        <result column="AG_ZBH" jdbcType="VARCHAR" property="agZbh" />        <result column="STATUS" jdbcType="DECIMAL" property="status" />        <result column="VERSION" jdbcType="DECIMAL" property="version" />        <result column="CA_STATUS" jdbcType="DECIMAL" property="caStatus" />        <result column="AG_REG_AREA" jdbcType="VARCHAR" property="agRegArea" />        <result column="FREESTATUS" jdbcType="DECIMAL" property="freestatus" />        <result column="BUS_RISK_EMAIL" jdbcType="VARCHAR" property="busRiskEmail" />        <result column="BUS_CONTACT_EMAIL" jdbcType="VARCHAR" property="busContactEmail" />        <result column="REPORT_STATUS" jdbcType="DECIMAL" property="reportStatus" />        <result column="REPORT_TIME" jdbcType="VARCHAR" property="reportTime" />        <result column="CER_SUCCESS_TM" jdbcType="VARCHAR" property="cerSuccessTm" />    </resultMap>    <select id="selectByAgent" parameterType="com.ryx.credit.pojo.admin.agent.Agent" resultMap="BaseResultMap">        select        <include refid="Base_Column_List" />        from A_AGENT agent        where 1=1        <if test="agUniqNum!=null and agUniqNum!=''">and agent.AG_UNIQ_NUM = #{agUniqNum}</if>        <if test="id!=null and id!=''">and agent.ID  = #{id}</if>    </select>    <!--数据报表-->    <select id="queryEchartDataCount" parameterType="map" resultType="int">        select count(1) from(        <include refid="queryEchartDataList"/>        )    </select>    <select id="queryEchartDataList" parameterType="map" resultType="map">        <include refid="OracleDialectPrefix"/>        <include refid="queryEchartDataList"/>        <include refid="OracleDialectSuffix"/>    </select>    <sql id="queryEchartDataList">        select * from        (        select        bus.id,        case platform.platform_type        when 'POS' THEN 'POS'        when 'ZHPOS' THEN 'POS'        when 'ZPOS' THEN 'POS'        when 'SSPOS' THEN 'POS'        else platform.platform_type        end PLATFORM_TYPE,        a1.AG_UNIQ_NUM as PARENT_AG_UNIQ_NUM,        a1.AG_NAME as PARENT_AG_NAME,        agent.AG_UNIQ_NUM AG_UNIQ_NUM,        agent.AG_NAME AG_NAME,        agent.FREESTATUS FREESTATUS,        bus.bus_platform BUS_PLATFORM,        bus.bus_type BUS_TYPE,bus.bus_status BUS_STATUS,        e.name AG_DOC_PRO,        g.name AG_DOC_DISTRICT,        to_char(bus.approve_time,'yyyy-MM-dd hh24:mi:ss') as APPROVE_TIME,        platform.PLATFORM_NAME        from a_agent_businfo bus        LEFT JOIN  a_agent agent ON agent.id = bus.agent_id        LEFT JOIN a_agent_businfo businfo_1 ON businfo_1.id = bus.bus_parent        LEFT JOIN a_agent a1 ON a1.id = businfo_1.agent_id        LEFT JOIN c_organization e ON e.id = bus.ag_doc_pro        LEFT JOIN c_organization g ON g.id = bus.ag_doc_district        LEFT JOIN a_platform platform ON platform.platform_num = bus.bus_platform        where agent.status=1 and bus.status=1 and bus.CLO_REVIEW_STATUS=3        <if test="map.agUniqNum!=null and map.agUniqNum!=''">and agent.AG_UNIQ_NUM = #{map.agUniqNum}</if>        <if test="map.agName!=null and map.agName!=''">and agent.AG_NAME LIKE CONCAT(CONCAT('%',#{map.agName}),'%')</if>        <if test="map.agDocDistrict!=null and map.agDocDistrict!=''">and (bus.AG_DOC_PRO = #{map.agDocDistrict} or bus.AG_DOC_DISTRICT = #{map.agDocDistrict})</if>        <if test="map.agDocPro!=null and map.agDocPro!=''">and (bus.AG_DOC_PRO = #{map.agDocPro})</if>        <if test="map.approveTimeStart != null and map.approveTimeStart != '' " >and to_char(bus.approve_time,'yyyy-MM-dd') &gt;= #{map.approveTimeStart}</if>        <if test="map.approveTimeEnd != null and map.approveTimeEnd != '' " >and to_char(bus.approve_time,'yyyy-MM-dd') &lt;= #{map.approveTimeEnd}</if>        <if test="map.busPlatform!=null and map.busPlatform!=''">and bus.BUS_PLATFORM=#{map.busPlatform}</if>        <if test="map.platformType!=null and map.platformType!=''">and            (case platform.platform_type            when 'POS' THEN 'POS'            when 'ZHPOS' THEN 'POS'            when 'ZPOS' THEN 'POS'            when 'SSPOS' THEN 'POS'            else platform.platform_type            end )=#{map.platformType}        </if>        ) agentinfo        left join        (        select        O.bus_id,        sum(case o.REVIEW_STATUS when 3 then nvl(os.PRO_NUM,0) else 0 end) as rapprove,        sum(case o.REVIEW_STATUS when 2 then nvl(os.PRO_NUM,0) else 0 end) as rapproving        from o_order o        left join O_Sub_Order os on o.id=os.order_id and os.status=1        group by O.Bus_Id        )orderinfo on agentinfo.id = orderinfo.bus_id        left join  (        select        a.bus_id,        sum(nvl(b.pro_num,0)) as phl,        sum(nvl(b.send_num,0)) as pdl        from o_order a        left join O_Receipt_pro b on a.id = b.orderId and b.status=1        where a.status=1 and a.REVIEW_STATUS=3        group by a.bus_id        )proinfo on orderinfo.Bus_Id = proinfo.bus_id        left join (        select   O.bus_id,        sum(case roder.ret_schedule when 1 then nvl(ro.return_count,0) else 0 end) as thspz,        sum(case roder.ret_schedule when 5 then nvl(ro.return_count,0) else 0 end) as yth        from o_order o left join        o_return_order_detail ro        on o.id=ro.order_id and ro.status=1        left join o_return_order roder on roder.id=ro.return_id        group by o.bus_id)rorderinfo on rorderinfo.bus_id=proinfo.bus_id        left join(select   o.bus_id,        sum(nvl(plan.send_pro_num,0))as fhl        from o_order o left join        O_RECEIPT_PLAN plan on        plan.order_id=o.id and plan.status=1        group by o.bus_id) planinfo on planinfo.bus_id=rorderinfo.bus_id    </sql></mapper>