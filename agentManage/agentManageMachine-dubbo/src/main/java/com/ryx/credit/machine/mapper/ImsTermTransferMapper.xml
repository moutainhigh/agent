<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryx.credit.machine.dao.ImsTermTransferMapper">
  <resultMap id="BaseResultMap" type="com.ryx.credit.machine.entity.ImsTermTransfer">
    <id column="TRANSFER_ID" jdbcType="VARCHAR" property="transferId" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="ORG_ID" jdbcType="VARCHAR" property="orgId" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_PERSON" jdbcType="VARCHAR" property="createPerson" />
    <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
    <result column="UPDATE_PERSON" jdbcType="VARCHAR" property="updatePerson" />
    <result column="TRANSFER_TYPE" jdbcType="VARCHAR" property="transferType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRANSFER_ID, STATUS, ORG_ID, CREATE_TIME, CREATE_PERSON, UPDATE_TIME, UPDATE_PERSON, 
    TRANSFER_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.ryx.credit.machine.entity.ImsTermTransferExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IMS_TERM_TRANSFER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from IMS_TERM_TRANSFER
    where TRANSFER_ID = #{transferId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByExample" parameterType="com.ryx.credit.machine.entity.ImsTermTransferExample">
    delete from IMS_TERM_TRANSFER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryx.credit.machine.entity.ImsTermTransfer">
    insert into IMS_TERM_TRANSFER (TRANSFER_ID, STATUS, ORG_ID, 
      CREATE_TIME, CREATE_PERSON, UPDATE_TIME, 
      UPDATE_PERSON, TRANSFER_TYPE)
    values (#{transferId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createPerson,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, 
      #{updatePerson,jdbcType=VARCHAR}, #{transferType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryx.credit.machine.entity.ImsTermTransfer">
    insert into IMS_TERM_TRANSFER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transferId != null">
        TRANSFER_ID,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="orgId != null">
        ORG_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createPerson != null">
        CREATE_PERSON,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updatePerson != null">
        UPDATE_PERSON,
      </if>
      <if test="transferType != null">
        TRANSFER_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transferId != null">
        #{transferId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updatePerson != null">
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="transferType != null">
        #{transferType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryx.credit.machine.entity.ImsTermTransferExample" resultType="java.lang.Long">
    select count(*) from IMS_TERM_TRANSFER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryx.credit.machine.entity.ImsTermTransfer">
    update IMS_TERM_TRANSFER
    <set>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        ORG_ID = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createPerson != null">
        CREATE_PERSON = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updatePerson != null">
        UPDATE_PERSON = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="transferType != null">
        TRANSFER_TYPE = #{transferType,jdbcType=VARCHAR},
      </if>
    </set>
    where TRANSFER_ID = #{transferId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryx.credit.machine.entity.ImsTermTransfer">
    update IMS_TERM_TRANSFER
    set STATUS = #{status,jdbcType=VARCHAR},
      ORG_ID = #{orgId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_PERSON = #{createPerson,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      UPDATE_PERSON = #{updatePerson,jdbcType=VARCHAR},
      TRANSFER_TYPE = #{transferType,jdbcType=VARCHAR}
    where TRANSFER_ID = #{transferId,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>